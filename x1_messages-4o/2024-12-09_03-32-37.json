[
    {
        "role": "user",
        "content": "How can I calculate the percentage change between two values, specifically a current and a previous value, while accounting for conditions where the previous value might be zero (which would cause a Division By Zero error) or when the values do not change (which currently gives me a result of 100%)? I am currently using the formula `(current/previous)*100`."
    },
    {
        "role": "assistant",
        "content": "To calculate the percentage change between two values, especially when dealing with scenarios where the previous value might be zero or when there's no change between the values, you need to adjust the formula to handle these special cases. Here's how you can do it:\n\n1. **Standard Percentage Change Formula**: \n   \\[\n   \\text{Percentage Change} = \\left(\\frac{\\text{Current} - \\text{Previous}}{\\text{Previous}}\\right) \\times 100\n   \\]\n\n2. **Handling Zero Previous Value**: \n   - If the previous value is zero, the percentage change is not well-defined because you cannot divide by zero. In such cases, you should consider:\n     - If the current value is also zero, the percentage change is 0% since there is no change.\n     - If the current value is not zero, you could say the change is infinite or undefined, but practically you might want to represent it as a 100% increase if you want to indicate the presence of a value where there was none before.\n\n3. **Handling No Change in Values**:\n   - If the current value is equal to the previous value, the percentage change should be 0%, since there's no difference between the two values.\n\nHere's a simple way to implement this logic programmatically:\n\n```python\ndef percentage_change(current, previous):\n    if previous == 0:\n        if current == 0:\n            return 0  # No change as both are zero\n        else:\n            return float('inf')  # Infinite or undefined change\n    else:\n        change = ((current - previous) / previous) * 100\n        return change if change != 0 else 0  # Ensure 0% is returned for no change\n\n# Example usage\nprint(percentage_change(150, 100))  # Normal case\nprint(percentage_change(0, 0))      # Both zero\nprint(percentage_change(150, 0))    # Previous zero\nprint(percentage_change(100, 100))  # No change\n```\n\nThis approach ensures that you handle all edge cases appropriately and that your percentage change calculation is meaningful in all scenarios."
    }
]