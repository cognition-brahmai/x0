[
    {
        "role": "user",
        "content": "How can I use the `str.startswith` function with a list of strings to test for, instead of using multiple if statements and comparisons in Python? I have the following code:\n\n```python\nif link.lower().startswith(\"js/\") or link.lower().startswith(\"catalog/\") or link.lower().startswith(\"script/\") or link.lower().startswith(\"scripts/\") or link.lower().startswith(\"katalog/\"):\n    # then \"do something\"\n```\n\nI would like it to be more simplified and cleaner like this:\n\n```python\nif link.lower().startswith() in [\"js\",\"catalog\",\"script\",\"scripts\",\"katalog\"]:\n    # then \"do something\"\n```"
    },
    {
        "role": "assistant",
        "content": "To simplify your code and avoid multiple `startswith` calls, you can use a tuple with the `str.startswith` method. The `startswith` method can accept a tuple of prefixes to check against. Here's how you can rewrite your code:\n\n```python\nprefixes = (\"js/\", \"catalog/\", \"script/\", \"scripts/\", \"katalog/\")\nif link.lower().startswith(prefixes):\n    # then \"do something\"\n```\n\nThis approach is cleaner and more efficient, as it uses a single `startswith` call with a tuple of prefixes."
    }
]