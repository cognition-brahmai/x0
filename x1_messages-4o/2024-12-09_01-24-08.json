[
    {
        "role": "user",
        "content": "I've installed OpenCV version 2.4.5 on the Occidentalis operating system (a variant of Raspbian) on a Raspberry Pi, using a script provided by jayrambhia. However, when I attempt to `import cv2` in a Python program, I encounter an error message reading \"ImportError: No module named cv2\". The cv2.so file is stored in /usr/local/lib/python2.7/site-packages. I also noticed that there are folders in /usr/local/lib called python3.2 and python2.6. Could this possibly be a path error and how can I resolve this issue? I'm a newcomer to Linux."
    },
    {
        "role": "assistant",
        "content": "The error you're encountering is likely due to Python not being able to find the `cv2` module because it's not in the correct path for your Python installation. Here are some steps to help resolve the issue:\n\n1. **Verify Python Version**: First, make sure you are running the version of Python that you installed OpenCV for. You mentioned the `cv2.so` file is in `/usr/local/lib/python2.7/site-packages`, indicating it's meant for Python 2.7. Ensure you're running Python 2.7 by executing:\n   ```bash\n   python --version\n   ```\n   If it shows a different version, make sure to switch to Python 2.7 by running `python2.7` instead of `python`.\n\n2. **Set PYTHONPATH**: You might need to set the `PYTHONPATH` environment variable to include the directory where `cv2.so` is located. You can do this by adding the following line to your `.bashrc` or `.bash_profile` file:\n   ```bash\n   export PYTHONPATH=$PYTHONPATH:/usr/local/lib/python2.7/site-packages\n   ```\n   After adding this line, don't forget to source the file to apply the changes:\n   ```bash\n   source ~/.bashrc\n   ```\n\n3. **Check for Multiple Python Installations**: It's possible there are multiple versions of Python installed on your system, and the default `python` command points to a different version. To specifically use Python 2.7, you can try:\n   ```bash\n   python2.7 -c \"import cv2\"\n   ```\n   If this works, it confirms the version conflict.\n\n4. **Symbolic Link (if needed)**: If Python still can't find `cv2`, you can try creating a symbolic link in one of the directories already in Python's search path. First, find out what directories Python is searching by running:\n   ```python\n   python -c \"import sys; print(sys.path)\"\n   ```\n   Then, create a symbolic link for `cv2.so` in one of these directories:\n   ```bash\n   sudo ln -s /usr/local/lib/python2.7/site-packages/cv2.so /usr/lib/python2.7/dist-packages/\n   ```\n\n5. **Reinstall OpenCV for the Correct Python Version**: If the above steps don't work, it might be easier to reinstall OpenCV, ensuring it's built for the correct Python version. Follow the installation script's instructions carefully, specifying Python 2.7 if needed.\n\nAfter following these steps, try running your Python script again to see if the `ImportError` is resolved."
    }
]