[
    {
        "role": "user",
        "content": "How can I count non-zero values in each column of a DataFrame in Python? I am working with a DataFrame in pandas, where the first column is \"user_id\" and the rest of the columns are tags ranging from \"Tag_0\" to \"Tag_122\". The data is structured like the following:\n\n```\nUserId  Tag_0   Tag_1\n7867688 0   5\n7867688 0   3\n7867688 3   0\n7867688 3.5 3.5\n7867688 4   4\n7867688 3.5 0\n```\n\nI am trying to compute the sum of tags divided by the count of non-zero tags for each user_id. I can get the sum of tags using `df.groupby('user_id').sum()`, but I'm not sure how to count the non-zero values. Is it possible to compute `Sum(Tag)/Count(NonZero(Tags))` in one command? In MySQL, I would perform this operation using the following command:\n\n```\nselect user_id, sum(tag)/count(nullif(tag,0)) from table group by 1\n```\n\nI would appreciate any help on how to achieve this in Python with pandas."
    },
    {
        "role": "assistant",
        "content": "To achieve this in Python using pandas, you can use the `groupby` functionality along with some additional operations to count non-zero values for each user. Here's how you can compute `Sum(Tag)/Count(NonZero(Tags))` for each `user_id`:\n\n```python\nimport pandas as pd\n\n# Sample DataFrame\ndata = {\n    'UserId': [7867688, 7867688, 7867688, 7867688, 7867688, 7867688],\n    'Tag_0': [0, 0, 3, 3.5, 4, 3.5],\n    'Tag_1': [5, 3, 0, 3.5, 4, 0]\n}\n\ndf = pd.DataFrame(data)\n\n# Group by 'UserId'\ngrouped = df.groupby('UserId')\n\n# Calculate sum of tags for each user\nsum_tags = grouped.sum()\n\n# Calculate count of non-zero tags for each user\nnon_zero_count = grouped.apply(lambda x: (x != 0).sum())\n\n# Divide sum of tags by count of non-zero tags\nresult = sum_tags.divide(non_zero_count)\n\nprint(result)\n```\n\n### Explanation:\n\n1. **Sum of Tags:** \n   - We use `groupby('UserId').sum()` to get the sum of each tag for each user.\n\n2. **Count of Non-Zero Tags:**\n   - We apply a lambda function to each group using `groupby.apply`. The lambda function `(x != 0).sum()` counts non-zero values in each column for each user.\n\n3. **Division:**\n   - Finally, we divide the sum of tags by the count of non-zero values using `divide`.\n\nThis code will give you a DataFrame with `UserId` as the index and the result of `Sum(Tag)/Count(NonZero(Tags))` for each tag as columns."
    }
]