[
    {
        "role": "user",
        "content": "How can I configure setuptools to install a package from another source that's also available on pypi with the same version number? I would like to use a forked version of a particular package but setuptools ignore the dependency link as it has the same version number. Is there a way to force setuptools to use the link from the dependency_links or is the only solution to change the version number in the forked repository?\nThe relevant code is:\n```\nrequires = [\n    ...\n    'pyScss==1.1.3'\n    ...\n\ndependencies = [\n    'https://github.com/nadavshatz/pyScss/zipball/master#egg=pyScss-1.1.3'\n]\n```\nAlso, I've noticed that this works if this package is the only one in the required list that is not installed yet. If there's another missing package, it will download it from PyPI. Can you provide a solution for this?"
    },
    {
        "role": "assistant",
        "content": "To solve this issue with `setuptools`, you can try the following approaches:\n\n1. **Use `--no-deps` with pip**:\n   When installing your package, you can use `pip` with the `--no-deps` option to ensure it doesn\u2019t automatically resolve dependencies from PyPI. Then, manually install the forked dependency from the given URL. Here's how you can do it:\n   ```bash\n   pip install --no-deps your_package\n   pip install https://github.com/nadavshatz/pyScss/zipball/master#egg=pyScss-1.1.3\n   ```\n\n2. **Specify the dependency directly in your `setup.py`**:\n   You can directly use the URL in the `install_requires` section instead of listing it separately in `dependency_links`. This approach is preferred since `dependency_links` is now deprecated:\n   ```python\n   install_requires = [\n       ...\n       'pyScss @ https://github.com/nadavshatz/pyScss/zipball/master#egg=pyScss-1.1.3',\n       ...\n   ]\n   ```\n\n3. **Use a custom version number**:\n   If the above methods do not work or if you want a cleaner solution, consider modifying the version number in your forked repository. This way, `setuptools` can differentiate between the original and your forked version.\n\n4. **Use a `requirements.txt` file**:\n   If you are using a `requirements.txt` file for managing dependencies, you can directly specify the URL in the file:\n   ```plaintext\n   -e git+https://github.com/nadavshatz/pyScss.git@master#egg=pyScss\n   ```\n\n5. **Use `--find-links` option with pip**:\n   You can use the `--find-links` option with `pip` to specify additional URLs to search for packages:\n   ```bash\n   pip install --find-links=https://github.com/nadavshatz/pyScss/zipball/master#egg=pyScss-1.1.3 your_package\n   ```\n\n6. **Patch the setup.py on the fly**:\n   If you have access to the setup process, you can modify the `setup.py` script to force it to use your specific URL by inserting logic to check and install your forked package first.\n\nThese methods offer various ways to ensure that your forked version is installed instead of the PyPI version. Choose the one that best fits your development workflow."
    }
]