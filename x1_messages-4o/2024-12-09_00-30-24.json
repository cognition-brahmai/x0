[
    {
        "role": "user",
        "content": "How can I plot and annotate hierarchical clustering dendrograms in scipy/matplotlib? I am currently using `dendrogram` from `scipy` to plot hierarchical clustering using `matplotlib`. However, I am facing three issues. The first one is that `mat` and `1-mat` are producing identical clusterings, and I do not understand why. The second one is about annotating the distance along each branch of the tree using `dendrogram` so that the distances between pairs of nodes can be compared. The third issue is that the `show_leaf_counts` flag seems to be ignored and I am not sure how to turn it on so that the number of objects in each class is shown. \n\nHere is the code I am currently using:\n```python\nmat = array([[1, 0.5, 0.9],\n             [0.5, 1, -0.5],\n             [0.9, -0.5, 1]])\nplt.subplot(1,2,1)\nplt.title(\"mat\")\ndist_mat = mat\nlinkage_matrix = linkage(dist_mat,\n                         \"single\")\nprint \"linkage2:\"\nprint linkage(1-dist_mat, \"single\")\ndendrogram(linkage_matrix,\n           color_threshold=1,\n           labels=[\"a\", \"b\", \"c\"],\n           show_leaf_counts=True)\nplt.subplot(1,2,2)\nplt.title(\"1 - mat\")\ndist_mat = 1 - mat\nlinkage_matrix = linkage(dist_mat,\n                         \"single\")\ndendrogram(linkage_matrix,\n           color_threshold=1,\n           labels=[\"a\", \"b\", \"c\"],\n           show_leaf_counts=True)\n```"
    },
    {
        "role": "assistant",
        "content": "Let's address your issues one by one and improve your code accordingly:\n\n### Issue 1: Identical Clusterings for `mat` and `1 - mat`\n\nThe issue here might be related to how the distance matrix is being interpreted. Hierarchical clustering works on the assumption that the input is a distance matrix. In your case, `mat` is not a valid distance matrix because it contains negative values and non-zero diagonal values. A distance matrix should be symmetric, positive, and have zeros on the diagonal. You should convert your matrix to a proper distance matrix using a metric such as Euclidean or cosine if the data is not already a distance matrix.\n\n### Issue 2: Annotating Distances\n\nTo annotate the distances on the dendrogram branches, you can use the `dendrogram` function's `dcoord` attribute, which holds the distances. You can then loop through these coordinates and use `matplotlib` to annotate them.\n\n### Issue 3: `show_leaf_counts` Ignored\n\nThe `show_leaf_counts` parameter should normally display the number of original observations in each cluster. If it is not working as expected, ensure that your `linkage_matrix` is correctly formed. Let's modify your code to fix this.\n\nHere is a revised version of your code:\n\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.cluster.hierarchy import linkage, dendrogram\n\n# Example data\nmat = np.array([[0, 0.5, 0.9],\n                [0.5, 0, 0.7],\n                [0.9, 0.7, 0]])\n\n# Use a valid distance matrix: Ensure it is symmetric and has zeros on the diagonal\n# Convert similarity matrix to distance matrix by subtracting from 1 if needed.\ndist_mat = 1 - mat\n\n# Perform hierarchical clustering\nlinkage_matrix = linkage(dist_mat, method='single')\n\n# Plot dendrogram with annotations\nplt.figure(figsize=(12, 6))\n\n# Plot for mat\nplt.subplot(1, 2, 1)\nplt.title(\"mat\")\ndend = dendrogram(linkage_matrix, color_threshold=1, labels=[\"a\", \"b\", \"c\"], show_leaf_counts=True)\n\n# Annotate distances\nfor i, d in zip(dend['icoord'], dend['dcoord']):\n    x = 0.5 * sum(i[1:3])\n    y = d[1]\n    plt.annotate(f\"{y:.2f}\", (x, y), va='bottom', ha='center')\n\n# Plot for 1 - mat\nplt.subplot(1, 2, 2)\nplt.title(\"1 - mat\")\ndist_mat = 1 - dist_mat  # This will revert to the original matrix\nlinkage_matrix = linkage(dist_mat, method='single')\ndend = dendrogram(linkage_matrix, color_threshold=1, labels=[\"a\", \"b\", \"c\"], show_leaf_counts=True)\n\n# Annotate distances\nfor i, d in zip(dend['icoord'], dend['dcoord']):\n    x = 0.5 * sum(i[1:3])\n    y = d[1]\n    plt.annotate(f\"{y:.2f}\", (x, y), va='bottom', ha='center')\n\nplt.tight_layout()\nplt.show()\n```\n\n### Explanation:\n- **Distance Matrix**: Ensure the matrix is a valid distance matrix. In this code, I've assumed you meant to convert `mat` to a distance matrix by subtracting from 1.\n- **Annotations**: Use the dendrogram's `dcoord` to get distances and annotate them.\n- **Show Leaf Counts**: Ensure `linkage_matrix` is calculated correctly; the flag should work if everything else is correct.\n\nMake sure to adjust your input matrix to be a valid distance matrix to see meaningful clustering results."
    }
]