[
    {
        "role": "user",
        "content": "Is there a way to calculate the distance between two cities using geolocation data in Python?"
    },
    {
        "role": "assistant",
        "content": "Yes, you can calculate the distance between two cities using geolocation data (latitude and longitude) in Python. One common method is to use the Haversine formula, which calculates the great-circle distance between two points on the Earth's surface. Here's a simple example using the `haversine` library:\n\nFirst, you'll need to install the `haversine` library if you haven't already:\n\n```bash\npip install haversine\n```\n\nThen, you can use the following code to calculate the distance:\n\n```python\nfrom haversine import haversine, Unit\n\ndef calculate_distance(city1_coords, city2_coords):\n    # city1_coords and city2_coords should be tuples of (latitude, longitude)\n    distance = haversine(city1_coords, city2_coords, unit=Unit.KILOMETERS)\n    return distance\n\n# Example coordinates (latitude, longitude)\ncity1 = (28.6139, 77.2090)  # New Delhi, India\ncity2 = (19.0760, 72.8777)  # Mumbai, India\n\ndistance = calculate_distance(city1, city2)\nprint(f\"The distance between New Delhi and Mumbai is {distance:.2f} kilometers.\")\n```\n\nThis script calculates the distance in kilometers between New Delhi and Mumbai using their respective latitude and longitude coordinates. You can replace these coordinates with those of any other cities you are interested in. You can also change the unit from kilometers to miles or nautical miles by setting `unit=Unit.MILES` or `unit=Unit.NAUTICAL_MILES` in the `haversine` function."
    }
]