[
    {
        "role": "user",
        "content": "I am a beginner in Python plotting and I am trying to figure out how to get a Cartesian coordinate plane in matplotlib. Specifically, I want to create a plot with perpendicular reference lines (coordinate axis) that end up with arrows, intersecting at the origin, (0,0), with the origin at the center of the plot. Essentially, I am looking to create a plot similar to a plane used for high school geometry. Can anyone guide me on how to achieve this?"
    },
    {
        "role": "assistant",
        "content": "Creating a Cartesian coordinate plane with perpendicular reference lines and arrows at the end of the axes in Matplotlib is a great way to visualize data, especially for educational purposes. Here's how you can achieve this:\n\n1. **Set up the plot:** Use `matplotlib.pyplot` to create a figure and axis.\n2. **Draw the axes:** Use the `axhline` and `axvline` functions to draw horizontal and vertical lines through the origin.\n3. **Add arrows:** Use the `annotate` function to add arrowheads to the ends of the axes.\n4. **Center the origin:** Adjust the limits of the plot to ensure the origin is at the center.\n\nHere's a complete example:\n\n```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and an axis\nfig, ax = plt.subplots()\n\n# Set limits to center the origin\nax.set_xlim(-10, 10)\nax.set_ylim(-10, 10)\n\n# Draw horizontal and vertical lines through the origin\nax.axhline(0, color='black', linewidth=0.8)\nax.axvline(0, color='black', linewidth=0.8)\n\n# Add arrowheads using the annotate function\nax.annotate('', xy=(9.5, 0), xytext=(0, 0),\n            arrowprops=dict(facecolor='black', shrink=0.05, width=1, headwidth=8))\nax.annotate('', xy=(0, 9.5), xytext=(0, 0),\n            arrowprops=dict(facecolor='black', shrink=0.05, width=1, headwidth=8))\n\n# Add labels for axes\nax.text(9.5, 0.5, 'X', fontsize=12, ha='center')\nax.text(0.5, 9.5, 'Y', fontsize=12, va='center')\n\n# Set aspect of the plot to be equal\nax.set_aspect('equal', adjustable='box')\n\n# Remove top and right spines\nax.spines['top'].set_color('none')\nax.spines['right'].set_color('none')\n\n# Move left and bottom spines to zero position\nax.spines['left'].set_position('zero')\nax.spines['bottom'].set_position('zero')\n\n# Add grid\nax.grid(True, which='both', linestyle='--', linewidth=0.5)\n\n# Display the plot\nplt.show()\n```\n\n### Explanation:\n- **axhline(0)** and **axvline(0):** These functions plot horizontal and vertical lines at y=0 and x=0 respectively.\n- **annotate():** This function is used to draw arrows. The parameters `xy` and `xytext` specify the start and end points of the arrow.\n- **spines['top'].set_color('none')** removes the top and right spines to make the plot look like a traditional Cartesian plane.\n- **set_aspect('equal', adjustable='box')** ensures that the units are the same along both axes.\n\nThis should give you a Cartesian plane with arrows at the ends of the axes, with the origin centered in the middle of the plot. Adjust the limits and arrow properties as needed to fit your specific requirements."
    }
]