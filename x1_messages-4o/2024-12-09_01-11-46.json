[
    {
        "role": "user",
        "content": "How can I plot multiple different plots in one figure using Seaborn? I am trying to recreate a specific plot from the book \"Introduction to Statistical learning\" using Seaborn's `lmplot` for the first two plots and `boxplot` for the third. However, I am facing difficulty as `lmplot` creates a `facetgrid` and I have to manually add another matplotlib axes for the `boxplot`. Is there an easier way to achieve this? The code I am currently using involves a lot of manual manipulation.\n\nBelow is my current code:\n\n```python\nseaborn_grid = sns.lmplot('value', 'wage', col='variable', hue='education', data=df_melt, sharex=False)\nseaborn_grid.fig.set_figwidth(8)\n\nleft, bottom, width, height = seaborn_grid.fig.axes[0]._position.bounds\nleft2, bottom2, width2, height2 = seaborn_grid.fig.axes[1]._position.bounds\nleft_diff = left2 - left\nseaborn_grid.fig.add_axes((left2 + left_diff, bottom, width, height))\n\nsns.boxplot('education', 'wage', data=df_wage, ax = seaborn_grid.fig.axes[2])\nax2 = seaborn_grid.fig.axes[2]\nax2.set_yticklabels([])\nax2.set_xticklabels(ax2.get_xmajorticklabels(), rotation=30)\nax2.set_ylabel('')\nax2.set_xlabel('');\n\nleg = seaborn_grid.fig.legends[0]\nleg.set_bbox_to_anchor([0, .1, 1.5,1])\n```\n\nThe sample data I am using is:\n\n```python\ndf_melt = {'education': {0: '1. < HS Grad', 1: '4. College Grad', 2: '3. Some College', 3: '4. College Grad', 4: '2. HS Grad'},\n 'value': {0: 18, 1: 24, 2: 45, 3: 43, 4: 50},\n 'variable': {0: 'age', 1: 'age', 2: 'age', 3: 'age', 4: 'age'},\n 'wage': {0: 75.043154017351497, 1: 70.476019646944508, 2: 130.982177377461, \n  3: 154.68529299562999, 4: 75.043154017351497}}\n\ndf_wage={'education': {0: '1. < HS Grad', 1: '4. College Grad', 2: '3. Some College', 3: '4. College Grad', 4: '2. HS Grad'},\n 'wage': {0: 75.043154017351497, 1: 70.476019646944508, 2: 130.982177377461, 3: 154.68529299562999, 4: 75.043154017351497}}\n```"
    },
    {
        "role": "assistant",
        "content": "To create multiple different plots in one figure more efficiently, you can use the `matplotlib` `subplots` to manage the layout and then place the Seaborn plots on these axes. This approach gives you more control over the placement and size of each plot without manually manipulating the positions. Here's how you can achieve this:\n\n```python\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport pandas as pd\n\n# Convert dictionaries to DataFrames\ndf_melt = pd.DataFrame({'education': {0: '1. < HS Grad', 1: '4. College Grad', 2: '3. Some College', 3: '4. College Grad', 4: '2. HS Grad'},\n                        'value': {0: 18, 1: 24, 2: 45, 3: 43, 4: 50},\n                        'variable': {0: 'age', 1: 'age', 2: 'age', 3: 'age', 4: 'age'},\n                        'wage': {0: 75.043154017351497, 1: 70.476019646944508, 2: 130.982177377461, \n                                 3: 154.68529299562999, 4: 75.043154017351497}})\n\ndf_wage = pd.DataFrame({'education': {0: '1. < HS Grad', 1: '4. College Grad', 2: '3. Some College', 3: '4. College Grad', 4: '2. HS Grad'},\n                        'wage': {0: 75.043154017351497, 1: 70.476019646944508, 2: 130.982177377461, \n                                 3: 154.68529299562999, 4: 75.043154017351497}})\n\n# Create a 1x3 grid of subplots\nfig, axes = plt.subplots(1, 3, figsize=(12, 4))\n\n# Plot the first lmplot\nsns.regplot(x='value', y='wage', data=df_melt[df_melt['variable'] == 'age'], ax=axes[0], hue='education')\naxes[0].set_title('Age vs Wage')\n\n# Plot the second lmplot\nsns.regplot(x='value', y='wage', data=df_melt[df_melt['variable'] == 'age'], ax=axes[1], hue='education')\naxes[1].set_title('Age vs Wage Again')\n\n# Plot the boxplot\nsns.boxplot(x='education', y='wage', data=df_wage, ax=axes[2])\naxes[2].set_title('Education vs Wage')\naxes[2].set_xticklabels(axes[2].get_xticklabels(), rotation=30)\n\n# Adjust layout\nplt.tight_layout()\n\n# Show plot\nplt.show()\n```\n\n### Explanation:\n\n1. **Subplot Creation**: The `plt.subplots` function is used to create a grid of subplots. In this case, it's a 1x3 grid.\n\n2. **Plotting with Seaborn**: The `sns.regplot` function is used instead of `lmplot` directly on the axes provided by the subplots. This allows you to use Seaborn's capabilities without the constraints of `FacetGrid`.\n\n3. **Boxplot**: The `sns.boxplot` is placed on the third subplot.\n\n4. **Layout Adjustment**: `plt.tight_layout()` is used to ensure that the subplots do not overlap and are neatly arranged.\n\nThis method provides a cleaner and more manageable way to combine different types of plots in a single figure."
    }
]