[
    {
        "role": "user",
        "content": "How can I convert a string of integers separated by spaces into a list of integers in Python? For example, if I have a string '1 2 3 45 87 65 6 8', I want to be able to apply a function and get the result as [1, 2, 3, 45, 87, 65, 6, 8]. When I try to do it by index, numbers with more than one digit get broken down. Can anyone provide a solution for this?"
    },
    {
        "role": "assistant",
        "content": "To convert a string of integers separated by spaces into a list of integers in Python, you can use the `split()` method to separate the string into individual components based on spaces, and then use the `map()` function to convert each component from a string to an integer. Here is how you can do it:\n\n```python\n# Your input string\ninput_string = '1 2 3 45 87 65 6 8'\n\n# Split the string into a list of strings\nstring_list = input_string.split()\n\n# Convert each string in the list to an integer\ninteger_list = list(map(int, string_list))\n\nprint(integer_list)\n```\n\nThis code will output:\n\n```\n[1, 2, 3, 45, 87, 65, 6, 8]\n```\n\nThe `split()` method divides the input string into a list of substrings based on spaces, and `map(int, string_list)` applies the `int` function to each element in the list, converting them from strings to integers. The `list()` function is then used to convert the map object into a list."
    }
]