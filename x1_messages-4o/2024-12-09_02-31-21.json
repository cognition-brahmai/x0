[
    {
        "role": "user",
        "content": "How can I change the line width of lines in the legend of a matplotlib pyplot? I want to set the thickness of the line sample in the legend to be different than the line width on the actual plot. For instance, if the line 'y1' on my plot has a linewidth of 1.0, I want the corresponding 'y1' label in the legend to have a linewidth of 7.0. How can I achieve this? The code I'm currently using is as follows:\n\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# make some data\nx = np.linspace(0, 2*np.pi)\n\ny1 = np.sin(x)\ny2 = np.cos(x)\n\n# plot sin(x) and cos(x)\nfig = plt.figure()\nax  = fig.add_subplot(111)\nax.plot(x, y1, c='b', label='y1',linewidth=7.0)\nax.plot(x, y2, c='r', label='y2')\n\nleg = plt.legend()\nplt.show()\n```\nThis generates a plot where the linewidth of the line samples in the legend are identical to the lines they represent on the plot. However, I want the legend lines to be thicker. I found solutions for changing the linewidth of the legend bounding box using `leg.get_frame().set_linewidth(7.0)`, but this doesn't affect the linewidth of the lines within the legend."
    },
    {
        "role": "assistant",
        "content": "To change the line width of the lines in the legend without affecting the actual plot lines, you can modify the legend handles after creating the legend. You can manually set the linewidth for the legend lines using the `set_linewidth` method on the legend handles. Here's how you can do it:\n\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Make some data\nx = np.linspace(0, 2*np.pi)\n\ny1 = np.sin(x)\ny2 = np.cos(x)\n\n# Plot sin(x) and cos(x)\nfig = plt.figure()\nax = fig.add_subplot(111)\nline1, = ax.plot(x, y1, c='b', label='y1', linewidth=1.0)\nline2, = ax.plot(x, y2, c='r', label='y2', linewidth=1.0)\n\n# Create the legend\nleg = plt.legend()\n\n# Modify the linewidth of legend lines\nfor leg_line in leg.get_lines():\n    leg_line.set_linewidth(7.0)\n\nplt.show()\n```\n\nIn this code, after creating the legend with `plt.legend()`, we loop through each line in the legend using `leg.get_lines()` and set the desired linewidth using `set_linewidth(7.0)`. This way, the lines in the legend will have the specified thickness, independent of the plot lines."
    }
]