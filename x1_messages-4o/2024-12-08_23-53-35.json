[
    {
        "role": "user",
        "content": "Write pseudocode to describe the following algorithm:\nGiven an array of strings \"words\", the algorithm should return the index of the first word in \"words\" that contains a consecutive set of three vowels in reverse alphabetical order."
    },
    {
        "role": "assistant",
        "content": "Certainly! Below is a pseudocode to describe the algorithm that finds the index of the first word in an array of strings that contains a consecutive set of three vowels in reverse alphabetical order:\n\n```plaintext\nFunction FindIndexWithReverseVowels(words):\n    vowels = \"aeiou\"\n    reverseVowels = \"uoiea\"\n\n    For each index i from 0 to length of words - 1:\n        word = words[i]\n        \n        For each j from 0 to length of word - 3:\n            If word[j] is in reverseVowels AND word[j+1] is in reverseVowels AND word[j+2] is in reverseVowels:\n                If word[j] > word[j+1] AND word[j+1] > word[j+2]:\n                    Return i\n\n    Return -1  // Return -1 if no such word is found\n```\n\n### Explanation:\n1. **Initialize Vowels**: Define the strings `vowels` and `reverseVowels` which contain the vowels in both normal and reverse order.\n2. **Iterate Over Words**: Loop through each word in the `words` array using index `i`.\n3. **Check Consecutive Vowels**: For each word, iterate through its characters using index `j` to check for consecutive characters.\n4. **Check Reverse Order**: If the three consecutive characters are vowels and are in reverse alphabetical order (e.g., 'u', 'o', 'i'), return the index `i`.\n5. **Return Result**: If no such word is found, return `-1`. \n\nThis pseudocode assumes that the input array `words` is non-empty and processes the strings accordingly."
    }
]