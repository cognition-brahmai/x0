[
    {
        "role": "user",
        "content": "How do I properly use a WTForms FieldList of FormFields in Flask? I am trying to build a form that allows users to enter a company with two locations. However, when I print the locations data, I only get one dictionary with empty values. I'm able to print the values for the first location using the locationForm, but I'm unsure how to get the data for the second location. Why does the list of locations only have one dictionary instead of two, and why are the values in the location dictionary empty? Here is the code I've written:\n\n```python\nclass LocationForm(Form):\n    location_id = StringField('location_id')\n    city = StringField('city')\n\nclass CompanyForm(Form):\n    company_name = StringField('company_name')\n    locations = FieldList(FormField(LocationForm))\n```\n\nAnd here's the HTML form:\n\n```html\n<form action=\"\" method=\"post\" role=\"form\">\n    {{ companyForm.hidden_tag() }}\n    {{ companyForm.company_name() }}\n    {{ locationForm.location_id() }}\n    {{ locationForm.city() }}\n    {{ locationForm.location_id() }}\n    {{ locationForm.city() }}\n    <input type=\"submit\" value=\"Submit!\" />\n</form>\n```\n\nWhen I print the locations data:\n\n```python\nprint companyForm.locations.data\n```\n\nI get:\n\n```python\n[{'location_id': u'', 'city': u''}]\n```\n\nAnd when I print the values of the first location:\n\n```python\nprint locationForm.location_id.data\nprint locationForm.city.data\n```\n\nI'm not sure what I'm doing wrong. Any help would be appreciated."
    },
    {
        "role": "assistant",
        "content": "The issue you're encountering is primarily due to the way the form fields are rendered and processed in your HTML form. Specifically, you need to ensure that each location form field is correctly associated with its corresponding entry in the `FieldList`. Here\u2019s how you can fix the problem:\n\n### Steps to Resolve the Issue:\n\n1. **Ensure Unique Field Names for Each Location:**\n   Each location form field needs to have a unique name that corresponds to its position in the `FieldList`. This is automatically handled by WTForms when you iterate over the `FieldList`.\n\n2. **Iterate Over the `FieldList` in the Template:**\n   Instead of manually placing the fields from `locationForm` in your HTML, you should iterate over `companyForm.locations` to dynamically render each `LocationForm`.\n\n### Updated Code:\n\nHere's how you can modify your HTML template to properly handle the `FieldList`:\n\n```html\n<form action=\"\" method=\"post\" role=\"form\">\n    {{ companyForm.hidden_tag() }}\n    {{ companyForm.company_name.label }} {{ companyForm.company_name() }}\n    {% for location_form in companyForm.locations %}\n        <div>\n            {{ location_form.location_id.label }} {{ location_form.location_id() }}\n            {{ location_form.city.label }} {{ location_form.city() }}\n        </div>\n    {% endfor %}\n    <input type=\"submit\" value=\"Submit!\" />\n</form>\n```\n\n### Explanation:\n\n- **Iteration Over `FieldList`:** The `for` loop in the template iterates over `companyForm.locations`, rendering each `LocationForm` within the list. This ensures that each rendered form field has a unique HTML name attribute like `locations-0-location_id`, `locations-1-location_id`, etc., which WTForms uses to map form data back to the `FieldList`.\n\n- **Form Submission Handling:**\n  When the form is submitted, Flask and WTForms will correctly parse the POST data into the `FieldList` structure, allowing you to access the data for each location.\n\n### Example of Accessing Data:\n\nWhen you access the data, you should now see correctly populated dictionaries for each location:\n\n```python\nprint(companyForm.locations.data)\n```\n\nThis should output a list of dictionaries, each containing the data for one location:\n\n```python\n[\n    {'location_id': 'value1', 'city': 'city1'},\n    {'location_id': 'value2', 'city': 'city2'}\n]\n```\n\nBy following this approach, you ensure that each location's data is correctly captured and processed by WTForms, resolving the issue with missing or empty data."
    }
]