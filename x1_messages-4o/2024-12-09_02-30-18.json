[
    {
        "role": "user",
        "content": "How can I check if a specific path in Python refers to a directory or a regular file?"
    },
    {
        "role": "assistant",
        "content": "In Python, you can use the `os` module or the `pathlib` module to check if a specific path refers to a directory or a regular file.\n\n### Using the `os` module:\n\n```python\nimport os\n\npath = 'your_path_here'\n\n# Check if it's a directory\nif os.path.isdir(path):\n    print(f\"{path} is a directory.\")\n# Check if it's a regular file\nelif os.path.isfile(path):\n    print(f\"{path} is a regular file.\")\nelse:\n    print(f\"{path} is neither a file nor a directory.\")\n```\n\n### Using the `pathlib` module (Python 3.4+):\n\n```python\nfrom pathlib import Path\n\npath = Path('your_path_here')\n\n# Check if it's a directory\nif path.is_dir():\n    print(f\"{path} is a directory.\")\n# Check if it's a regular file\nelif path.is_file():\n    print(f\"{path} is a regular file.\")\nelse:\n    print(f\"{path} is neither a file nor a directory.\")\n```\n\nBoth methods are effective, but `pathlib` offers a more modern and object-oriented approach to handling filesystem paths in Python."
    }
]