[
    {
        "role": "user",
        "content": "What is the simplest method to perform a case-insensitive string replacement in Python?"
    },
    {
        "role": "assistant",
        "content": "In Python, performing a case-insensitive string replacement can be efficiently done using the `re` module, which provides support for regular expressions. Here's a simple method to achieve this:\n\n```python\nimport re\n\ndef case_insensitive_replace(original_string, old_substring, new_substring):\n    # Use re.sub with the re.IGNORECASE flag to replace case-insensitively\n    pattern = re.compile(re.escape(old_substring), re.IGNORECASE)\n    result = pattern.sub(new_substring, original_string)\n    return result\n\n# Example usage\noriginal_string = \"Hello World, hello world!\"\nold_substring = \"hello\"\nnew_substring = \"hi\"\n\nreplaced_string = case_insensitive_replace(original_string, old_substring, new_substring)\nprint(replaced_string)\n```\n\nIn this code:\n\n- We use `re.compile()` to compile a regular expression pattern with `re.IGNORECASE` flag, which makes the search case-insensitive.\n- `re.escape()` is used to escape any special characters in the old substring, ensuring they are treated as literal characters.\n- `pattern.sub()` is used to replace the `old_substring` with `new_substring` in `original_string`, regardless of the case.\n\nThis will replace all occurrences of \"hello\" in any case (\"Hello\", \"HELLO\", \"hello\", etc.) with \"hi\"."
    }
]