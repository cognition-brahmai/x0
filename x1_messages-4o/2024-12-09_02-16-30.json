[
    {
        "role": "user",
        "content": "I'm trying to install the Tensorflow GPU version on my Windows 7 machine which has Anaconda installed and a GTX1070 graphics card. I followed the instructions on the Tensorflow website, installed CUDA 8.0, Cudll 6.0 and added the location of cudnn64_6.dll, cudart64_80.dll and the libnvvp folder to my path variables. I set up a virtual environment in conda and ran the command:\n\n```python\n(tensorflow)C:> pip install --ignore-installed --upgrade tensorflow-gpu \n```\n\nHowever, I believe this installs Tensorflow 1.5, which seems to require CUDA tools 9.0 because I get an error saying that cudart64_80.dll cannot be found. I updated my CUDA tools to 9.0 and downloaded the corresponding Cuda library, and then modified my path variables. Now, I don't get any missing dll errors but I am faced with a new error:\n\n```python\nModuleNotFoundError: No module named 'absl'\n```\n\nCan anyone suggest what I can do to solve this error?"
    },
    {
        "role": "assistant",
        "content": "The error you're encountering, `ModuleNotFoundError: No module named 'absl'`, suggests that the `absl-py` library, which is a dependency for TensorFlow, is not installed in your environment. To resolve this issue, you can manually install the `absl-py` package using pip within your activated TensorFlow environment. Here's how you can do it:\n\n1. First, ensure your virtual environment is activated. You can do this by:\n\n   ```bash\n   activate tensorflow\n   ```\n\n   If you named your environment something other than `tensorflow`, replace it with your environment's name.\n\n2. Once your environment is activated, install the `absl-py` library:\n\n   ```bash\n   pip install absl-py\n   ```\n\n3. After the installation is complete, try running your TensorFlow code again to see if the error is resolved.\n\nAdditionally, ensure that all required TensorFlow dependencies are installed. You can do this by installing TensorFlow again with all dependencies:\n\n```bash\npip install --upgrade tensorflow-gpu\n```\n\nIf you continue to face issues, you might want to check the compatibility of all your installed packages, CUDA, and cuDNN versions with TensorFlow 1.5. It's sometimes helpful to create a fresh conda environment and start the installation process from scratch to make sure no leftover configurations are causing issues.\n\nHere's a quick summary of the steps for creating a fresh conda environment:\n\n1. Create a new conda environment:\n\n   ```bash\n   conda create -n tf_gpu tensorflow-gpu\n   ```\n\n2. Activate the new environment:\n\n   ```bash\n   activate tf_gpu\n   ```\n\n3. Verify the installation:\n\n   ```python\n   python -c \"import tensorflow as tf; print(tf.config.list_physical_devices('GPU'))\"\n   ```\n\nIf you see your GPU listed, the installation is successful. If you encounter any other issues, ensure your NVIDIA drivers are up-to-date and compatible with CUDA 9.0, and double-check your environment variables for any discrepancies."
    }
]