[
    {
        "role": "user",
        "content": "How can I convert a string variable storing currency (in dollars) into a decimal in Python? For instance, I have a string variable 'dollars' storing the value '$5.99'. I want to convert this string into a decimal so that I can perform operations on it, such as addition.\n\n<pre><code>dollars = '$5.99'\n</code></pre>"
    },
    {
        "role": "assistant",
        "content": "To convert a string variable storing a currency value (e.g., '$5.99') into a decimal in Python, you can use the `decimal` module which provides support for fast correctly-rounded decimal floating point arithmetic. Here's a step-by-step guide on how to do this:\n\n1. Import the `Decimal` class from the `decimal` module.\n2. Remove the currency symbol from the string.\n3. Convert the string to a `Decimal`.\n\nHere's how you can achieve this:\n\n```python\nfrom decimal import Decimal\n\n# Your string variable storing the currency\ndollars = '$5.99'\n\n# Remove the '$' symbol\ndollars = dollars.replace('$', '')\n\n# Convert the string to a Decimal\ndecimal_value = Decimal(dollars)\n\n# Now you can perform operations on decimal_value\nprint(decimal_value)  # Output: 5.99\n\n# Example of an operation\nadditional_amount = Decimal('2.50')\ntotal = decimal_value + additional_amount\nprint(total)  # Output: 8.49\n```\n\nThis code snippet will convert the string `'$5.99'` into a `Decimal` object, allowing you to perform precise arithmetic operations. Using `Decimal` is preferred over `float` for currency-related operations to avoid floating-point precision issues."
    }
]