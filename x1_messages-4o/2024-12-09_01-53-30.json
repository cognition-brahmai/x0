[
    {
        "role": "user",
        "content": "How can I recover the old behavior of interactive plots in Spyder/IPython/matplotlib after upgrading from Python(x,y) 2.7.2.3 to 2.7.6.0 on Windows 7? Previously, when I ran a script, it produced subplots side-by-side in an interactive window. Now, it generates tiny inline PNGs for the subplots. Despite changing the settings in options, I'm unable to reproduce the previous behavior. How can I modify the settings so that I can get the old interactive plots back, with the 4 subplots displayed side-by-side?"
    },
    {
        "role": "assistant",
        "content": "To restore the old behavior of interactive plots in Spyder/IPython/matplotlib after upgrading, you need to adjust a few settings to switch from inline plotting to interactive plotting. Here's how you can achieve that:\n\n1. **Set the Backend to Interactive:**\n   Ensure that the backend is set to an interactive one like `Qt5Agg`, `TkAgg`, or `WXAgg`. You can set the backend in your script or configuration file.\n\n   In your script, add the following line at the beginning (before importing `matplotlib.pyplot`):\n   ```python\n   import matplotlib\n   matplotlib.use('Qt5Agg')  # or 'TkAgg', 'WXAgg', depending on what is available\n   ```\n\n2. **Configure IPython/Spyder to Use Interactive Plots:**\n   - Open Spyder and go to `Tools` > `Preferences`.\n   - Navigate to `IPython Console` > `Graphics` tab.\n   - Ensure that the `Graphics backend` is set to `Automatic` or specifically to a backend like `Qt5`.\n\n3. **Disable Inline Plotting:**\n   If you're using IPython or Jupyter, you can disable inline plotting by using the `%matplotlib` magic command in your IPython console or Jupyter notebook:\n   ```python\n   %matplotlib qt  # or %matplotlib tk, %matplotlib wx depending on availability\n   ```\n\n4. **Check for Matplotlib Configuration File:**\n   It's possible that your `matplotlibrc` file has configuration settings that enforce inline plotting. Check your `matplotlibrc` file (usually located at `~/.matplotlib/matplotlibrc` on Unix-like systems or `C:\\Users\\<YourUsername>\\.matplotlib\\matplotlibrc` on Windows) for any settings related to backends and adjust them accordingly.\n\n5. **Ensure GUI Event Loop Integration:**\n   Some backends require integration with the GUI event loop. If you're using a backend like `Qt5Agg`, ensure that your environment supports it:\n   ```python\n   from PyQt5 import QtWidgets\n   import sys\n   app = QtWidgets.QApplication(sys.argv)\n   ```\n\n6. **Test with a Simple Script:**\n   Create a simple script to test if the plots open interactively:\n   ```python\n   import matplotlib.pyplot as plt\n   plt.figure()\n   for i in range(4):\n       plt.subplot(2, 2, i+1)\n       plt.plot(range(10), range(10))\n   plt.show()\n   ```\n\nBy following these steps, you should be able to restore the behavior of interactive plots in Spyder/IPython/matplotlib, similar to what you experienced before upgrading."
    }
]