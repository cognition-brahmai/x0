[
    {
        "role": "user",
        "content": "What is the difference between 'content' and 'text' in Python Requests library? When should one be used over the other? Where can I find proper documentation of the library, as opposed to the tutorials? I understand that 'r.text' returns a unicode object sometimes, and there would be a difference for a non-text response, but I am unable to find where all this is documented."
    },
    {
        "role": "assistant",
        "content": "In the Python Requests library, the difference between `content` and `text` attributes of a response object is primarily about how the response data is represented and decoded:\n\n1. **`content`:** \n   - This attribute returns the raw bytes of the response payload. It is useful when you need to deal with binary data, such as images, audio files, or any non-textual content. \n   - Since it returns raw bytes, you may need to manually decode it if it's actually text data but not in UTF-8 encoding.\n\n2. **`text`:**\n   - This attribute returns the response content as a string (Unicode). \n   - It automatically decodes the raw bytes into a string using the charset specified in the response headers (usually the `Content-Type` header). If the charset isn't specified, Requests defaults to 'ISO-8859-1' and then tries to use 'UTF-8' as a fallback.\n   - You would use `text` when you are sure that the response is textual data and you want it decoded to a string.\n\n**When to Use Each:**\n- Use `content` when dealing with binary data or when the encoding is not straightforward or known.\n- Use `text` when working with APIs or web pages where the response is definitely textual and you want to work with it directly as a string.\n\n**Documentation:**\nFor proper documentation of the Requests library, you should refer to the official documentation rather than tutorials, which might be more high-level and not cover all cases. The official documentation can be found here: [Requests: HTTP for Humans](https://docs.python-requests.org/).\n\nThe specific details about `content` and `text` are covered under the \"Response Content\" section of the documentation. This documentation will provide comprehensive details on how to work with responses, including examples and descriptions of various attributes and methods available in the Requests library."
    }
]