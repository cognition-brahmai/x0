[
    {
        "role": "user",
        "content": "I have a Django project located in `/home/telessaude/telessaude_branch_master` of my Linux system. I can successfully run the Gunicorn command `gunicorn -w 2 -b 0.0.0.0:8000 telessaude.wsgi_dev:application --reload --timeout 900` inside the Django project home directory. However, when I try to run the same command from one directory above (`/home/telessaude`), I encounter an `ImportError: No module named telessaude.wsgi_dev` error. I've tried running Gunicorn in my home folder with `gunicorn -w 2 -b 0.0.0.0:8000 telessaude_branch_master.telessaude.wsgi_dev:application --reload --timeout 900` and `gunicorn -w 2 -b 0.0.0.0:8000 /home/telessaude/telessaude_branch_master/telessaude.wsgi_dev:application --reload --timeout 900`, but neither command worked. I need to run Gunicorn from any directory because I must add it as a \"command\" parameter to Supervisor. I'm not using a virtual environment. How can I fix this?"
    },
    {
        "role": "assistant",
        "content": "To run Gunicorn from a different directory and avoid the `ImportError`, you need to make sure that your Python path is set correctly so that it can locate the Django project modules. You can achieve this by setting the `PYTHONPATH` environment variable or by using the `--chdir` option with Gunicorn to change the working directory to your project directory. Here are a few approaches you can try:\n\n### Approach 1: Using `--chdir` option\n\nYou can specify the directory where your Django project is located using the `--chdir` option in the Gunicorn command:\n\n```bash\ngunicorn -w 2 -b 0.0.0.0:8000 --chdir /home/telessaude/telessaude_branch_master telessaude.wsgi_dev:application --reload --timeout 900\n```\n\nThis tells Gunicorn to change the working directory to your Django project directory before loading the application.\n\n### Approach 2: Setting `PYTHONPATH`\n\nSet the `PYTHONPATH` environment variable to include your project directory. You can do this directly in the command line or within your Supervisor configuration.\n\n**Command Line:**\n\n```bash\nPYTHONPATH=/home/telessaude/telessaude_branch_master gunicorn -w 2 -b 0.0.0.0:8000 telessaude.wsgi_dev:application --reload --timeout 900\n```\n\n**Supervisor Configuration:**\n\nIn your Supervisor configuration file (usually located at `/etc/supervisor/conf.d/your_project.conf`), you can add the `environment` option:\n\n```ini\n[program:your_program_name]\ncommand=/usr/local/bin/gunicorn -w 2 -b 0.0.0.0:8000 telessaude.wsgi_dev:application --reload --timeout 900\ndirectory=/home/telessaude/telessaude_branch_master\nenvironment=PYTHONPATH=\"/home/telessaude/telessaude_branch_master\"\nautostart=true\nautorestart=true\nstderr_logfile=/var/log/your_project/your_project.err.log\nstdout_logfile=/var/log/your_project/your_project.out.log\n```\n\n### Approach 3: Adjust the Module Path\n\nEnsure that you are referencing the correct module path. When running from outside the project directory, prepend the path with the directory name:\n\n```bash\ngunicorn -w 2 -b 0.0.0.0:8000 telessaude_branch_master.telessaude.wsgi_dev:application --reload --timeout 900\n```\n\nEnsure the path is correct and matches your project's structure.\n\nBy applying one of these approaches, you should be able to run Gunicorn from outside your project directory without encountering the `ImportError`."
    }
]