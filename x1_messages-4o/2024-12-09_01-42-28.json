[
    {
        "role": "user",
        "content": "How can I loop through a generator in Python? Currently, I am using the following approach:\n\n```python\ngen = function_that_returns_a_generator(param1, param2)\nif gen: # in case the generator is null\n    while True:\n        try:\n            print gen.next()\n        except StopIteration:\n            break\n```\nIs there a more Pythonic way to do this?"
    },
    {
        "role": "assistant",
        "content": "Yes, there is a more Pythonic way to loop through a generator in Python using a `for` loop. This handles the `StopIteration` internally, making the code cleaner and more readable. Here's how you can do it:\n\n```python\ngen = function_that_returns_a_generator(param1, param2)\n\nfor item in gen:\n    print(item)\n```\n\nThis approach automatically handles the `StopIteration` exception that signals the end of the generator, so you don't need to manage it manually. The `for` loop will iterate over each item yielded by the generator until it's exhausted."
    }
]