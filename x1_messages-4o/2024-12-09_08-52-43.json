[
    {
        "role": "user",
        "content": "I am trying to implement a PHP class that can connect to a database and run queries. Can someone provide a code example for this?"
    },
    {
        "role": "assistant",
        "content": "Certainly! Below is a simple example of a PHP class that can connect to a MySQL database using the `mysqli` extension and run queries. This class includes basic methods to connect, execute queries, and close the connection.\n\n```php\n<?php\n\nclass Database {\n    private $host;\n    private $username;\n    private $password;\n    private $dbname;\n    private $connection;\n\n    public function __construct($host, $username, $password, $dbname) {\n        $this->host = $host;\n        $this->username = $username;\n        $this->password = $password;\n        $this->dbname = $dbname;\n    }\n\n    public function connect() {\n        $this->connection = new mysqli($this->host, $this->username, $this->password, $this->dbname);\n\n        if ($this->connection->connect_error) {\n            die(\"Connection failed: \" . $this->connection->connect_error);\n        }\n\n        echo \"Connected successfully\";\n    }\n\n    public function query($sql) {\n        $result = $this->connection->query($sql);\n\n        if ($result === TRUE) {\n            echo \"Query executed successfully\";\n        } elseif ($result->num_rows > 0) {\n            $data = [];\n            while($row = $result->fetch_assoc()) {\n                $data[] = $row;\n            }\n            return $data;\n        } else {\n            echo \"0 results\";\n        }\n\n        return null;\n    }\n\n    public function close() {\n        $this->connection->close();\n        echo \"Connection closed\";\n    }\n}\n\n// Usage\n$db = new Database('localhost', 'root', 'password', 'my_database');\n$db->connect();\n$result = $db->query('SELECT * FROM my_table');\n\nif ($result) {\n    foreach ($result as $row) {\n        print_r($row);\n    }\n}\n\n$db->close();\n\n?>\n```\n\n### Explanation:\n\n1. **Constructor**: Initializes the database credentials.\n2. **connect()**: Establishes a connection to the database using the `mysqli` constructor. It checks for connection errors and outputs a success message.\n3. **query($sql)**: Takes an SQL string as an argument and executes it. If the query is a `SELECT` query and returns results, it fetches the data as an associative array.\n4. **close()**: Closes the database connection and outputs a message indicating that the connection is closed.\n\n### Note:\n- Make sure to replace `'localhost'`, `'root'`, `'password'`, and `'my_database'` with your actual database host, username, password, and database name.\n- This example uses basic error handling and is for illustrative purposes. For production code, consider using prepared statements and more robust error handling mechanisms to prevent SQL injection and manage errors effectively.\n- Always handle database credentials securely and avoid hardcoding them in your scripts."
    }
]