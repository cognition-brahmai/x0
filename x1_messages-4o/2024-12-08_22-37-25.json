[
    {
        "role": "user",
        "content": "Please write a [Java code] function to calculate the average of an array of n numbers. The function should take the array as input and return the average. Additionally, the function should also handle cases where the input array is empty or contains non-numeric values. Can you implement the function and test it with the following array: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]?"
    },
    {
        "role": "assistant",
        "content": "Certainly! Below is a Java function that calculates the average of an array of numbers. The function handles cases where the array is empty or contains non-numeric values by validating the input. \n\n```java\npublic class AverageCalculator {\n\n    public static Double calculateAverage(Object[] numbers) {\n        if (numbers == null || numbers.length == 0) {\n            System.out.println(\"The array is empty.\");\n            return null;\n        }\n\n        double sum = 0;\n        int count = 0;\n\n        for (Object obj : numbers) {\n            if (obj instanceof Number) {\n                sum += ((Number) obj).doubleValue();\n                count++;\n            } else {\n                System.out.println(\"Non-numeric value encountered: \" + obj);\n            }\n        }\n\n        if (count == 0) {\n            System.out.println(\"No numeric values found in the array.\");\n            return null;\n        }\n\n        return sum / count;\n    }\n\n    public static void main(String[] args) {\n        Object[] numbers = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};\n        Double average = calculateAverage(numbers);\n\n        if (average != null) {\n            System.out.println(\"The average is: \" + average);\n        }\n    }\n}\n```\n\n### Explanation:\n- **Input Validation**: The function first checks if the input array is null or empty and prints a message if it is.\n- **Non-Numeric Handling**: It iterates over the array, checking if each element is an instance of `Number`. If not, it skips that element and prints a message.\n- **Average Calculation**: It sums up the numeric values and counts them. If none are found, it indicates this.\n- **Edge Cases**: The function returns `null` for empty arrays or arrays with no numeric values.\n\n### Testing:\nThe `main` method includes a test case using the provided array `[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]`. When you run this code, it calculates and prints the average of the numbers in the array."
    }
]