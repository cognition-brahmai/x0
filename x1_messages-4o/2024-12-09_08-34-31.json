[
    {
        "role": "user",
        "content": "I have a pandas dataframe and it contains some NaN values. How can I determine which columns in my dataframe contain these NaN values? Is there a way to get a list of the column names that contain NaNs?"
    },
    {
        "role": "assistant",
        "content": "Yes, you can easily determine which columns in a pandas DataFrame contain NaN values and get a list of those column names. Here's how you can do it:\n\n```python\nimport pandas as pd\nimport numpy as np\n\n# Sample DataFrame\ndata = {\n    'A': [1, 2, np.nan],\n    'B': [4, np.nan, 6],\n    'C': [7, 8, 9]\n}\ndf = pd.DataFrame(data)\n\n# Determine which columns contain NaN values\ncolumns_with_nan = df.columns[df.isna().any()].tolist()\n\nprint(\"Columns containing NaN values:\", columns_with_nan)\n```\n\nIn this example, `df.isna().any()` returns a boolean Series indicating whether each column contains any NaN values. By using this boolean Series to index `df.columns`, you get the column names where at least one NaN value is present. The `tolist()` method is used to convert the resulting index to a list of column names."
    }
]