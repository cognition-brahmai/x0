[
    {
        "role": "user",
        "content": "I have a time series in pandas that looks like this:\n\n```\n   col\n0  B\n1  B\n2  A\n3  A\n4  A\n5  B\n```\n\nFor each row, I want to count how many times the value has appeared consecutively. The output should be:\n\n```\n   col count\n0  B   1\n1  B   2\n2  A   1 # Value does not match previous row => reset counter to 1\n3  A   2\n4  A   3\n5  B   1 # Value does not match previous row => reset counter to 1\n```\n\nHowever, I am having trouble figuring out how to write that information as a new column in the DataFrame for each row. The rolling_apply function is not working well for me. I also checked out the following related questions but they did not solve my problem: \n\n1. [Counting consecutive events on pandas dataframe by their index](https://stackoverflow.com/questions/21264291/counting-consecutive-events-on-pandas-dataframe-by-their-index)\n2. [Finding consecutive segments in a pandas data frame](https://stackoverflow.com/questions/14358567/finding-consecutive-segments-in-a-pandas-data-frame)\n\nHow can I achieve this in pandas?"
    },
    {
        "role": "assistant",
        "content": "To address this problem, you can use the `shift` method in pandas to compare each value with the previous one and then use `cumsum` to create a group identifier for consecutive identical values. After that, you can use `cumcount` to count the number of times each value has appeared consecutively within its group. Here's how you can achieve that:\n\n```python\nimport pandas as pd\n\n# Create your DataFrame\ndf = pd.DataFrame({'col': ['B', 'B', 'A', 'A', 'A', 'B']})\n\n# Identify change points where the value differs from the previous one\nchange_points = (df['col'] != df['col'].shift()).cumsum()\n\n# Use cumcount to count occurrences within each group\ndf['count'] = df.groupby(change_points).cumcount() + 1\n\n# Display the resulting DataFrame\nprint(df)\n```\n\nThis code will produce the desired output:\n\n```\n  col  count\n0   B      1\n1   B      2\n2   A      1\n3   A      2\n4   A      3\n5   B      1\n```\n\nHere's a brief explanation of the key steps:\n\n1. **`shift` and `cumsum`:** `df['col'].shift()` shifts the column values by one row, allowing you to compare each value with its predecessor. `(df['col'] != df['col'].shift()).cumsum()` creates a new series where each unique group of consecutive identical values is assigned a unique identifier.\n\n2. **`groupby` and `cumcount`:** `df.groupby(change_points).cumcount()` counts the occurrence of each value within its group, starting from zero. Adding 1 to this count gives you the desired consecutive count starting from 1."
    }
]