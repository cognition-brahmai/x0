[
    {
        "role": "user",
        "content": "How can I display the name of my instance in AWS EC2 using boto3? I have the following code:\n\n```python\nimport boto3\n\nec2 = boto3.resource('ec2', region_name='us-west-2')\nvpc = ec2.Vpc(\"vpc-21c15555\")\nfor i in vpc.instances.all():\n    print(i)\n```\n\nBut the output I get is just the instance IDs:\n\n```\n...\n...\n...\nec2.Instance(id='i-d77ed20c')\n```\n\nI can change `i` to be `i.id` or `i.instance_type`, but when I try `name` I get an error: `AttributeError: 'ec2.Instance' object has no attribute 'name'`. What is the correct way to get the instance name?"
    },
    {
        "role": "assistant",
        "content": "In AWS EC2, the \"Name\" of an instance is actually a tag, not a direct attribute of the `ec2.Instance` object. To get the instance name, you need to access the tags of the instance and look for the tag with the key \"Name\". Here's how you can modify your code to achieve this:\n\n```python\nimport boto3\n\nec2 = boto3.resource('ec2', region_name='us-west-2')\nvpc = ec2.Vpc(\"vpc-21c15555\")\nfor instance in vpc.instances.all():\n    # Initialize the instance name variable\n    instance_name = None\n    \n    # Access the instance tags and look for the 'Name' tag\n    if instance.tags:\n        for tag in instance.tags:\n            if tag['Key'] == 'Name':\n                instance_name = tag['Value']\n                break\n    \n    # Print instance ID and name\n    print(f\"Instance ID: {instance.id}, Instance Name: {instance_name}\")\n```\n\nIn this code, we loop through the tags of each instance to find the one with the key \"Name\". If it exists, we print it along with the instance ID. If the \"Name\" tag is not set, `instance_name` will remain `None`."
    }
]