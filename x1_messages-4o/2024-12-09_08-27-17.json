[
    {
        "role": "user",
        "content": "How can I create a single legend for multiple subplots in Matplotlib? I am plotting the same type of information for different countries on a 3x3 grid, but I am having trouble figuring out how to place a single legend on the figure instead of one for each subplot."
    },
    {
        "role": "assistant",
        "content": "Creating a single legend for multiple subplots in Matplotlib can be accomplished by collecting all the legend handles and labels from the individual subplots and then creating a legend on the entire figure. Here's a step-by-step guide on how you can achieve this:\n\n1. **Create your subplots**: First, create your subplots using `plt.subplots()`.\n\n2. **Collect handles and labels**: Loop through each subplot to collect the handles and labels from each plot.\n\n3. **Create a single legend**: Use `fig.legend()` to create a single legend for the entire figure.\n\nHere's an example code demonstrating these steps:\n\n```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Example data\ncountries = ['Country A', 'Country B', 'Country C', 'Country D', 'Country E', 'Country F', 'Country G', 'Country H', 'Country I']\nx = np.linspace(0, 10, 100)\n\n# Set up the figure and subplots\nfig, axes = plt.subplots(3, 3, figsize=(15, 15))\n\n# Initialize lists for handles and labels\nhandles, labels = [], []\n\n# Create plots in each subplot\nfor i, ax in enumerate(axes.flat):\n    y = np.sin(x + i)  # Example data\n    line, = ax.plot(x, y, label=f'Data {i+1}')\n    ax.set_title(countries[i])\n    \n    # Collect handles and labels\n    handle, label = ax.get_legend_handles_labels()\n    handles.extend(handle)\n    labels.extend(label)\n\n# Create a single legend on the figure\nfig.legend(handles, labels, loc='upper center', ncol=3)\n\n# Adjust layout\nplt.tight_layout(rect=[0, 0.03, 1, 0.95])  # Leave space for the legend\n\nplt.show()\n```\n\n### Key Points:\n\n- **fig.legend()**: This function places a legend on the figure, not just on a single subplot. The `loc` parameter can be adjusted to position the legend appropriately (e.g., 'upper center', 'lower center', etc.).\n\n- **ncol**: Adjusts the number of columns in the legend to make it more compact or spread out.\n\n- **tight_layout()**: Use this to adjust the subplot parameters to give specified padding and prevent overlap, especially when adding a legend outside the subplots.\n\nBy following these steps, you can create a single, unified legend that applies to all your subplots, which helps in maintaining clarity and aesthetics in your visualizations."
    }
]