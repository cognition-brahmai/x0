[
    {
        "role": "user",
        "content": "How can I read a raw image where each pixel corresponds to a 16 bits unsigned integer using PIL in Python? I'm currently trying to use the PIL Image.fromstring() function as shown in the code below, but I'm unsure about the 'mode' argument of this function. Can anyone explain what the 'mode' argument means in this context or where I can find a more detailed reference about the fromstring() function?\n\n```python\nif __name__ == \"__main__\":\n    if (len(sys.argv) != 4):\n        print 'Error: missing input argument'\n        sys.exit()\n\n    file = open(sys.argv[1], 'rb')\n    rawData = file.read()\n    file.close()\n\n    imgSize = (int(sys.argv[2]), int(sys.argv[3]))\n\n    # Use the PIL raw decoder to read the data.\n    #   - the 'F;16' informs the raw decoder that we are reading a little endian, unsigned integer 16 bit data.\n    img = Image.fromstring('L', imgSize, rawData, 'raw', 'F;16')\n\n    im.save('out.png')\n```"
    },
    {
        "role": "assistant",
        "content": "The `fromstring()` function you are referring to is an older method from the Python Imaging Library (PIL) for creating an image object from a string of pixel data. However, `fromstring()` has been deprecated in favor of `frombytes()` in the more recent versions of PIL, now maintained under the name Pillow. It is recommended to use `frombytes()` instead.\n\nThe `mode` argument in the function specifies the type and depth of a pixel in the image. For 16-bit unsigned integer pixel data, the mode you should use is `'I;16'` if your data is in native endianness or `'I;16L'` for little-endian and `'I;16B'` for big-endian.\n\nHere's how you can modify your code to use `frombytes()`:\n\n```python\nfrom PIL import Image\nimport sys\n\nif __name__ == \"__main__\":\n    if len(sys.argv) != 4:\n        print('Error: missing input argument')\n        sys.exit()\n\n    file = open(sys.argv[1], 'rb')\n    rawData = file.read()\n    file.close()\n\n    imgSize = (int(sys.argv[2]), int(sys.argv[3]))\n\n    # Use the PIL raw decoder to read the data.\n    # 'I;16' mode specifies 16-bit unsigned integer data\n    img = Image.frombytes('I;16', imgSize, rawData, 'raw', 'I;16')\n\n    img.save('out.png')\n```\n\nIn this code:\n\n- `frombytes()` is used to read the raw data.\n- `'I;16'` indicates that the image data is composed of 16-bit unsigned integers.\n\nMake sure to install the latest version of Pillow using `pip install Pillow` if you haven't already, as it is the actively maintained fork of the original PIL."
    }
]