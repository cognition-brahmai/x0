[
    {
        "role": "user",
        "content": "Did something change about the `namedtuple` in Python 3.5.1? When I run the following code on Python 3.5.0, it works perfectly:\n\n```python\nfrom collections import namedtuple\ncluster = namedtuple('Cluster', ['a', 'b'])\nc = cluster(a=4, b=9)\nprint(c)\nprint(vars(c))\n```\n\nThe output is:\n\n```python\nCluster(a=4, b=9)\nOrderedDict([('a', 4), ('b', 9)])\n```\n\nHowever, when I run the same code on Python 3.5.1, I get a TypeError:\n\n```python\nfrom collections import namedtuple\ncluster = namedtuple('Cluster', ['a', 'b'])\nc = cluster(a=4, b=9)\nprint(c)\nprint(vars(c))\n```\n\nThe output is:\n\n```python\nCluster(a=4, b=9)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: vars() argument must have __dict__ attribute\n```\n\nIt seems like something about `namedtuple` changed (or maybe it was something about `vars()`?). Was this change intentional? Are we not supposed to use this pattern for converting named tuples into dictionaries anymore?"
    },
    {
        "role": "assistant",
        "content": "The behavior you're observing is due to a change in how `vars()` interacts with `namedtuple` instances between Python 3.5.0 and Python 3.5.1. In Python 3.5.0, calling `vars()` on a `namedtuple` instance worked, but this was not officially supported behavior, as `namedtuple` instances do not have a `__dict__` attribute. \n\nStarting with Python 3.5.1, the `vars()` function enforces the requirement that its argument must have a `__dict__` attribute, which `namedtuple` instances do not have. Therefore, calling `vars()` on a `namedtuple` will result in a `TypeError`.\n\nTo convert a `namedtuple` to a dictionary, you should use the `_asdict()` method, which is officially supported:\n\n```python\nfrom collections import namedtuple\n\ncluster = namedtuple('Cluster', ['a', 'b'])\nc = cluster(a=4, b=9)\n\nprint(c)\nprint(c._asdict())\n```\n\nThis will give you an `OrderedDict` with the same data:\n\n```python\nCluster(a=4, b=9)\nOrderedDict([('a', 4), ('b', 9)])\n```\n\nThe `_asdict()` method is the recommended way to convert a `namedtuple` to a dictionary-like object."
    }
]