[
    {
        "role": "user",
        "content": "In Java, we have a `HashSet<Integer>` and I am trying to replicate a similar structure in Python where I can use the \"contains\" method as shown below:\n\n```python\nA = [1, 2, 3]\nS = set()\nS.add(2)\nfor x in A:\n    if S.contains(x):\n        print \"Example\"\n```\n\nI'm having trouble doing this in Python, could you please help?"
    },
    {
        "role": "assistant",
        "content": "In Python, the equivalent of Java's `HashSet` is the `set` type, which you are already using. However, the method to check if an element is in a set is not `contains`, but rather the `in` keyword. Here's how you can modify your code to work correctly in Python:\n\n```python\nA = [1, 2, 3]\nS = set()\nS.add(2)\nfor x in A:\n    if x in S:\n        print(\"Example\")\n```\n\nIn this code:\n- `S.add(2)` adds the integer `2` to the set `S`.\n- The loop iterates over each element `x` in the list `A`.\n- The condition `if x in S:` checks if `x` is a member of the set `S`.\n- If the condition is true, it prints \"Example\". \n\nThis is how you can achieve similar functionality to Java's `HashSet` with the `contains` method in Python."
    }
]