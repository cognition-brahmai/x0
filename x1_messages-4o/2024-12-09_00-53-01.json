[
    {
        "role": "user",
        "content": "I am using IPython notebook and trying to plot two DataFrames in a single figure. However, when I try to add a legend, it only shows the label for the last DataFrame plotted. How can I make the legend show labels for both DataFrames? \n\nHere is the code I'm currently using:\n\n```python\n%pylab inline\nimport pandas as pd\n\n#creating data\n\nprng = pd.period_range('1/1/2011', '1/1/2012', freq='M')\nvar=pd.DataFrame(randn(len(prng)),index=prng,columns=['total'])\nshares=pd.DataFrame(randn(len(prng)),index=index,columns=['average'])\n\n#plotting\n\nax=var.total.plot(label='Variance')\nax=shares.average.plot(secondary_y=True,label='Average Age')\nax.left_ax.set_ylabel('Variance of log wages')\nax.right_ax.set_ylabel('Average age')\nplt.legend(loc='upper center')\nplt.title('Wage Variance and Mean Age')\nplt.show()\n```\n\nThe output figure is missing one of the labels in the legend. How can I fix this?"
    },
    {
        "role": "assistant",
        "content": "To display legends for both DataFrames when plotting with secondary axes in matplotlib, you need to ensure that you're adding the legend to both axes separately. In your case, since you're using a secondary y-axis, you should manage legends for both axes. Here is a modified version of your code that should work:\n\n```python\n%pylab inline\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Creating data\nprng = pd.period_range('1/1/2011', '1/1/2012', freq='M')\nvar = pd.DataFrame(np.random.randn(len(prng)), index=prng, columns=['total'])\nshares = pd.DataFrame(np.random.randn(len(prng)), index=prng, columns=['average'])\n\n# Plotting\nfig, ax1 = plt.subplots()\n\n# Plot the first DataFrame\nax1.plot(var.index, var['total'], label='Variance', color='b')\nax1.set_ylabel('Variance of log wages', color='b')\n\n# Create a secondary y-axis\nax2 = ax1.twinx()\nax2.plot(shares.index, shares['average'], label='Average Age', color='g')\nax2.set_ylabel('Average age', color='g')\n\n# Add legends to both axes\nlines_1, labels_1 = ax1.get_legend_handles_labels()\nlines_2, labels_2 = ax2.get_legend_handles_labels()\n\nax1.legend(lines_1 + lines_2, labels_1 + labels_2, loc='upper center')\nplt.title('Wage Variance and Mean Age')\nplt.show()\n```\n\n### Key Changes:\n- Used `plt.subplots()` along with `ax1.twinx()` to create a twin axes setup.\n- Plotted the `var` DataFrame on `ax1` and the `shares` DataFrame on `ax2`.\n- Combined the legend handles and labels from both axes and added them to `ax1`.\n\nThis setup ensures that both plots are appropriately labeled in the legend."
    }
]