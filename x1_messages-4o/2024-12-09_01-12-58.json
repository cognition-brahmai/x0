[
    {
        "role": "user",
        "content": "What is the most efficient, Pythonic way to check if two dictionaries have the exact same set of keys? For instance, consider the two dictionaries below:\n\n<pre><code>d_1 = {'peter': 1, 'adam': 2, 'david': 3}\nd_2 = {'peter': 14, 'adam': 44, 'david': 33, 'alan': 21}\n</code></pre>\n\nIn this case, it should return <code>False</code> because <code>d_2</code> contains the <code>'alan'</code> key, which <code>d_1</code> lacks. I am not interested in comparing the associated values, only the keys."
    },
    {
        "role": "assistant",
        "content": "To check if two dictionaries have the exact same set of keys in a Pythonic way, you can use the equality operator on the `keys()` method of the dictionaries. This method returns a view object that displays a list of all the keys in the dictionary. Comparing these using the equality operator is both efficient and clear. Here's how you can do it:\n\n```python\nd_1 = {'peter': 1, 'adam': 2, 'david': 3}\nd_2 = {'peter': 14, 'adam': 44, 'david': 33, 'alan': 21}\n\nsame_keys = d_1.keys() == d_2.keys()\nprint(same_keys)  # Output: False\n```\n\nThis will return `True` if both dictionaries have the exact same set of keys, and `False` otherwise. In this example, it returns `False` because `d_2` has an extra key `'alan'` that `d_1` does not have."
    }
]