[
    {
        "role": "user",
        "content": "How can I plot a .wav file using matplotlib and scipy in Python, where the y-axis represents amplitude and the x-axis represents the number of frames? I have successfully read the .wav file with scipy, but I need help with the plotting part. Here is my current code:\n\n```python\nfrom scipy.io.wavfile import read\nimport numpy as np\nfrom numpy import*\nimport matplotlib.pyplot as plt\na=read(\"C:/Users/Martinez/Desktop/impulso.wav\")\nprint a\n```"
    },
    {
        "role": "assistant",
        "content": "To plot a `.wav` file using `matplotlib` and `scipy`, you can follow these steps. You've already read the `.wav` file using `scipy.io.wavfile.read`. Now, you need to extract the sample rate and data from the file, and then plot the data. Here's an example of how you can do this:\n\n```python\nfrom scipy.io.wavfile import read\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Read the .wav file\nsample_rate, data = read(\"C:/Users/Martinez/Desktop/impulso.wav\")\n\n# Print the sample rate and data shape\nprint(f\"Sample Rate: {sample_rate} Hz\")\nprint(f\"Data Shape: {data.shape}\")\n\n# Plot the data\nplt.figure(figsize=(10, 4))\nplt.plot(data, color='blue')\n\n# Label the axes\nplt.xlabel('Number of Frames')\nplt.ylabel('Amplitude')\n\n# Set the title\nplt.title('Waveform of impulso.wav')\n\n# Display the plot\nplt.show()\n```\n\n### Explanation:\n\n1. **Read the .wav file**: You already did this using `scipy.io.wavfile.read`. This function returns two values: `sample_rate` (the number of samples per second) and `data` (an array containing the audio data).\n\n2. **Plot the data**: Use `matplotlib.pyplot.plot` to plot the waveform. The x-axis represents the number of frames (or samples), and the y-axis represents the amplitude.\n\n3. **Customize the plot**: Add labels to the axes and a title for better understanding.\n\n4. **Display the plot**: Use `matplotlib.pyplot.show` to display the plot.\n\nThis code will plot the amplitude of the audio signal against the number of frames, which is what you're looking for. If your audio file is stereo, `data` will be a 2D array, and you might want to plot each channel separately. Let me know if you need further assistance!"
    }
]