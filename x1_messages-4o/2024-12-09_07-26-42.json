[
    {
        "role": "user",
        "content": "How can I find the duration of a .wav audio file in Python? I have tried using several libraries including the Python `wave` library, `mutagen`, `pymedia`, and `pymad`, but I still couldn't get the duration of the wav file consistently."
    },
    {
        "role": "assistant",
        "content": "To find the duration of a `.wav` audio file in Python, you can use the `wave` library, which is part of the Python standard library, along with the `contextlib` module to simplify the file handling process. Here's a straightforward approach to get the duration of a `.wav` file:\n\n```python\nimport wave\nimport contextlib\n\ndef get_wav_duration(file_path):\n    with contextlib.closing(wave.open(file_path, 'r')) as wav_file:\n        frames = wav_file.getnframes()\n        rate = wav_file.getframerate()\n        duration = frames / float(rate)\n    return duration\n\n# Example usage\nfile_path = 'your_audio_file.wav'\nduration = get_wav_duration(file_path)\nprint(f\"The duration of the WAV file is {duration} seconds.\")\n```\n\n### Explanation:\n\n- **`contextlib.closing`**: This is used to ensure that the file is properly closed after we're done with it, even if an error occurs.\n- **`wave.open`**: Opens the WAV file.\n- **`getnframes()`**: Returns the number of audio frames in the file.\n- **`getframerate()`**: Returns the sampling frequency.\n- **`duration = frames / float(rate)`**: Calculates the duration in seconds by dividing the total number of frames by the frame rate.\n\nThis method should give you consistent results for `.wav` files. If you're still experiencing issues, it could be related to the specific files you're using, so make sure they are not corrupted and conform to the standard WAV format."
    }
]