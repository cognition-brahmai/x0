[
    {
        "role": "user",
        "content": "In Django, how can I set a field as unique in my model class? I have a model class PysicalServer, and I want to set the 'serial_number' field as unique. However, 'serial_number' is not my id field so I can't use the primary_key. Is there another property I can use to set this field as unique? Here is my code:\n\n```python\nclass PysicalServer(models.Model):\n    serial_number = models.CharField(max_length=64)  # I want to add the unique\n    name = models.CharField(max_length=16)\n```"
    },
    {
        "role": "assistant",
        "content": "To make the `serial_number` field unique in your `PysicalServer` model, you can set the `unique` parameter to `True` in the field definition. This will ensure that each `serial_number` value is unique across all instances of the `PysicalServer` model. Here is how you can modify your model:\n\n```python\nclass PysicalServer(models.Model):\n    serial_number = models.CharField(max_length=64, unique=True)  # Set unique=True\n    name = models.CharField(max_length=16)\n```\n\nBy setting `unique=True`, Django will enforce a database-level uniqueness constraint on the `serial_number` field, ensuring that no two instances of `PysicalServer` can have the same `serial_number`."
    }
]