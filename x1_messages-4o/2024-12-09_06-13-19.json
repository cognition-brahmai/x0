[
    {
        "role": "user",
        "content": "How can I get the current date and time only respectively in Django? I am trying to create an instance of a Django model, `Company`, which has a `DateField` and a `TimeField`. I want to set these fields to the current date and current time respectively. My attempt is as follows:\n\n```python\nclass Company(models.Model):\n    date = models.DateField()\n    time = models.TimeField()\n\nc = Company(date=datetime.datetime.now(), time=datetime.datetime.now()) \n```\nHowever, Django is using `DATETIME_INPUT_FORMATS` defined within the `formats.py` file because I am passing in a `datetime.now()` to both fields. I believe I could make Django use `DATE_INPUT_FORMATS` and `TIME_INPUT_FORMATS` respectively, if I passed in only the current date and current time. I tried something like this:\n\n```python\nc = Company(date=datetime.date.now(), time=datetime.time.now()) \n```\nBut it throws an exception as `now` doesn't exist in this context. Is there a different way to achieve this?"
    },
    {
        "role": "assistant",
        "content": "In your implementation, you're trying to assign a `datetime` object to a `DateField` and `TimeField` directly, which is not appropriate because these fields expect a `date` and `time` object, respectively. \n\nTo correctly set the current date and time for these fields, you should use the `datetime.date.today()` and `datetime.datetime.now().time()` methods to get the current date and time separately. Here\u2019s how you can modify your code:\n\n```python\nfrom datetime import date, datetime\nfrom django.db import models\n\nclass Company(models.Model):\n    date = models.DateField()\n    time = models.TimeField()\n\n# Create an instance of Company with the current date and time\nc = Company(date=date.today(), time=datetime.now().time())\n```\n\n### Explanation:\n1. **`date.today()`**: This returns the current date as a `date` object.\n2. **`datetime.now().time()`**: This returns the current time as a `time` object.\n\nUsing these methods, you ensure that the data types match what is expected by the `DateField` and `TimeField`, thus avoiding format issues or exceptions."
    }
]