[
    {
        "role": "user",
        "content": "How can I create a sum row and sum column in a pandas DataFrame? I am trying to recreate a table from Khan Academy using pandas DataFrame. Here is my current DataFrame:\n\n```python\ndf = pd.DataFrame(\n    {\n        \"Undergraduate\": {\"Straight A's\": 240, \"Not\": 3_760},\n        \"Graduate\": {\"Straight A's\": 60, \"Not\": 440},\n    }\n)\n```\n\nI found that I could add a total column using `df['Total'] = df.sum(axis=1)`, but I haven't found a similarly elegant solution for adding a total row. One function I came across is `crosstab`, but it seems like I would have to create a DataFrame consisting of 1/0 for all of these values, which seems unnecessary as I already have an aggregate. I have also found some approaches that manually build a new totals row, but I'm hoping there's a more efficient way. Does a function exist in pandas that can easily add a total row and column, or will I need to devise my own solution?"
    },
    {
        "role": "assistant",
        "content": "To add a total row and a total column to a pandas DataFrame, you can use the `sum()` function along with some additional steps. While there isn\u2019t a built-in function in pandas that directly adds a total row and column, you can achieve this in a clean way by following these steps:\n\nHere's how you can do it:\n\n```python\nimport pandas as pd\n\n# Your initial DataFrame\ndf = pd.DataFrame(\n    {\n        \"Undergraduate\": {\"Straight A's\": 240, \"Not\": 3_760},\n        \"Graduate\": {\"Straight A's\": 60, \"Not\": 440},\n    }\n)\n\n# Add a total column\ndf['Total'] = df.sum(axis=1)\n\n# Add a total row\ntotal_row = pd.DataFrame(df.sum()).T\ntotal_row.index = ['Total']\n\n# Append the total row to the DataFrame\ndf_with_totals = pd.concat([df, total_row])\n\nprint(df_with_totals)\n```\n\n### Explanation:\n\n- **Add Total Column**: `df.sum(axis=1)` calculates the sum across each row (axis=1 refers to summing across columns), and we assign this to a new column called 'Total'.\n\n- **Create Total Row**: `df.sum()` computes the sum of each column (axis=0 by default), creating a Series. We convert this Series to a DataFrame and transpose it with `.T` to match the orientation of the original DataFrame.\n\n- **Append Total Row**: We use `pd.concat()` to append the total row DataFrame to the original DataFrame. This effectively adds the totals as a new row at the bottom.\n\nThis approach efficiently adds both a total column and a total row to your DataFrame, providing a complete summary of your data."
    }
]