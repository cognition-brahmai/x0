[
    {
        "role": "user",
        "content": "I'm working on a project where I need to generate multiple plots on a single page using matplotlib. To give a bit more context, I have written a code that opens 16 figures at once. However, they currently open as separate graphs. How can I make them all open on the same page? I don't want them on the same graph, but rather, 16 separate graphs displayed on a single page/window. Also, I have noticed that the format of the numbins and defaultreallimits doesn't seem to hold past the first figure. I'm not sure if I need to use the subplot command for this, but I'm not sure what else could be the solution. Here's the code I have so far:\n```python\nimport csv\nimport scipy.stats\nimport numpy\nimport matplotlib.pyplot as plt\n\nfor i in range(16):\n    plt.figure(i)\n    filename= easygui.fileopenbox(msg='Pdf distance 90m contour', title='select file', filetypes=['*.csv'], default='X:\\\\herring_schools\\\\')\n    alt_file=open(filename)    \n    a=[]\n    for row in csv.DictReader(alt_file):\n        a.append(row['Dist_90m(nmi)'])\n    y= numpy.array(a, float)    \n    relpdf=scipy.stats.relfreq(y, numbins=7, defaultreallimits=(-10,60))\n    bins = numpy.arange(-10,60,10)\n    print numpy.sum(relpdf[0])\n    print bins\n    patches=plt.bar(bins,relpdf[0], width=10, facecolor='black')\n    titlename= easygui.enterbox(msg='write graph title', title='', default='', strip=True, image=None, root=None)\n    plt.title(titlename)\n    plt.ylabel('Probability Density Function')\n    plt.xlabel('Distance from 90m Contour Line(nm)')\n    plt.ylim([0,1])\n\nplt.show()\n```"
    },
    {
        "role": "assistant",
        "content": "To display all 16 plots on a single page, you can use the `subplot` feature in Matplotlib, which allows you to arrange multiple plots in a grid. Here's how you can modify your code to achieve that:\n\n```python\nimport csv\nimport scipy.stats\nimport numpy\nimport matplotlib.pyplot as plt\nimport easygui\n\n# Define the number of rows and columns for the subplot grid\nrows = 4\ncols = 4\n\n# Create a figure to contain all subplots\nplt.figure(figsize=(15, 10))  # You can adjust the figure size as needed\n\nfor i in range(16):\n    # Define the subplot\n    plt.subplot(rows, cols, i + 1)\n    \n    # Open the CSV file\n    filename = easygui.fileopenbox(msg='Pdf distance 90m contour', title='select file', filetypes=['*.csv'], default='X:\\\\herring_schools\\\\')\n    alt_file = open(filename)\n    \n    # Read data from the CSV file\n    a = []\n    for row in csv.DictReader(alt_file):\n        a.append(row['Dist_90m(nmi)'])\n    y = numpy.array(a, float)\n    \n    # Calculate relative frequencies\n    relpdf = scipy.stats.relfreq(y, numbins=7, defaultreallimits=(-10, 60))\n    bins = numpy.arange(-10, 60, 10)\n    \n    # Print sum of relative frequencies and bins (for debugging purposes)\n    print(numpy.sum(relpdf[0]))\n    print(bins)\n    \n    # Plot the bar chart\n    plt.bar(bins, relpdf[0], width=10, facecolor='black')\n    \n    # Set plot title, labels, and limits\n    titlename = easygui.enterbox(msg='write graph title', title='', default='', strip=True, image=None, root=None)\n    plt.title(titlename)\n    plt.ylabel('Probability Density Function')\n    plt.xlabel('Distance from 90m Contour Line(nm)')\n    plt.ylim([0, 1])\n\n# Adjust layout to prevent overlapping\nplt.tight_layout()\n\n# Show all the subplots on the same page\nplt.show()\n```\n\n### Key Changes:\n\n1. **Subplot Configuration**: I used `plt.subplot(rows, cols, i + 1)` to place each plot in a grid. In this case, I used a 4x4 grid since you have 16 plots.\n\n2. **Figure Sizing**: The `plt.figure(figsize=(15, 10))` line sets the overall size of the figure, which helps in making sure everything fits well.\n\n3. **Tight Layout**: `plt.tight_layout()` is used to automatically adjust subplot parameters to give specified padding, preventing overlap.\n\nWith these modifications, all 16 plots will be displayed on a single page, each in its own subplot. Adjust the figure size and grid dimensions as needed to fit your specific requirements."
    }
]