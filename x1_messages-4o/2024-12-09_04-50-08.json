[
    {
        "role": "user",
        "content": "I have a string representation of a dictionary, for example: `s = \"{'muffin' : 'lolz', 'foo' : 'kitty'}\"`. How can I convert this string into a dictionary without using `eval`? This is necessary because a coworker's class I'm using converts all input into strings and I don't want to modify his classes."
    },
    {
        "role": "assistant",
        "content": "To convert a string representation of a dictionary into an actual dictionary in Python without using `eval`, you can use the `ast.literal_eval()` function from the `ast` module. This function safely evaluates a string containing a Python literal or container display. Here's how you can do it:\n\n```python\nimport ast\n\ns = \"{'muffin' : 'lolz', 'foo' : 'kitty'}\"\ndictionary = ast.literal_eval(s)\n\nprint(dictionary)\n```\n\nThis will output:\n\n```\n{'muffin': 'lolz', 'foo': 'kitty'}\n```\n\nThe `ast.literal_eval()` function is preferred over `eval()` because it only evaluates literals and is thus safer. It can handle strings, numbers, tuples, lists, dicts, booleans, and `None`."
    }
]