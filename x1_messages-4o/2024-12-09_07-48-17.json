[
    {
        "role": "user",
        "content": "Is there a native datatype in Python that behaves like a fixed-length First In, First Out (FIFO) buffer? Specifically, I'm looking for a way to create a length-5 FIFO buffer that is initialized with all zeros, like [0,0,0,0,0]. I want to be able to call a put function on this object, which would shift off the last zero and insert a new value, say 1, into the left side, resulting in [1,0,0,0,0]. If I put a 2, it should then shift and put to look like this: [2,1,0,0,0]. The new value should always be placed at the front and the oldest one should be shifted off. I understand that it's possible to implement this myself, but I'd prefer to use native Python datatypes if possible. Can anyone advise which datatype would be best for this?"
    },
    {
        "role": "assistant",
        "content": "In Python, the `collections.deque` class is well-suited for implementing a fixed-length FIFO buffer, as it is designed to efficiently handle operations on both ends of the collection. You can use `collections.deque` with a specified maximum length to achieve the behavior you described, where new elements are added to the left (front) and old elements are automatically removed from the right (back) when the buffer is full.\n\nHere's how you can implement a length-5 FIFO buffer initialized with zeros, using `collections.deque`:\n\n```python\nfrom collections import deque\n\n# Create a deque with a fixed length of 5, initialized with zeros\nfifo_buffer = deque([0, 0, 0, 0, 0], maxlen=5)\n\ndef put(value):\n    # Add the new value to the left of the deque\n    fifo_buffer.appendleft(value)\n\n# Example usage\nprint(fifo_buffer)  # Output: deque([0, 0, 0, 0, 0])\n\nput(1)\nprint(fifo_buffer)  # Output: deque([1, 0, 0, 0, 0])\n\nput(2)\nprint(fifo_buffer)  # Output: deque([2, 1, 0, 0, 0])\n```\n\nThe `maxlen` parameter ensures that the buffer remains at a fixed length. When a new element is added to the deque and the buffer is full, the oldest element is automatically removed from the right end. This makes `collections.deque` both simple and efficient for implementing a FIFO buffer with fixed length."
    }
]