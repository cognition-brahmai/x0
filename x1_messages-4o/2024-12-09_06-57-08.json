[
    {
        "role": "user",
        "content": "How can I force my Linux CentOS 7.3 system to use cmake3 instead of the default cmake2.8 when installing PyTorch? While trying to install PyTorch, I encounter an error that requires CMake 3.0 or higher. I have installed cmake3 using the command `sudo yum -y install cmake3`, but the system still defaults to cmake2.8. The error I get when trying to install PyTorch is as follows:\n\n```\nsudo python setup.py install\n\nrunning install\nrunning build_deps\nCMake Error at CMakeLists.txt:1 (cmake_minimum_required):\n  CMake 3.0 or higher is required.  You are running version 2.8.12.2\n\n\n-- Configuring incomplete, errors occurred!\n```\n\nWhen I check the installed cmake version, I get the following:\n\n```\nsudo yum info cmake\n\nInstalled Packages\nName        : cmake\nArch        : x86_64\nVersion     : 2.8.12.2\nRelease     : 2.el7\nSize        : 27 M\nRepo        : installed\nFrom repo   : base\nSummary     : Cross-platform make system\nURL         : http://www.cmake.org\nLicense     : BSD and MIT and zlib\nDescription : CMake is used to control the software compilation process using simple\n            : platform and compiler independent configuration files. CMake generates\n            : native makefiles and workspaces that can be used in the compiler\n            : environment of your choice. CMake is quite sophisticated: it is possible\n            : to support complex environments requiring system configuration, preprocessor\n            : generation, code generation, and template instantiation.\n```"
    },
    {
        "role": "assistant",
        "content": "To force your CentOS 7.3 system to use `cmake3` instead of the default `cmake` version 2.8 when installing PyTorch, you'll need to adjust the system's path and potentially create symbolic links. Here's how you can do it:\n\n1. **Check the installation path of `cmake3`:**\n\n   First, confirm the installation path of `cmake3`. It's usually installed in `/usr/bin` or `/usr/local/bin`. You can check using:\n\n   ```bash\n   which cmake3\n   ```\n\n   This command should return the path where `cmake3` is installed, like `/usr/bin/cmake3`.\n\n2. **Update the PATH environment variable:**\n\n   You can temporarily prioritize `cmake3` by updating the `PATH` environment variable. This method does not require administrative privileges and affects only the current session.\n\n   ```bash\n   export PATH=/usr/bin:$PATH\n   ```\n\n   Ensure that `/usr/bin` is the path where `cmake3` is located. This will make sure that `cmake3` is found before the default `cmake`.\n\n3. **Create a symbolic link (alternative method):**\n\n   If you want a more permanent solution, you can create a symbolic link. This requires administrative privileges:\n\n   ```bash\n   sudo ln -sf /usr/bin/cmake3 /usr/local/bin/cmake\n   ```\n\n   This will create a symbolic link named `cmake` that points to `cmake3`. After this, when you run `cmake`, it should invoke `cmake3`.\n\n4. **Verify the change:**\n\n   Check the version of `cmake` to ensure the correct version is being used:\n\n   ```bash\n   cmake --version\n   ```\n\n   This should display `cmake` version 3.x.x, indicating that the system is using `cmake3`.\n\n5. **Re-run the PyTorch installation:**\n\n   Now, try to install PyTorch again:\n\n   ```bash\n   sudo python setup.py install\n   ```\n\nBy following these steps, you should be able to force your system to use `cmake3` for the installation of PyTorch."
    }
]