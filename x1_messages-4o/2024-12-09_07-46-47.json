[
    {
        "role": "user",
        "content": "How can I create a pandas DatetimeIndex with year as frequency? I have been using the `pandas.date_range(startdate, periods=n, freq=f)` function to create a range of pandas `Timestamp` objects where the `freq` optional parameter denotes the frequency (second, minute, hour, day...) in the range. I've discovered that the following literals can be passed for the `freq` parameter: 's' for second, 'min' for minute, 'H' for hour, 'D' for day, 'w' for week, 'm' for month. However, I have not been able to find a frequency parameter for year. I've tried 'y', 'Y', 'yr', but none of these seem to work. What should I pass as the `freq` parameter to create dates with year as frequency?"
    },
    {
        "role": "assistant",
        "content": "To create a `DatetimeIndex` with a yearly frequency using `pandas.date_range`, you should use the frequency alias `'Y'`. Here's how you can do it:\n\n```python\nimport pandas as pd\n\n# Define the start date and the number of periods\nstart_date = '2020-01-01'\nperiods = 5\n\n# Create a DatetimeIndex with a yearly frequency\ndate_range = pd.date_range(start=start_date, periods=periods, freq='Y')\n\nprint(date_range)\n```\n\nIn this example, the `'Y'` frequency alias represents the end of the year frequency. This will give you a range of dates at the end of each year starting from the specified `start_date`. If you want the dates to be at the beginning of each year, you can use the `'YS'` alias, which stands for \"year start\". \n\nHere's an example with `'YS'`:\n\n```python\n# Create a DatetimeIndex with a yearly start frequency\ndate_range_start = pd.date_range(start=start_date, periods=periods, freq='YS')\n\nprint(date_range_start)\n```\n\nThis will generate a series of dates at the start of each year."
    }
]