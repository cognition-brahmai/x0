[
    {
        "role": "user",
        "content": "I am looking for a way to spread an array in Python similar to how I can do it in JavaScript. In JavaScript, I can spread an array by using the spread operator (...). For example:\n\n```javascript\nconst a = [1,2,3,4]\nconst b = [10, ...a]\nconsole.log(b) // [10,1,2,3,4]\n```\n\nIs there a similar approach available in Python?"
    },
    {
        "role": "assistant",
        "content": "Yes, Python provides a way to achieve similar functionality to the JavaScript spread operator using the unpacking operator `*`. You can use it to unpack elements of an iterable (like a list) into another list. Here's how you can do it:\n\n```python\na = [1, 2, 3, 4]\nb = [10, *a]\nprint(b)  # Output: [10, 1, 2, 3, 4]\n```\n\nIn this example, the `*a` syntax unpacks the elements of list `a` into the new list `b`, similar to how the spread operator works in JavaScript."
    }
]