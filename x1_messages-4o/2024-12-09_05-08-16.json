[
    {
        "role": "user",
        "content": "I have a pandas dataframe in which some rows contain missing values. I want to display only those rows which contain one or more NaN values. Here is a sample of my dataframe:\n\n<pre><code>In [31]: df.head()\nOut[31]: \n                             alpha1  alpha2    gamma1    gamma2       chi2min  \nfilename                                                                        \nM66_MI_NSRh35d32kpoints.dat  0.8016  0.9283  1.000000  0.074804  3.985599e+01   \nF71_sMI_DMRI51d.dat          0.0000  0.0000       NaN  0.000000  1.000000e+25   \nF62_sMI_St22d7.dat           1.7210  3.8330  0.237480  0.150000  1.091832e+01   \nF41_Car_HOC498d.dat          1.1670  2.8090  0.364190  0.300000  7.966335e+00   \nF78_MI_547d.dat              1.8970  5.4590  0.095319  0.100000  2.593468e+01 \n</code></pre>\n\nWhen I try df.isnull(), it gives a long dataframe with True and False. How can I select these rows with NaN values and print them on the screen?"
    },
    {
        "role": "assistant",
        "content": "To display only the rows in your DataFrame that contain one or more missing values (NaN), you can use the `.isnull()` method in combination with `.any()` and boolean indexing. Here's how you can do it:\n\n```python\n# Import pandas\nimport pandas as pd\n\n# Sample DataFrame\ndata = {\n    'alpha1': [0.8016, 0.0000, 1.7210, 1.1670, 1.8970],\n    'alpha2': [0.9283, 0.0000, 3.8330, 2.8090, 5.4590],\n    'gamma1': [1.000000, None, 0.237480, 0.364190, 0.095319],\n    'gamma2': [0.074804, 0.000000, 0.150000, 0.300000, 0.100000],\n    'chi2min': [3.985599e+01, 1.000000e+25, 1.091832e+01, 7.966335e+00, 2.593468e+01]\n}\nindex = ['M66_MI_NSRh35d32kpoints.dat', 'F71_sMI_DMRI51d.dat', 'F62_sMI_St22d7.dat', 'F41_Car_HOC498d.dat', 'F78_MI_547d.dat']\ndf = pd.DataFrame(data, index=index)\n\n# Select rows with any NaN values\nrows_with_nan = df[df.isnull().any(axis=1)]\n\n# Display the result\nprint(rows_with_nan)\n```\n\nIn this code:\n\n- `df.isnull()` creates a DataFrame of the same shape as `df`, with `True` where values are NaN and `False` elsewhere.\n- `.any(axis=1)` checks each row if there's any `True` (i.e., any NaN value in that row). It returns a boolean Series.\n- `df[...]` uses this boolean Series to index the original DataFrame, selecting only the rows where the condition is `True`.\n\nThis will print only the rows from your DataFrame that contain at least one NaN value."
    }
]