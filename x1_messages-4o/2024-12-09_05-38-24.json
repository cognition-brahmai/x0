[
    {
        "role": "user",
        "content": "I am currently working on a profanity filter for a web forum written in Python. As part of this project, I am trying to write a function that takes a word and returns all possible mock spellings of that word using visually similar characters in place of specific letters (e.g., s\u2020\u00e5\u00a9k\u00f8v\u20acr\u0192|\u00f8w). I understand that I may have to expand this list over time to keep up with the creativity of users. Is there a pre-existing list of characters that look similar to English letters available on the internet that I could use as a starting point?"
    },
    {
        "role": "assistant",
        "content": "Yes, there are several character sets and resources available that can help you create mock spellings of words using visually similar characters. These characters are often used to create \"leet speak\" or other obfuscated text. Here's a basic list of visually similar characters that you can use as a starting point:\n\n- A: 4, @, \u00c2, \u00c5, \u00c0, \u00c4\n- B: 8, \u00df, \u00de\n- C: \u00c7, \u00a9, \u00a2\n- D: \u00d0, \u2202\n- E: 3, \u20ac, \u00c8, \u00c9, \u00ca, \u00cb\n- F: \u0192\n- G: 6, 9\n- H: #, \u0126\n- I: 1, |, !, \u0130, \u0130\n- J: \u0134\n- K: |<, \u0136\n- L: 1, |, \u0141\n- M: ^^, /\\/\\, \u15f0\n- N: /\\/, \u00f1, \u0143\n- O: 0, \u00d8, \u00d6, \u00d3, \u00d2\n- P: \u00b6, \u00de\n- Q: 9, \u00d8\n- R: \u00ae, \u0158\n- S: 5, $, \u00a7\n- T: 7, \u2020\n- U: \u00b5, \u00dc\n- V: \\/, \u221a\n- W: \\/\\/, \u1e80\n- X: \u00d7, \u2715\n- Y: \u00a5, \u03a8\n- Z: 2, \u017d\n\nThese are just a few examples, and you can find more by searching for \"leet speak\" or \"unicode character lists\" online. Additionally, you can create your own list by examining common substitutions used in online communities.\n\nWhen implementing this in Python, you might want to use a dictionary to map each letter to its possible substitutes. Then, you can write a function that generates combinations of these characters for a given word. Remember that the combinations can grow exponentially for longer words, so you might want to limit the number of substitutions or the length of the output list."
    }
]