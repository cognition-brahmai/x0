[
    {
        "role": "user",
        "content": "How can I extract the part of a URL that follows the last slash using Python? For example, if I have the following URLs:\n\n<pre><code>URL: http://www.test.com/TEST1\nURL: http://www.test.com/page/TEST2\nURL: http://www.test.com/page/page/12345\n</code></pre>\n\nI would like to get:\n\n<pre><code>returns: TEST1\nreturns: TEST2\nreturns: 12345\n</code></pre>\n\nHowever, when I tried using urlparse, I'm getting the full path filename, such as `page/page/12345`. How can I only get the part after the last slash?"
    },
    {
        "role": "assistant",
        "content": "To extract the part of a URL that follows the last slash using Python, you can use the `os.path.basename` function from the `os` module or use string manipulation techniques. Here's how you can do it:\n\n### Using `os.path.basename`:\n\n```python\nimport os\nfrom urllib.parse import urlparse\n\ndef get_last_part_of_url(url):\n    path = urlparse(url).path\n    return os.path.basename(path)\n\nurls = [\n    \"http://www.test.com/TEST1\",\n    \"http://www.test.com/page/TEST2\",\n    \"http://www.test.com/page/page/12345\"\n]\n\nfor url in urls:\n    print(get_last_part_of_url(url))\n```\n\n### Using String Manipulation:\n\n```python\nfrom urllib.parse import urlparse\n\ndef get_last_part_of_url(url):\n    path = urlparse(url).path\n    return path.split('/')[-1]\n\nurls = [\n    \"http://www.test.com/TEST1\",\n    \"http://www.test.com/page/TEST2\",\n    \"http://www.test.com/page/page/12345\"\n]\n\nfor url in urls:\n    print(get_last_part_of_url(url))\n```\n\nBoth methods will give you the desired output:\n\n```\nTEST1\nTEST2\n12345\n```\n\nThese approaches work by first parsing the URL to extract the path component, and then either using `os.path.basename` or string splitting to get the last segment of the path."
    }
]