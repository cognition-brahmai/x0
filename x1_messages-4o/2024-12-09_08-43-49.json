[
    {
        "role": "user",
        "content": "How can I take multiple lists and put them as different columns in a python dataframe? I attempted to zip three lists together using `res = zip(lst1,lst2,lst3)` but it only yields one column. I also attempted to use the pandas DataFrame function as follows:\n\n```python\npercentile_list = pd.DataFrame({'lst1Tite' : [lst1],\n                                'lst2Tite' : [lst2],\n                                'lst3Tite' : [lst3] }, \n                                columns=['lst1Tite','lst1Tite', 'lst1Tite'])\n```\n\nHowever, this either yields one row by 3 columns, or if I transpose it, it becomes 3 rows and 1 column. I am looking for a solution that gives me a dataframe with the number of rows equal to the length of each independent list and 3 columns, corresponding to the three lists."
    },
    {
        "role": "assistant",
        "content": "To create a pandas DataFrame with multiple lists as different columns, you should pass the lists directly as values in a dictionary, without wrapping them in additional lists. Here's how you can do it:\n\n```python\nimport pandas as pd\n\n# Assume lst1, lst2, and lst3 are your lists\nlst1 = [1, 2, 3]\nlst2 = [4, 5, 6]\nlst3 = [7, 8, 9]\n\n# Create a DataFrame using the lists\npercentile_list = pd.DataFrame({\n    'lst1Title': lst1,\n    'lst2Title': lst2,\n    'lst3Title': lst3\n})\n\n# Display the DataFrame\nprint(percentile_list)\n```\n\nThis will give you a DataFrame with three columns (`lst1Title`, `lst2Title`, and `lst3Title`) and the number of rows equal to the length of the lists. Each row will contain corresponding elements from the lists. Just ensure that all lists have the same length to avoid errors."
    }
]