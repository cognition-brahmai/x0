[
    {
        "role": "user",
        "content": "How can I check if a specific module has been imported in my code? I have a module that occasionally causes issues in my program and I want to avoid importing it. I tried using the following code but it doesn't seem to work:\n```python\nif not has_imported(\"somemodule\"):\n     print('you have not imported somemodule')\n```"
    },
    {
        "role": "assistant",
        "content": "To check if a specific module has been imported in your code, you can use the `sys.modules` dictionary, which keeps track of all loaded modules. Here's how you can modify your code to perform this check:\n\n```python\nimport sys\n\ndef has_imported(module_name):\n    return module_name in sys.modules\n\nif not has_imported(\"somemodule\"):\n    print('You have not imported somemodule')\nelse:\n    print('Somemodule is already imported')\n```\n\nThis code defines a function `has_imported` that checks if the given module name is present in `sys.modules`. If the module is there, it means it has been imported; otherwise, it hasn't been imported yet."
    }
]