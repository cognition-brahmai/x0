[
    {
        "role": "user",
        "content": "I have a named tuple in a module called `FlightsResultsSorter` defined as:\n```python\nimport collections\nnamed_tuple_sex = collections.namedtuple(\n                    'FlightsResultsSorter',\n                        ['TotalPriceASC',\n                         'TransfersASC',\n                         'FlightTimeASC',\n                         'DepartureTimeASC',\n                         'DepartureTimeDESC',\n                         'ArrivalTimeASC',\n                         'ArrivalTimeDESC',\n                         'Airlines']\n                    )\nFlightsResultsSorter = named_tuple_sex(\n    FlightsResultsSorter('TotalPrice', SortOrder.ASC),\n    FlightsResultsSorter('Transfers', SortOrder.ASC),\n    FlightsResultsSorter('FlightTime', SortOrder.ASC),\n    FlightsResultsSorter('DepartureTime', SortOrder.ASC),\n    FlightsResultsSorter('DepartureTime', SortOrder.DESC),\n    FlightsResultsSorter('ArrivalTime', SortOrder.ASC),\n    FlightsResultsSorter('ArrivalTime', SortOrder.DESC),\n    FlightsResultsSorter('Airlines', SortOrder.ASC)\n)\n```\nIn a second module, I am iterating over this collection, and I would like to get the name of the item. For instance, in the following loop:\n```python\nfor x in FlightsResultsSorter:\n    self.sort(x)\n```\nI would like to get the name of `x` such as `DepartureTimeASC` or `ArrivalTimeASC` instead of the object itself. How can I achieve this?"
    },
    {
        "role": "assistant",
        "content": "To achieve this, you need to iterate over the fields of the named tuple instead of directly iterating over the named tuple itself. You can use the `_fields` attribute of the named tuple to get the names of the fields. Here's how you can modify your code to achieve this:\n\n```python\n# Assuming the named tuple is already defined as shown in your example\n\n# Iterate over the fields of the named tuple\nfor field_name in FlightsResultsSorter._fields:\n    # Get the attribute value using the field name\n    attribute_value = getattr(FlightsResultsSorter, field_name)\n    \n    # Use the field name (which is like 'DepartureTimeASC', 'ArrivalTimeASC', etc.)\n    print(f\"Field Name: {field_name}, Attribute Value: {attribute_value}\")\n    \n    # Call your sort function with the attribute value\n    self.sort(attribute_value)\n```\n\n### Explanation:\n- **`_fields`**: This attribute of a named tuple gives you a tuple of the field names in the order they are defined.\n- **`getattr()`**: This function is used to retrieve the value of the attribute by name from an object. Here, it is used to get the actual object associated with each field name.\n\nBy using this approach, you can print or use the field names (`TotalPriceASC`, `TransfersASC`, etc.) while iterating over the named tuple."
    }
]