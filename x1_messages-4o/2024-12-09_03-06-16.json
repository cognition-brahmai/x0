[
    {
        "role": "user",
        "content": "How can I invert a tensor of boolean values in Pytorch? In NumPy, it is possible to perform this operation using np.invert(array), but I am unable to find a similar function in Pytorch. For instance, I have a 2D tensor of boolean values as shown below:\n\n```python\nimport torch\n\nts = torch.rand((10, 4)) < .5\n```\nwhich results in:\n```python\ntensor([[ True,  True, False,  True],\n        [ True,  True,  True,  True],\n        [ True, False,  True,  True],\n        [False,  True,  True, False],\n        [False,  True,  True,  True],\n        [ True,  True,  True,  True],\n        [ True, False,  True,  True],\n        [False,  True, False,  True],\n        [ True,  True, False,  True],\n        [False, False,  True, False]])\n```\nHow can I transform the False values into True and vice versa in Pytorch?"
    },
    {
        "role": "assistant",
        "content": "In PyTorch, you can invert a tensor of boolean values using the bitwise NOT operator (`~`). This operator will flip the boolean values in the tensor, converting `True` to `False` and `False` to `True`. Here's how you can achieve that with your tensor:\n\n```python\nimport torch\n\n# Create the tensor with random boolean values\nts = torch.rand((10, 4)) < 0.5\n\n# Invert the boolean values using the bitwise NOT operator\ninverted_ts = ~ts\n\nprint(inverted_ts)\n```\n\nWhen you run this code, it will output the inverted version of your original boolean tensor, where all `True` values are now `False` and vice versa."
    }
]