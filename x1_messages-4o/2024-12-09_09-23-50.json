[
    {
        "role": "user",
        "content": "I'm working on a program that needs to read and evaluate mathematical expressions. Can anyone provide a code solution for this?"
    },
    {
        "role": "assistant",
        "content": "Certainly! You can use Python to create a program that reads and evaluates mathematical expressions. One of the easiest ways to evaluate expressions in Python is by using the `eval()` function. However, using `eval()` directly can pose security risks if you're evaluating untrusted input. To handle this safely, you can use a library like `sympy`, which can evaluate expressions securely.\n\nHere's a simple example using `sympy`:\n\n```python\nfrom sympy import sympify\n\ndef evaluate_expression(expression):\n    try:\n        # Convert the string expression into a sympy expression\n        expr = sympify(expression)\n        # Evaluate the expression and return the result\n        result = expr.evalf()\n        return result\n    except Exception as e:\n        return f\"Error evaluating expression: {e}\"\n\n# Example usage\nexpression = \"2 * (3 + 4) / 5\"\nresult = evaluate_expression(expression)\nprint(f\"The result of the expression '{expression}' is: {result}\")\n```\n\nIn this code:\n\n- We use `sympify()` from the `sympy` library to safely parse the input expression.\n- The `evalf()` method evaluates the expression numerically.\n- We handle exceptions to catch and report any errors that occur during parsing or evaluation.\n\nMake sure you have the `sympy` library installed. You can install it using pip if you haven't already:\n\n```bash\npip install sympy\n```\n\nFeel free to modify the code to suit your specific needs! If you have more questions or need further assistance, let me know."
    }
]