[
    {
        "role": "user",
        "content": "How can I extend a built-in class in Python, specifically the str class? I've been unable to find up-to-date resources on this topic."
    },
    {
        "role": "assistant",
        "content": "Extending a built-in class in Python, such as the `str` class, is a common task when you want to add additional functionality or modify existing behavior. Here's how you can do it by subclassing the `str` class:\n\n```python\nclass MyString(str):\n    def __init__(self, value):\n        # Initialize the base str class\n        super().__init__()\n\n    def __repr__(self):\n        # Custom representation for your string class\n        return f'MyString({super().__repr__()})'\n\n    def is_palindrome(self):\n        # Custom method to check if the string is a palindrome\n        return self == self[::-1]\n\n    def to_upper(self):\n        # Custom method to convert string to uppercase\n        return self.upper()\n\n# Usage\nmy_str = MyString(\"radar\")\nprint(my_str)              # Output: radar\nprint(my_str.is_palindrome())  # Output: True\nprint(my_str.to_upper())   # Output: RADAR\n```\n\n### Key Points:\n\n- **Subclassing**: You create a new class that inherits from `str`. This allows your new class to behave like a string but also have additional methods or overridden behavior.\n  \n- **Initialization**: You don't need to explicitly call the `str` constructor in the `__init__` method because `str` is immutable. The value is set when the superclass is initialized, and `super().__init__()` is used to ensure any required initialization by the `str` class is performed.\n\n- **Adding Methods**: You can add new methods to your subclass, like `is_palindrome()` or `to_upper()`, to provide additional functionality.\n\n- **Overriding Methods**: You can override existing methods, such as `__repr__()`, to change the behavior of your class when needed.\n\nRemember, since `str` is immutable, you cannot modify the string value in place; any method that changes the string must return a new string."
    }
]