[
    {
        "role": "user",
        "content": "How can I extract the return response from an AWS Lambda function? I have one simple lambda function (A) that returns a dictionary response, and another lambda function (B) that invokes function A and prints the response. However, the response status I'm getting is 202 and I'm not sure why. Also, I'm having trouble extracting the response data from `invoke_response`. Can you guide me on how to do this?\n\nHere's the code for the lambda functions:\n\nLambda function A:\n```\ndef handler(event,context):\n    params = event['list']\n    return {\"params\" : params + [\"abc\"]}\n```\nLambda function B invoking A:\n```\na=[1,2,3]\nx = {\"list\" : a}\ninvoke_response = lambda_client.invoke(FunctionName=\"monitor-workspaces-status\",\n                                       InvocationType='Event',\n                                       Payload=json.dumps(x))\nprint (invoke_response)\n```\nAnd this is the invoke_response:\n```\n{u'Payload': <botocore.response.StreamingBody object at 0x7f47c58a1e90>, 'ResponseMetadata': {'HTTPStatusCode': 202, 'RequestId': '9a6a6820-0841-11e6-ba22-ad11a929daea'}, u'StatusCode': 202}\n```"
    },
    {
        "role": "assistant",
        "content": "When you invoke an AWS Lambda function using the `InvocationType='Event'`, it triggers the function asynchronously. This means that the function is invoked, but your code does not wait for it to complete, which is why you're seeing a status code of 202 (Accepted). This status code indicates that the request has been accepted for processing, but the processing has not been completed yet.\n\nHere's how you can modify your code to invoke the lambda function synchronously and extract the response:\n\n### Step-by-step Guide:\n\n1. **Change Invocation Type**: To receive a direct response from the function, change the `InvocationType` to `'RequestResponse'`.\n\n2. **Read the Payload**: The response from the `invoke` call is a dictionary that contains a `Payload` key, which is a `StreamingBody` object. You need to read this object to get the actual response data.\n\n### Updated Code for Lambda Function B:\n\n```python\nimport boto3\nimport json\n\n# Initialize the Lambda client\nlambda_client = boto3.client('lambda')\n\ndef lambda_handler(event, context):\n    # Prepare the input for Lambda A\n    a = [1, 2, 3]\n    x = {\"list\": a}\n\n    # Invoke Lambda A synchronously\n    invoke_response = lambda_client.invoke(\n        FunctionName=\"monitor-workspaces-status\",\n        InvocationType='RequestResponse',  # Change to 'RequestResponse' for synchronous invocation\n        Payload=json.dumps(x)\n    )\n\n    # Read and decode the response payload\n    response_payload = invoke_response['Payload'].read()\n    response_data = json.loads(response_payload)\n\n    # Print the extracted response data\n    print(response_data)\n\n    return response_data\n\n# Test the function\nlambda_handler({}, {})\n```\n\n### Explanation:\n\n- **InvocationType='RequestResponse'**: This ensures the Lambda function is invoked synchronously, and your code waits for the execution to complete before proceeding.\n\n- **Reading the Payload**: The `Payload` is a streaming object. You should read the entire content and then decode it using `json.loads` to convert it back to a dictionary.\n\nThis should allow you to extract and print the response from Lambda function A in Lambda function B. Make sure that the IAM role associated with Lambda function B has the necessary permissions to invoke Lambda function A."
    }
]