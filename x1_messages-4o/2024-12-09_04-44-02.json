[
    {
        "role": "user",
        "content": "How can I use Matplotlib to plot a 3D cube centered at 0 with a side length of 2, a wireframe sphere centered at 0 with a radius of 1, a point at coordinates [0, 0, 0], and a vector that starts at this point and goes to [1, 1, 1]?"
    },
    {
        "role": "assistant",
        "content": "To plot a 3D cube, a wireframe sphere, a point, and a vector using Matplotlib, you'll need to use the `mplot3d` toolkit, which is part of Matplotlib. Below is an example of how you can achieve this:\n\n```python\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\nimport numpy as np\n\n# Create a new figure\nfig = plt.figure()\nax = fig.add_subplot(111, projection='3d')\n\n# Define the cube\ncube_size = 2\nr = [-cube_size/2, cube_size/2]\n\n# Plot the cube\nfor s, e in combinations(np.array(list(product(r, r, r))), 2):\n    if np.sum(np.abs(s-e)) == r[1] - r[0]:\n        ax.plot3D(*zip(s, e), color=\"b\")\n\n# Define the sphere\nu = np.linspace(0, 2 * np.pi, 100)\nv = np.linspace(0, np.pi, 100)\nx = 1 * np.outer(np.cos(u), np.sin(v))\ny = 1 * np.outer(np.sin(u), np.sin(v))\nz = 1 * np.outer(np.ones(np.size(u)), np.cos(v))\n\n# Plot the sphere\nax.plot_wireframe(x, y, z, color='r', linewidth=0.5)\n\n# Plot the point\nax.scatter([0], [0], [0], color=\"g\", s=100)\n\n# Define the vector\nvector_start = np.array([0, 0, 0])\nvector_end = np.array([1, 1, 1])\nax.quiver(vector_start[0], vector_start[1], vector_start[2],\n          vector_end[0], vector_end[1], vector_end[2],\n          arrow_length_ratio=0.1, color='k')\n\n# Set axis limits\nax.set_xlim([-2, 2])\nax.set_ylim([-2, 2])\nax.set_zlim([-2, 2])\n\n# Set labels\nax.set_xlabel('X')\nax.set_ylabel('Y')\nax.set_zlabel('Z')\n\n# Show the plot\nplt.show()\n```\n\n### Explanation:\n- **Cube**: We use combinations and product from itertools to plot lines between each pair of points that define the cube's edges.\n- **Sphere**: We use parametric equations to define the coordinates of the sphere and plot it using `plot_wireframe`.\n- **Point**: The `scatter` function draws a single point at the origin.\n- **Vector**: The `quiver` function is used to plot a vector starting from the origin to the point [1, 1, 1].\n\nThis code will create a 3D plot with the described objects. Make sure you have Matplotlib installed, and run this script in an environment that supports graphical output."
    }
]