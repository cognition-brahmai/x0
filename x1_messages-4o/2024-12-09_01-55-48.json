[
    {
        "role": "user",
        "content": "How can I utilize virtualenv with Google App Engine SDK on Mac OS X 10.6? I am using the system Python and I had it working until last week but now I am encountering errors importing the standard library like \"ImportError: No module named base64\" when I start my app with `dev_appserver.py`. I have tried setting up a `gae.pth` file containing the Google App Engine libraries in my virtual environment but still getting the same error. Here are the steps I followed:\n\n1. Setup a virtual environment using this command: `virtualenv --python=python2.5 --no-site-packages ~/.virtualenv/foobar`\n2. Added a `gae.pth` file to `~/.virtualenv/foobar/lib/python2.5/site-packages/` containing the Google App Engine libraries paths.\n3. Activated the \"foobar\" virtualenv and tried to start my app with `dev_appserver.py`.\n\nI am using Google App Engine SDK 1.3.7, Mac OS X Snow Leopard 10.6.4, and virtualenv 1.5.1. If I use the GoogleAppEngineLauncher to start my app, it works. But if I run `python /usr/local/bin/dev_appserver.py` with the virtualenv python, the problem persists."
    },
    {
        "role": "assistant",
        "content": "To troubleshoot the issue you're experiencing with using `virtualenv` alongside Google App Engine SDK on Mac OS X 10.6, there are a few steps and considerations that could help resolve the \"ImportError: No module named base64\" problem:\n\n1. **Check Python Version**: Ensure that the Python version used by your virtual environment is compatible with the App Engine SDK you are using. Since you are using Python 2.5, verify that this is indeed the version expected by your SDK version (1.3.7). Although the SDK supports Python 2.5, there might be some compatibility issues, and it might be worth trying with Python 2.7 if possible.\n\n2. **Virtualenv Setup**: When you create your virtualenv with `--no-site-packages`, it means the default system Python packages won't be available in your virtual environment. This is generally a good practice, but you need to ensure all required packages are available in the virtual environment.\n\n3. **Correctly Setup `gae.pth`**: Double-check the `gae.pth` file to ensure it includes the correct paths to the App Engine SDK libraries. It should reference paths like:\n   ```\n   /path/to/google_appengine\n   /path/to/google_appengine/lib\n   /path/to/google_appengine/lib/yaml/lib\n   ```\n   Make sure these paths are correct and match your App Engine SDK installation.\n\n4. **Environment Variables**: Ensure the `PYTHONPATH` environment variable includes the path to the Google App Engine SDK. You can set it before running your app:\n   ```bash\n   export PYTHONPATH=$PYTHONPATH:/path/to/google_appengine\n   ```\n\n5. **Activate Virtualenv**: Make sure the virtual environment is activated correctly. Double-check that the `python` command used actually points to the virtualenv's Python interpreter.\n\n6. **Verify Installations**: Ensure that the standard library is not somehow missing or misconfigured in your virtual environment. You can try creating a new virtual environment as a test to see if the same issue persists.\n\n7. **Google App Engine Launcher**: Since the app works with the GoogleAppEngineLauncher, there might be some configuration or environment difference when running manually. Try to mimic the environment variables and settings used by the launcher.\n\n8. **Debug Logging**: Add some debug logging to verify which Python and library paths are being used when you start the app. This can help identify if there's a path issue.\n\nIf these steps don't resolve the issue, consider consulting the Google App Engine documentation and community forums for any version-specific quirks or additional troubleshooting tips. If the problem persists, you might consider upgrading to a newer version of the SDK and Python, if your project allows it, as it could alleviate compatibility issues."
    }
]