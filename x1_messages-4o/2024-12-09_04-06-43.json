[
    {
        "role": "user",
        "content": "I am trying to install pymssql on Ubuntu 12.04 using pip but I'm encountering some issues. The error I'm getting is as follows:\n\n```\nDownloading pymssql-2.0.0b1-dev-20130403.tar.gz (2.8Mb): 2.8Mb downloaded\nRunning setup.py egg_info for package pymssql\nwarning: no files found matching '*.pyx' under directory 'Cython/Debugger/Tests'\nwarning: no files found matching '*.pxd' under directory 'Cython/Debugger/Tests'\nwarning: no files found matching '*.h' under directory 'Cython/Debugger/Tests'\nwarning: no files found matching '*.pxd' under directory 'Cython/Utility'\nCompiling module Cython.Plex.Scanners ...\nCompiling module Cython.Plex.Actions ...\nCompiling module Cython.Compiler.Lexicon ...\nCompiling module Cython.Compiler.Scanning ...\nCompiling module Cython.Compiler.Parsing ...\nCompiling module Cython.Compiler.Visitor ...\nCompiling module Cython.Compiler.FlowControl ...\nCompiling module Cython.Compiler.Code ...\nCompiling module Cython.Runtime.refnanny ...\nInstalled /home/radek/build/pymssql/Cython-0.19.1-py2.7-linux-x86_64.egg\ncc -c /tmp/clock_gettimeh7sDgX.c -o tmp/clock_gettimeh7sDgX.o\ncc tmp/clock_gettimeh7sDgX.o -lrt -o a.out\nwarning: no files found matching 'win32/freetds.zip'\nInstalling collected packages: pymssql\nRunning setup.py install for pymssql\nskipping '_mssql.c' Cython extension (up-to-date)\nbuilding '_mssql' extension\ngcc -pthread -fno-strict-aliasing -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -fPIC -I/home/radek/build/pymssql/freetds/nix_64/include -I/usr/include/python2.7 -c _mssql.c -o build/temp.linux-x86_64-2.7/_mssql.o -Wno-parentheses-equality -DMSDBLIB\ngcc -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions -Wl,-Bsymbolic-functions -Wl,-z,relro build/temp.linux-x86_64-2.7/_mssql.o -L/home/radek/build/pymssql/freetds/nix_64/lib -lsybdb -lct -lrt -o build/lib.linux-x86_64-2.7/_mssql.so\n/usr/bin/ld: cannot find -lct\ncollect2: ld returned 1 exit status\nerror: command 'gcc' failed with exit status 1\nComplete output from command /usr/bin/python -c \"import setuptools;__file__='/home/radek/build/pymssql/setup.py';exec(compile(open(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" install --single-version-externally-managed --record /tmp/pip-Et_P1_-record/install-record.txt:\nrunning install\nrunning build\nrunning build_ext\nskipping '_mssql.c' Cython extension (up-to-date)\nbuilding '_mssql' extension\ncreating build\ncreating build/temp.linux-x86_64-2.7\ngcc -pthread -fno-strict-aliasing -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -fPIC -I/home/radek/build/pymssql/freetds/nix_64/include -I/usr/include/python2.7 -c _mssql.c -o build/temp.linux-x86_64-2.7/_mssql.o -Wno-parentheses-equality -DMSDBLIB\ncreating build/lib.linux-x86_64-2.7\ngcc -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions -Wl,-Bsymbolic-functions -Wl,-z,relro build/temp.linux-x86_64-2.7/_mssql.o -L/home/radek/build/pymssql/freetds/nix_64/lib -lsybdb -lct -lrt -o build/lib.linux-x86_64-2.7/_mssql.so\n/usr/bin/ld: cannot find -lct\ncollect2: ld returned 1 exit status\nerror: command 'gcc' failed with exit status 1\nCommand /usr/bin/python -c \"import setuptools;__file__='/home/radek/build/pymssql/setup.py';exec(compile(open(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" install --single-version-externally-managed --record /tmp/pip-Et_P1_-record/install-record.txt failed with error code 1\n```\n\nHow can I resolve this issue and successfully install pymssql?"
    },
    {
        "role": "assistant",
        "content": "The error you're encountering indicates that the linker (`ld`) cannot find the `-lct` library, which is likely a part of the FreeTDS library that `pymssql` depends on for connecting to MS SQL Server. Here\u2019s how you can resolve this issue:\n\n1. **Install FreeTDS**: First, ensure that FreeTDS is installed on your system. You can do this using the package manager:\n\n   ```bash\n   sudo apt-get update\n   sudo apt-get install freetds-dev\n   ```\n\n   This should provide the necessary libraries, such as `libct`.\n\n2. **Verify Library Path**: Make sure that the library path where FreeTDS is installed is included in your library path. You can check this by running:\n\n   ```bash\n   ldconfig -p | grep libct\n   ```\n\n   If it doesn't show up, you might need to manually add the library path to your `LD_LIBRARY_PATH` environment variable:\n\n   ```bash\n   export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH\n   ```\n\n   You can add this line to your `~/.bashrc` or `~/.bash_profile` to make it persistent across sessions.\n\n3. **Reinstall pymssql**: After ensuring that FreeTDS is installed and the library path is correctly set, try reinstalling `pymssql`:\n\n   ```bash\n   pip install pymssql\n   ```\n\n4. **Check GCC and Development Tools**: Ensure that you have the necessary development tools installed:\n\n   ```bash\n   sudo apt-get install build-essential\n   ```\n\nThis should resolve the linking error. If you continue to experience issues, verify that the version of FreeTDS you installed is compatible with the version of `pymssql` you are trying to install. You might also consider upgrading your Ubuntu distribution if possible, as 12.04 is quite old and may have compatibility issues with newer software packages."
    }
]