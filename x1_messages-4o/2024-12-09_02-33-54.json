[
    {
        "role": "user",
        "content": "How can I convert a Unicode string to uppercase in Python 2.6? When I run the command `print 'ex\u00e1mple'.upper()` the output is 'EX\u00e1MPLE'. However, I need the output to be 'EX\u00c1MPLE' where the 'a' retains its acute accent but in uppercase."
    },
    {
        "role": "assistant",
        "content": "In Python 2.6, handling Unicode strings requires a bit more care than in later versions. To properly convert a Unicode string to uppercase while preserving characters with accents, you should ensure that your string is a Unicode string and then use the `.upper()` method.\n\nHere's how you can do it:\n\n1. First, ensure your string is a Unicode string by prefixing it with a `u`.\n2. Use the `.upper()` method on this Unicode string.\n\nHere's an example:\n\n```python\n# -*- coding: utf-8 -*-\nunicode_string = u'ex\u00e1mple'\nuppercase_string = unicode_string.upper()\nprint(uppercase_string)\n```\n\nThis should give you the correct output: `EX\u00c1MPLE`.\n\nIt's essential to declare the encoding at the top of your script (`# -*- coding: utf-8 -*-`) to ensure the script handles UTF-8 encoded characters correctly. By using a Unicode string (`u'ex\u00e1mple'`), Python will properly handle the accented character when converting to uppercase."
    }
]