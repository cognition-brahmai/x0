[
    {
        "role": "user",
        "content": "How can I fill empty cells in a Pandas DataFrame with the previous row's value if they start with a number? I attempted to solve this by using the `fillna()` method with `method='ffill'`, but it didn't produce the desired results. For instance, this is my current data:\n\n```python\n    Text    Text    \n    30      Text    Text    \n            Text    Text    \n            Text    Text    \n    31      Text    Text\n    Text    Text    \n    31      Text    Text    \n            Text    Text    \n            Text    Text    \n    32      Text    Text\n    Text    Text    \n            Text    Text    \n            Text    Text    \n            Text    Text    \n            Text    Text\n```\n\nAnd I want it to be like this:\n\n```python\nText    Text    \n30      Text    Text    \n30      Text    Text    \n30      Text    Text    \n31      Text    Text\nText    Text    \n31      Text    Text    \n31      Text    Text    \n31      Text    Text    \n32      Text    Text\nText    Text    \n        Text    Text    \n        Text    Text    \n        Text    Text    \n        Text    Text\n```\n\nHere is the code I tried:\n\n```python\ndata = pd.read_csv('DATA.csv', sep='\\t', dtype=object, error_bad_lines=False)\ndata = data.fillna(method='ffill', inplace=True)\nprint(data)\n```\n\nBut it did not work. Is there any way to achieve this?"
    },
    {
        "role": "assistant",
        "content": "To achieve the desired result, you need to apply a more customized approach to fill the empty cells with the value from the previous row, but only when the previous row starts with a number. You can use the `str.extract()` method to check if a value starts with a number and then use `ffill()` accordingly. Here's how you can do it:\n\n```python\nimport pandas as pd\n\n# Sample data\ndata = {\n    'Col1': ['30', None, None, '31', None, '31', None, None, '32', None, None, None, None, None],\n    'Col2': ['Text', 'Text', 'Text', 'Text', 'Text', 'Text', 'Text', 'Text', 'Text', 'Text', 'Text', 'Text', 'Text', 'Text'],\n    'Col3': ['Text', 'Text', 'Text', 'Text', 'Text', 'Text', 'Text', 'Text', 'Text', 'Text', 'Text', 'Text', 'Text', 'Text']\n}\n\n# Create DataFrame\ndf = pd.DataFrame(data)\n\n# Function to check if a value starts with a number\ndef starts_with_number(val):\n    return str(val).strip().startswith(tuple(\"0123456789\"))\n\n# Fill empty cells with previous row's value if it starts with a number\nfor col in df.columns:\n    mask = df[col].apply(starts_with_number)\n    df.loc[~mask, col] = None  # Set non-starting number values to NaN\n    df[col] = df[col].fillna(method='ffill')  # Forward fill\n\nprint(df)\n```\n\nThis code snippet first checks if the cells start with a number using the `starts_with_number` function. It then uses this condition to selectively forward fill the values in your DataFrame. This approach ensures that only cells that start with a number are considered for filling downwards."
    }
]