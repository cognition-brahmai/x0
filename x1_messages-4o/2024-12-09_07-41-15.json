[
    {
        "role": "user",
        "content": "I am trying to generate a list of numbers and their negative counterparts in Python. For instance, I want to create a list with the numbers 6 to 9 and -6 to -9. My current approach is to generate two lists and then join them together, as shown below:\n\n```python\nl = [x for x in range(6,10)]\nl += [-x for x in l]\n```\n\nHowever, this method seems inconvenient. Is there a more efficient one-liner to achieve this?"
    },
    {
        "role": "assistant",
        "content": "Certainly! You can achieve this in a more concise manner by using a single list comprehension that iterates over the desired range and includes both the positive and negative counterparts. Here's a one-liner that accomplishes this:\n\n```python\nl = [x for x in range(6, 10)] + [-x for x in range(6, 10)]\n```\n\nAlternatively, you can combine the comprehension into a single loop to avoid creating two separate lists:\n\n```python\nl = [x * sign for x in range(6, 10) for sign in (1, -1)]\n```\n\nBoth of these approaches will give you the list `[6, 7, 8, 9, -6, -7, -8, -9]` efficiently in a single line."
    }
]