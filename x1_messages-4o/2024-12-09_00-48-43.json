[
    {
        "role": "user",
        "content": "How can I include a HTML file in a Jinja2 template? I am using the Flask micro-framework which uses Jinja templates. I have a parent template.html and child templates called child1.html and child2.html. Some of these child templates are large HTML files and I want to split them for better clarity. I have tried to implement this by referring to a stack overflow question [here](https://stackoverflow.com/questions/8988855/include-another-html-file-in-a-html-file), but I had problems implementing it."
    },
    {
        "role": "assistant",
        "content": "To include an HTML file within a Jinja2 template while using the Flask framework, you can use Jinja2's `{% include %}` directive. This allows you to include external HTML files or templates into your current template. Here's how you can do it:\n\n1. **Create your templates**: Let's assume you have the following structure:\n\n   ```\n   templates/\n   \u251c\u2500\u2500 parent_template.html\n   \u251c\u2500\u2500 child1.html\n   \u251c\u2500\u2500 child2.html\n   \u251c\u2500\u2500 parts/\n       \u251c\u2500\u2500 header.html\n       \u251c\u2500\u2500 footer.html\n   ```\n\n2. **Use `{% include %}` in your templates**:\n\n   In your `child1.html` or `child2.html`, you can include other HTML files like so:\n\n   ```html\n   <!-- child1.html -->\n   {% extends 'parent_template.html' %}\n\n   {% block content %}\n   <h1>This is Child 1</h1>\n   {% include 'parts/header.html' %}\n   <p>Some content for child 1.</p>\n   {% include 'parts/footer.html' %}\n   {% endblock %}\n   ```\n\n   ```html\n   <!-- child2.html -->\n   {% extends 'parent_template.html' %}\n\n   {% block content %}\n   <h1>This is Child 2</h1>\n   {% include 'parts/header.html' %}\n   <p>Some content for child 2.</p>\n   {% include 'parts/footer.html' %}\n   {% endblock %}\n   ```\n\n3. **Set up your `parent_template.html`**:\n\n   Your parent template might look like this:\n\n   ```html\n   <!-- parent_template.html -->\n   <!DOCTYPE html>\n   <html lang=\"en\">\n   <head>\n       <meta charset=\"UTF-8\">\n       <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n       <title>My Website</title>\n   </head>\n   <body>\n       {% block content %}\n       <!-- Default content if block is not overridden -->\n       <p>Welcome to my website</p>\n       {% endblock %}\n   </body>\n   </html>\n   ```\n\n4. **Render templates in your Flask view functions**:\n\n   In your Flask application, render the templates as needed:\n\n   ```python\n   from flask import Flask, render_template\n\n   app = Flask(__name__)\n\n   @app.route('/child1')\n   def show_child1():\n       return render_template('child1.html')\n\n   @app.route('/child2')\n   def show_child2():\n       return render_template('child2.html')\n\n   if __name__ == '__main__':\n       app.run(debug=True)\n   ```\n\nThis approach helps in organizing your HTML files efficiently by breaking them into smaller, reusable components. Using `{% include %}` allows you to manage repeated sections like headers, footers, or sidebars across different templates."
    }
]