[
    {
        "role": "user",
        "content": "I'm currently working with SQLAlchemy and have the following query: \n\n```python\nprofiles = session.query(profile.name).filter(and_(profile.email == email, profile.password == password_hash))\n```\n\nI'm looking for a way to check if there is a row and how to return just the first row if there is a match. How do I accomplish this?"
    },
    {
        "role": "assistant",
        "content": "To check if there is a row that matches your query and to return just the first row if there is a match, you can use the `first()` method provided by SQLAlchemy. This method will return the first result of the query or `None` if there are no results. Here's how you can modify your query:\n\n```python\nfrom sqlalchemy import and_\n\n# Assuming 'session' is your SQLAlchemy session and 'profile' is your table model\nprofile = session.query(Profile).filter(\n    and_(Profile.email == email, Profile.password == password_hash)\n).first()\n\nif profile:\n    print(f\"Profile found: {profile.name}\")\nelse:\n    print(\"No matching profile found.\")\n```\n\nIn this example:\n- Replace `Profile` with the actual name of your model class representing the table.\n- The `first()` method is used to fetch the first matching row.\n- If a profile is found, it prints the profile's name; otherwise, it prints a message indicating no matching profile was found."
    }
]