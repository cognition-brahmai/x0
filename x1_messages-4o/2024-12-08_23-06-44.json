[
    {
        "role": "user",
        "content": "Parse the following JSON object which contains a list of electronic items with their names and prices. In addition to parsing the object, your task is to sort the list in ascending order based on the price of the items and display it in a table format. You must also include an additional constraint where you are not allowed to use any built-in sorting function in your programming language."
    },
    {
        "role": "assistant",
        "content": "To parse and sort the JSON object without using any built-in sorting function, you can implement a simple sorting algorithm like bubble sort. I'll guide you through the process using Python as an example.\n\nLet's assume the JSON object is as follows:\n\n```json\n{\n  \"items\": [\n    {\"name\": \"Laptop\", \"price\": 800},\n    {\"name\": \"Smartphone\", \"price\": 600},\n    {\"name\": \"Headphones\", \"price\": 150},\n    {\"name\": \"Monitor\", \"price\": 300},\n    {\"name\": \"Keyboard\", \"price\": 100}\n  ]\n}\n```\n\n**Step 1: Parse the JSON Object**\n\nFirst, you need to parse the JSON object. In Python, you can use the `json` module for this purpose.\n\n```python\nimport json\n\njson_data = '''\n{\n  \"items\": [\n    {\"name\": \"Laptop\", \"price\": 800},\n    {\"name\": \"Smartphone\", \"price\": 600},\n    {\"name\": \"Headphones\", \"price\": 150},\n    {\"name\": \"Monitor\", \"price\": 300},\n    {\"name\": \"Keyboard\", \"price\": 100}\n  ]\n}\n'''\n\ndata = json.loads(json_data)\nitems = data['items']\n```\n\n**Step 2: Implement Bubble Sort**\n\nNow, let's implement the bubble sort algorithm to sort the items based on their price.\n\n```python\ndef bubble_sort(items):\n    n = len(items)\n    for i in range(n):\n        for j in range(0, n-i-1):\n            if items[j]['price'] > items[j+1]['price']:\n                items[j], items[j+1] = items[j+1], items[j]\n\nbubble_sort(items)\n```\n\n**Step 3: Display the Sorted Items in Table Format**\n\nFinally, display the sorted items in a table format.\n\n```python\ndef display_table(items):\n    print(f\"{'Name':<15} {'Price':<10}\")\n    print(\"-\" * 25)\n    for item in items:\n        print(f\"{item['name']:<15} {item['price']:<10}\")\n\ndisplay_table(items)\n```\n\nPutting it all together, your complete script would look like this:\n\n```python\nimport json\n\njson_data = '''\n{\n  \"items\": [\n    {\"name\": \"Laptop\", \"price\": 800},\n    {\"name\": \"Smartphone\", \"price\": 600},\n    {\"name\": \"Headphones\", \"price\": 150},\n    {\"name\": \"Monitor\", \"price\": 300},\n    {\"name\": \"Keyboard\", \"price\": 100}\n  ]\n}\n'''\n\n# Parse JSON\ndata = json.loads(json_data)\nitems = data['items']\n\n# Bubble sort\ndef bubble_sort(items):\n    n = len(items)\n    for i in range(n):\n        for j in range(0, n-i-1):\n            if items[j]['price'] > items[j+1]['price']:\n                items[j], items[j+1] = items[j+1], items[j]\n\nbubble_sort(items)\n\n# Display table\ndef display_table(items):\n    print(f\"{'Name':<15} {'Price':<10}\")\n    print(\"-\" * 25)\n    for item in items:\n        print(f\"{item['name']:<15} {item['price']:<10}\")\n\ndisplay_table(items)\n```\n\nThis script will parse the JSON object, sort the items by price using bubble sort, and then display the sorted list in a tabular format."
    }
]