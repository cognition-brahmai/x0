[
    {
        "role": "user",
        "content": "How can I find and append to a new list the elements that are present in one list but not in the other using Python? For instance, I have two lists:\n\n```python\nlist_1=[\"a\", \"b\", \"c\", \"d\", \"e\"]\nlist_2=[\"a\", \"f\", \"c\", \"m\"] \n```\n\nI want to create a new list, `main_list`, which will contain all the elements from `list_2` that are not found in `list_1`. The expected result is `main_list=[\"f\", \"m\"]`."
    },
    {
        "role": "assistant",
        "content": "To achieve this, you can use a list comprehension to iterate over `list_2` and include only those elements that are not present in `list_1`. Here's how you can do it:\n\n```python\nlist_1 = [\"a\", \"b\", \"c\", \"d\", \"e\"]\nlist_2 = [\"a\", \"f\", \"c\", \"m\"]\n\n# Create a new list with elements from list_2 that are not in list_1\nmain_list = [item for item in list_2 if item not in list_1]\n\nprint(main_list)  # Output: ['f', 'm']\n```\n\nThis code creates `main_list` by iterating over each element in `list_2` and checking if it is not in `list_1`. If the condition is true, the element is added to `main_list`. As a result, `main_list` will contain the elements `[\"f\", \"m\"]`, which are present in `list_2` but not in `list_1`."
    }
]