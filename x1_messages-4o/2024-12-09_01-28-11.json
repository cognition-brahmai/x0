[
    {
        "role": "user",
        "content": "How can I determine if a string contains any letters from the alphabet using pure Python? For instance, given the strings \"(555).555-5555\" and \"(555) 555 - 5555 ext. 5555\", the function should return False for the first string as it contains no alphabetic characters and True for the second string as it does contain alphabetic characters."
    },
    {
        "role": "assistant",
        "content": "To determine if a string contains any letters from the alphabet in pure Python, you can use a simple function that iterates through each character in the string and checks if it is an alphabetic character. You can use the `isalpha()` method, which returns `True` if all the characters in the string are alphabetic and there is at least one character, and `False` otherwise.\n\nHere's a sample function to achieve what you described:\n\n```python\ndef contains_alpha(s):\n    for char in s:\n        if char.isalpha():\n            return True\n    return False\n\n# Test cases\nprint(contains_alpha(\"(555).555-5555\"))        # Output: False\nprint(contains_alpha(\"(555) 555 - 5555 ext. 5555\"))  # Output: True\n```\n\nIn this function, `contains_alpha`, we iterate over each character in the input string `s`. If any character is alphabetic (i.e., `char.isalpha()` returns `True`), the function returns `True`. If the loop completes without finding any alphabetic characters, the function returns `False`."
    }
]