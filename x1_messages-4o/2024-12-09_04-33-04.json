[
    {
        "role": "user",
        "content": "How can I configure Jupyter to display all interactive output, rather than just the last result, without having to resort to using print? For example, if I have the following code:\n```python\na=3\na\na+1\n```\nI would like it to display both 3 and 4."
    },
    {
        "role": "assistant",
        "content": "To configure Jupyter to display all interactive outputs without using `print`, you can make use of the `IPython.core.interactiveshell` module to automatically display all expressions. Here's how you can do it:\n\n1. **Using the `display` function from IPython**:\n   You can explicitly call the `display` function from IPython for each variable or expression you want to output.\n\n   ```python\n   from IPython.display import display\n\n   a = 3\n   display(a)\n   display(a + 1)\n   ```\n\n2. **Using an IPython magic command**:\n   You can create a custom cell magic to automatically display all expressions in a cell. Here\u2019s a simple example:\n\n   ```python\n   from IPython.core.magic import register_cell_magic\n\n   @register_cell_magic\n   def alloutput(line, cell):\n       from IPython.display import display\n       for line in cell.split('\\n'):\n           if line.strip():\n               display(eval(line))\n\n   ```\n\n   You can then use this magic command in your notebook cell:\n\n   ```python\n   %%alloutput\n   a = 3\n   a\n   a + 1\n   ```\n\n3. **Modify Jupyter's behavior using the `InteractiveShell` class**:\n   You can modify the behavior of the InteractiveShell to always display all expressions. This is a more global change that affects the entire notebook session:\n\n   ```python\n   from IPython.core.interactiveshell import InteractiveShell\n   InteractiveShell.ast_node_interactivity = \"all\"\n   ```\n\n   Adding this line in a notebook cell will change the interactivity setting to display all outputs for every cell in the notebook. You can place this line at the beginning of your notebook to ensure all cells behave this way.\n\nChoose the method that best suits your workflow. If you want a persistent change for all notebooks, consider adding the `InteractiveShell` configuration to your Jupyter startup file."
    }
]