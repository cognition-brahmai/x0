[
    {
        "role": "user",
        "content": "I need help creating a Python program that calculates the total cost of an order based on the item cost and quantity. Can someone provide a solution?"
    },
    {
        "role": "assistant",
        "content": "Certainly! Below is a simple Python program that calculates the total cost of an order based on the item cost and quantity. The program prompts the user to input the item cost and quantity, then computes and displays the total cost.\n\n```python\ndef calculate_total_cost(item_cost, quantity):\n    return item_cost * quantity\n\ndef main():\n    try:\n        item_cost = float(input(\"Enter the cost of a single item: \"))\n        quantity = int(input(\"Enter the quantity of items: \"))\n\n        if item_cost < 0 or quantity < 0:\n            print(\"Item cost and quantity should be non-negative.\")\n        else:\n            total_cost = calculate_total_cost(item_cost, quantity)\n            print(f\"The total cost of the order is: {total_cost:.2f}\")\n    except ValueError:\n        print(\"Please enter valid numerical values for item cost and quantity.\")\n\nif __name__ == \"__main__\":\n    main()\n```\n\n### Explanation:\n- The function `calculate_total_cost(item_cost, quantity)` multiplies the `item_cost` by the `quantity` to get the total cost.\n- The `main()` function handles user input and validation:\n  - It prompts the user to enter the cost of a single item and the quantity of items.\n  - It checks if the entered values are non-negative.\n  - It calculates and prints the total cost of the order.\n  - It includes a `try-except` block to handle any input errors, such as entering a non-numeric value.\n\nYou can run this program, and it will guide you to enter the required inputs and provide the total cost based on your inputs."
    }
]