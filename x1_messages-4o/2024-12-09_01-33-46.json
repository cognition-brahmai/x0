[
    {
        "role": "user",
        "content": "In Django, what's the difference between using filter() and get() in querysets? For example, when I use the two functions as follows, they seem to return similar results. \n\n<pre><code>\n    >>> Question.objects.filter(id=1)\n    <QuerySet [< What's new?>]>\n    >>> Question.objects.get(pk=1)\n    < What's new?>\n</code></pre>"
    },
    {
        "role": "assistant",
        "content": "In Django, `filter()` and `get()` are both methods used to query the database, but they serve different purposes and behave differently.\n\n### `filter()`\n\n- **Purpose**: Used to retrieve multiple objects that match the given criteria.\n- **Return Type**: Always returns a `QuerySet`, which is a collection of database objects. Even if only one object matches the criteria or none at all, it will still return a `QuerySet`.\n- **Usage**: Useful when you expect multiple results or when you want to iterate over a collection of objects.\n- **Example**: \n  ```python\n  questions = Question.objects.filter(id=1)\n  # questions is a QuerySet, you can iterate over it\n  for question in questions:\n      print(question)\n  ```\n\n### `get()`\n\n- **Purpose**: Used to retrieve a single object that matches the given criteria.\n- **Return Type**: Returns a single object directly, not a `QuerySet`.\n- **Behavior**: Raises a `DoesNotExist` exception if no object matches the criteria, and a `MultipleObjectsReturned` exception if more than one object matches the criteria.\n- **Usage**: Useful when you are sure that exactly one object should match the criteria.\n- **Example**:\n  ```python\n  question = Question.objects.get(pk=1)\n  # question is a single object, not a QuerySet\n  print(question)\n  ```\n\n### Key Differences\n\n1. **Return Type**: `filter()` returns a `QuerySet` regardless of the number of results, while `get()` returns a single object.\n2. **Exception Handling**: `get()` raises exceptions when no results or multiple results are found, whereas `filter()` handles these scenarios by returning an empty `QuerySet` or a `QuerySet` with multiple results.\n3. **Use Case**: Use `filter()` when you expect multiple results or need to handle cases where no results are found gracefully. Use `get()` when you expect exactly one result.\n\nIn your example:\n\n- `Question.objects.filter(id=1)` returns a `QuerySet` with one object, assuming there is a match.\n- `Question.objects.get(pk=1)` returns that single object directly, assuming there's exactly one match. If there's no match or multiple matches, it will raise an exception."
    }
]