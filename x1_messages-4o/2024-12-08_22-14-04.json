[
    {
        "role": "user",
        "content": "How can I use an HTML page to display the sum of values in column B based on a condition in column A? Suppose I have a table with columns \"Product Name\", \"Price\", and \"In Stock\". How can I display the total value of products that are currently in stock using an HTML page? Please provide HTML code that uses the SUMIF function in Excel to calculate this."
    },
    {
        "role": "assistant",
        "content": "To achieve this functionality directly within an HTML page, you'll need to use JavaScript to filter and sum the values based on a condition. HTML itself doesn't have built-in functions like Excel's SUMIF, but you can use JavaScript to perform similar operations.\n\nHere's a simple example of how you can display the total value of products that are currently in stock using HTML and JavaScript:\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Product Total Value</title>\n    <style>\n        table {\n            width: 50%;\n            margin: 20px auto;\n            border-collapse: collapse;\n        }\n        table, th, td {\n            border: 1px solid black;\n        }\n        th, td {\n            padding: 10px;\n            text-align: center;\n        }\n    </style>\n</head>\n<body>\n\n    <h2 style=\"text-align:center;\">Product Inventory</h2>\n    <table id=\"productTable\">\n        <tr>\n            <th>Product Name</th>\n            <th>Price</th>\n            <th>In Stock</th>\n        </tr>\n        <tr>\n            <td>Product A</td>\n            <td>150</td>\n            <td>Yes</td>\n        </tr>\n        <tr>\n            <td>Product B</td>\n            <td>200</td>\n            <td>No</td>\n        </tr>\n        <tr>\n            <td>Product C</td>\n            <td>100</td>\n            <td>Yes</td>\n        </tr>\n    </table>\n\n    <div style=\"text-align:center;\">\n        <button onclick=\"calculateTotal()\">Calculate Total In-Stock Value</button>\n        <p id=\"result\"></p>\n    </div>\n\n    <script>\n        function calculateTotal() {\n            const table = document.getElementById('productTable');\n            let total = 0;\n\n            // Loop through the rows of the table, skipping the header row\n            for (let i = 1; i < table.rows.length; i++) {\n                const price = parseFloat(table.rows[i].cells[1].textContent);\n                const inStock = table.rows[i].cells[2].textContent.trim().toLowerCase();\n\n                // Check if the product is in stock\n                if (inStock === 'yes') {\n                    total += price;\n                }\n            }\n\n            // Display the total\n            document.getElementById('result').textContent = `Total Value of In-Stock Products: $${total}`;\n        }\n    </script>\n\n</body>\n</html>\n```\n\n### Explanation:\n- **HTML Table**: This sets up a basic table structure with product data.\n- **JavaScript Function**: The `calculateTotal` function iterates through the table rows, checks if the product is in stock, and sums the prices of in-stock products.\n- **Button and Result**: A button triggers the calculation, and the result is displayed in a paragraph element below the button.\n\nBy clicking the \"Calculate Total In-Stock Value\" button, the script calculates and displays the total value of products that are in stock. You can customize and expand this example with more complex logic or additional features as needed."
    }
]