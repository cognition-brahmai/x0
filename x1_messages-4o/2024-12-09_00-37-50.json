[
    {
        "role": "user",
        "content": "How can I write a regular expression in Python to extract a number from HTML? For example, I have an HTML sample as follows:\n```\nYour number is <b>123</b>\n```\nI would like to extract \"123\", which is the content of the first bold text after the string \"Your number is\"."
    },
    {
        "role": "assistant",
        "content": "To extract a number from HTML using a regular expression in Python, you can use the `re` module. Here's a step-by-step guide on how you can achieve this:\n\n1. Import the `re` module.\n2. Define the HTML string.\n3. Use a regular expression pattern to find the number inside the `<b>` HTML tags that appear after the phrase \"Your number is\".\n\nHere's a sample code snippet to accomplish this:\n\n```python\nimport re\n\n# Sample HTML content\nhtml_content = \"Your number is <b>123</b>\"\n\n# Regular expression pattern to extract the number inside <b> tags after \"Your number is\"\npattern = r\"Your number is <b>(\\d+)</b>\"\n\n# Search for the pattern in the HTML content\nmatch = re.search(pattern, html_content)\n\n# Check if a match was found\nif match:\n    # Extract and print the number\n    number = match.group(1)\n    print(\"Extracted number:\", number)\nelse:\n    print(\"No number found\")\n```\n\n### Explanation:\n\n- `r\"Your number is <b>(\\d+)</b>\"`: This is the regular expression pattern used.\n  - `Your number is <b>`: Matches the exact text \"Your number is <b>\".\n  - `(\\d+)`: Captures one or more digits. The parentheses `()` are used to capture the matched digits as a group.\n  - `</b>`: Matches the closing bold tag.\n\n- `re.search()`: This function searches the string for a match to the regular expression pattern.\n\n- `match.group(1)`: This retrieves the first capturing group, which is the number we want to extract.\n\nThis snippet will output:\n\n```\nExtracted number: 123\n```\n\nFeel free to adjust the pattern if your HTML structure changes."
    }
]