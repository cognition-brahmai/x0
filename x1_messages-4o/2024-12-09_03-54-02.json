[
    {
        "role": "user",
        "content": "Is Python's sorted() function guaranteed to be stable? The Python documentation doesn't specifically guarantee this. However, I noticed that the sort method on lists is guaranteed to be stable as per the Python documentation. They seem functionally similar so I'm assuming sorted() might also be stable, but I can't find a definitive source to confirm this. I need a stable sorting method because I need to sort by a primary key and then by a secondary key where the primary key is identical in both records."
    },
    {
        "role": "assistant",
        "content": "Yes, Python's `sorted()` function is guaranteed to be stable. Both the `sorted()` function and the `list.sort()` method use the same underlying algorithm, Timsort, which is designed to be stable. Therefore, if you sort by a primary key and then by a secondary key, the relative order of records with identical primary keys will be preserved based on the secondary key. This makes both `sorted()` and `list.sort()` suitable for scenarios where stable sorting is required.\n\nThough the Python documentation might emphasize the stability guarantee of `list.sort()` more explicitly, it applies equally to `sorted()`. So you can confidently use `sorted()` for stable sorting in your application."
    }
]