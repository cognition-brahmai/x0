[
    {
        "role": "user",
        "content": "Is there a way in Python to display a simple message box without relying on a large GUI library or any other library? I am looking for a solution that only needs to run on Windows and can be used to indicate the success or failure of my script that performs a single operation."
    },
    {
        "role": "assistant",
        "content": "Yes, you can display a simple message box in Python on Windows without relying on large GUI libraries by using the `ctypes` library, which is part of Python's standard library. The `ctypes` library allows you to call functions from DLLs or shared libraries. Here's how you can use it to create a message box:\n\n```python\nimport ctypes\n\ndef show_message_box(title, message, style):\n    ctypes.windll.user32.MessageBoxW(None, message, title, style)\n\n# Example usage:\n# Style options:\n# 0 : OK\n# 1 : OK | Cancel\n# 2 : Abort | Retry | Ignore\n# 3 : Yes | No | Cancel\n# 4 : Yes | No\n# 5 : Retry | No\n# 6 : Cancel | Try Again | Continue\n\nshow_message_box(\"Success\", \"The operation completed successfully.\", 0)\n```\n\nIn this example, `MessageBoxW` is a function from the Windows User32 library that creates a message box. The `style` parameter determines the type of buttons and icons displayed. For example, a style of `0` will display an \"OK\" button, while other styles can include combinations like \"OK | Cancel\", \"Yes | No\", etc.\n\nThis method allows you to display a message box without the need for any external libraries, making it lightweight and suitable for simple notifications on Windows systems."
    }
]