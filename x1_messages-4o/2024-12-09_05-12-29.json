[
    {
        "role": "user",
        "content": "How can I convert coordinates from UTM (Universal Transverse Mercator) form to LatLng (Latitude and Longitude) form in Python or JavaScript? I have a set of files containing UTM coordinates with easting, northing, and zone details. I intend to use this information with the Google Map API to display it on a map. Although I found some online calculators for this conversion, I couldn't find any code or libraries. I came across a projection library for JavaScript called Proj4js, but it doesn't seem to include UTM projection. My understanding of the GIS domain is still basic, so I'm looking for a solution that would be similar to `(lat, lng) = transform(easting, northing, zone)`."
    },
    {
        "role": "assistant",
        "content": "To convert UTM coordinates to latitude and longitude in Python and JavaScript, you can use specific libraries that handle geographic coordinate transformations. Here's how you can achieve this conversion in both languages:\n\n### Python\n\nIn Python, you can use the `pyproj` library, which offers seamless functionality to convert UTM to latitude and longitude.\n\n1. **Install `pyproj`:**\n\n   You can install it using pip:\n\n   ```bash\n   pip install pyproj\n   ```\n\n2. **Convert UTM to LatLng:**\n\n   Here's a sample code to convert UTM to latitude and longitude using `pyproj`:\n\n   ```python\n   from pyproj import Proj, transform\n\n   def utm_to_latlng(easting, northing, zone_number, zone_letter='N'):\n       utm_proj = Proj(proj='utm', zone=zone_number, ellps='WGS84', south=(zone_letter < 'N'))\n       latlng_proj = Proj(proj='latlong', datum='WGS84')\n       lng, lat = transform(utm_proj, latlng_proj, easting, northing)\n       return lat, lng\n\n   # Example usage\n   easting = 500000\n   northing = 4649776\n   zone_number = 33\n   zone_letter = 'N'\n\n   lat, lng = utm_to_latlng(easting, northing, zone_number, zone_letter)\n   print(f\"Latitude: {lat}, Longitude: {lng}\")\n   ```\n\n### JavaScript\n\nFor JavaScript, you can use the `proj4js` library, which supports UTM projections.\n\n1. **Include `proj4js`:**\n\n   You can include it via a CDN or install it using npm:\n\n   ```html\n   <script src=\"https://cdnjs.cloudflare.com/ajax/libs/proj4js/2.7.5/proj4.js\"></script>\n   ```\n\n   Or using npm:\n\n   ```bash\n   npm install proj4\n   ```\n\n2. **Convert UTM to LatLng:**\n\n   Here's how you can use `proj4js` to convert UTM coordinates:\n\n   ```javascript\n   // Define UTM and WGS84 projections\n   var utmZone33N = \"+proj=utm +zone=33 +datum=WGS84 +units=m +no_defs\";\n   var wgs84 = \"+proj=longlat +datum=WGS84 +no_defs\";\n\n   // Example UTM coordinates\n   var easting = 500000;\n   var northing = 4649776;\n\n   // Perform the transformation\n   var latLng = proj4(utmZone33N, wgs84, [easting, northing]);\n\n   // Output the result\n   console.log(\"Latitude:\", latLng[1], \"Longitude:\", latLng[0]);\n   ```\n\nThese examples will help you convert UTM coordinates to latitude and longitude using Python and JavaScript, allowing you to use these coordinates with the Google Maps API or any other mapping services. Make sure you have the correct UTM zone and hemisphere details for accurate conversion."
    }
]