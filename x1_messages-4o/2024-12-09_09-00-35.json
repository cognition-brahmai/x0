[
    {
        "role": "user",
        "content": "I want to write a Python program that efficiently calculates the greatest common divisor (GCD) of two numbers. Can anyone provide me with a code solution for this?"
    },
    {
        "role": "assistant",
        "content": "Certainly! To calculate the greatest common divisor (GCD) of two numbers efficiently, you can use the Euclidean algorithm. This algorithm is both simple and effective. Here's a Python program that implements it:\n\n```python\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\n# Example usage:\nnum1 = 56\nnum2 = 98\nresult = gcd(num1, num2)\nprint(f\"The GCD of {num1} and {num2} is {result}\")\n```\n\n### How it works:\n- The Euclidean algorithm is based on the principle that the GCD of two numbers also divides their difference.\n- We repeatedly replace the larger number by its remainder when divided by the smaller number, until one of the numbers becomes zero.\n- At this point, the other number is the GCD of the original pair.\n\nThis algorithm is efficient and works well even for large numbers. You can test this function with different pairs of numbers to see how it works."
    }
]