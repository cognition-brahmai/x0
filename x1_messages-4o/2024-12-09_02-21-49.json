[
    {
        "role": "user",
        "content": "In Python 2.7, how can I iterate over a collections.Counter instance in descending count order? I have tried the following way:\n\n```python\nimport collections\nc = collections.Counter()\nc['a'] = 1\nc['b'] = 999\nc\nCounter({'b': 999, 'a': 1})\nfor x in c:\n    print x\n```\nThis results in the elements being iterated in the order they were added to the Counter instance. I'd like to iterate over the list from highest to lowest count. Is there a recommended way to do this?"
    },
    {
        "role": "assistant",
        "content": "In Python 2.7, you can iterate over a `collections.Counter` instance in descending order of counts by using the `most_common()` method. This method returns a list of the elements and their counts, sorted from the most common to the least common. You can then iterate over this list to achieve the desired order. Here's how you can do it:\n\n```python\nimport collections\n\nc = collections.Counter()\nc['a'] = 1\nc['b'] = 999\n\n# Iterate over elements in descending count order\nfor element, count in c.most_common():\n    print(element, count)\n```\n\nThis will output:\n\n```\nb 999\na 1\n```\n\nThe `most_common()` method makes it easy to sort the elements by their frequency, allowing you to iterate over them in descending order."
    }
]