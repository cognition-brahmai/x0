[
    {
        "role": "user",
        "content": "How can I modify a global variable within a class in Python? I have the following code where I'm trying to modify a global variable 'g_c' within a class called 'TestClass'. However, I'm not able to modify it as expected. Here is my code:\n\n```python\ng_c = 0\n\nclass TestClass():\n    global g_c\n    def run(self):\n        for i in range(10):\n            g_c = 1\n            print(g_c)\n\nt = TestClass()\nt.run()\n\nprint(g_c)\n```\nHow can I modify the global variable 'g_c' within the 'run' method of 'TestClass'?"
    },
    {
        "role": "assistant",
        "content": "To modify a global variable within a class method in Python, you need to explicitly declare the variable as `global` within the method where you're modifying it. In your current code, the `global` keyword is incorrectly placed at the class level, which doesn't affect the scope within methods. You should declare `g_c` as `global` inside the `run` method instead. Here's how you can do it:\n\n```python\ng_c = 0\n\nclass TestClass():\n    def run(self):\n        global g_c  # Declare g_c as global inside the method\n        for i in range(10):\n            g_c = 1\n            print(g_c)\n\nt = TestClass()\nt.run()\n\nprint(g_c)  # This will print 1, since g_c has been modified globally\n```\n\nBy declaring `g_c` as `global` within the `run` method, you are telling Python to use the global variable `g_c` rather than creating a local variable with the same name. This allows you to modify the global variable as intended."
    }
]