[
    {
        "role": "user",
        "content": "What is an algorithm to calculate the sum of all numbers from 1 to n using recursion?"
    },
    {
        "role": "assistant",
        "content": "To calculate the sum of all numbers from 1 to \\( n \\) using recursion, you can define a recursive function that repeatedly adds the current number to the sum of all previous numbers until it reaches 1. Here is a simple algorithm in the form of a recursive function:\n\n```python\ndef sum_recursive(n):\n    # Base case: if n is 1, return 1\n    if n == 1:\n        return 1\n    # Recursive case: return n plus the sum of numbers from 1 to n-1\n    else:\n        return n + sum_recursive(n - 1)\n\n# Example usage:\nn = 5\nresult = sum_recursive(n)\nprint(f\"The sum of all numbers from 1 to {n} is: {result}\")\n```\n\nIn this algorithm:\n- The base case is when \\( n = 1 \\). At this point, the function returns 1 because the sum of numbers from 1 to 1 is simply 1.\n- The recursive case adds the current number \\( n \\) to the result of the recursive call with \\( n - 1 \\).\n- This continues until the base case is reached, at which point the recursion unwinds and the total sum is calculated."
    }
]