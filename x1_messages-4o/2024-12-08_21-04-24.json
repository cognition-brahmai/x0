[
    {
        "role": "user",
        "content": "What is the command to send an email with attachments using the Linux shell, while ensuring that the email is only sent if the file size is within a specific range? Additionally, can you explain how to include multiple attachments and how to encrypt the email for added security? Finally, please provide guidance on customizing the subject and message body of the email."
    },
    {
        "role": "assistant",
        "content": "To send an email with attachments from the Linux shell, ensuring that the email is only sent if the file size is within a specific range, you can use a combination of shell commands and utilities like `mail`, `mutt`, or `sendmail`. Here\u2019s a step-by-step guide using `mutt`, which is well-suited for handling attachments and offers encryption options:\n\n### Prerequisites\nEnsure that `mutt`, `openssl` (for encryption), and `gpg` (for encryption with GPG keys) are installed on your system. You can install them using your package manager.\n\n```bash\n# On Debian-based systems\nsudo apt-get install mutt openssl gnupg\n\n# On RedHat-based systems\nsudo yum install mutt openssl gnupg\n```\n\n### Step-by-Step Guide\n\n1. **Check File Size**: First, check if the file size is within your specified range.\n\n```bash\nFILE=\"yourfile.txt\"\nMIN_SIZE=1000  # Minimum file size in bytes\nMAX_SIZE=5000000  # Maximum file size in bytes\n\nFILE_SIZE=$(stat -c%s \"$FILE\")\n\nif [ \"$FILE_SIZE\" -ge \"$MIN_SIZE\" ] && [ \"$FILE_SIZE\" -le \"$MAX_SIZE\" ]; then\n    echo \"File size is within the acceptable range.\"\nelse\n    echo \"File size is out of the acceptable range.\"\n    exit 1\nfi\n```\n\n2. **Send Email with Attachments**: Use `mutt` to send an email with attachments.\n\n```bash\nTO=\"recipient@example.com\"\nSUBJECT=\"Your Subject Here\"\nBODY=\"This is the body of the email.\"\nATTACHMENTS=\"file1.txt file2.jpg file3.pdf\"\n\necho \"$BODY\" | mutt -s \"$SUBJECT\" -a $ATTACHMENTS -- $TO\n```\n\n3. **Encrypt the Email**: For encryption, you can use `gpg` to encrypt your message and attachments.\n\n- **Encrypt Attachments**:\n\n```bash\nfor file in $ATTACHMENTS; do\n    gpg --output \"${file}.gpg\" --encrypt --recipient recipient@example.com \"$file\"\ndone\n```\n\n- **Send Encrypted Email**:\n\n```bash\nENCRYPTED_ATTACHMENTS=\"file1.txt.gpg file2.jpg.gpg file3.pdf.gpg\"\n\necho \"$BODY\" | mutt -s \"$SUBJECT\" -a $ENCRYPTED_ATTACHMENTS -- $TO\n```\n\n### Additional Customizations\n\n- **Customizing the Subject**: You can adjust the `SUBJECT` variable to whatever you need.\n\n- **Customizing the Message Body**: The `BODY` variable can also be customized to include detailed messages. For multiline messages, create a text file with the content and use input redirection:\n\n```bash\nBODY_FILE=\"body.txt\"\necho \"This is the first line of your email body.\" > $BODY_FILE\necho \"This is the second line.\" >> $BODY_FILE\n\nmutt -s \"$SUBJECT\" -a $ATTACHMENTS -- $TO < $BODY_FILE\n```\n\n- **Using OpenSSL for Encryption**: If you prefer using OpenSSL for symmetric encryption:\n\n```bash\nPASSWORD=\"yourpassword\"\nopenssl aes-256-cbc -salt -in $FILE -out \"${FILE}.enc\" -k $PASSWORD\n```\n\nThen, send the encrypted file as an attachment.\n\nRemember to securely share the decryption method or password with the recipient.\n\nThis setup allows you to conditionally send emails with multiple encrypted attachments and customized content, all from the Linux command line."
    }
]