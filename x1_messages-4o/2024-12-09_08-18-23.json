[
    {
        "role": "user",
        "content": "How can I insert comments inside a Jinja2 argument list declaration? I am using Jinja2 as a macro preprocessor for assembler, and I need to comment out parts of the argument list. However, when I try to do this, I get the error \"jinja2.exceptions.TemplateSyntaxError: unexpected char u'#'\". Here is the code I am trying to implement comments in:\n\n```python\n{{ Switch('var',\n    [('1', 'foo'),    #  comment 1\n     ('2', 'bar'),    ## comment 2\n     ('3', 'rum'),    {# comment 3 #}\n     ]) }}\n\n\n{% macro Switch(var, caselist) %}\n    {% for case, action in caselist%}\n        CMP  {{var}} {{case}} \n        JNE  {{LABEL}}\n        {{action}}\n        JMP  {{LABELF}}\n{{LABEL}}:  NOP\n    {%- endfor %}\n{{LABELF}}: NOP\n{%- endmacro -%}\n```"
    },
    {
        "role": "assistant",
        "content": "In Jinja2, comments are typically added using `{# ... #}`, but they can't be inserted directly within an argument list in the way you're attempting. Jinja2 processes the template and does not allow for inline comments within expressions or argument lists like Python does.\n\nHowever, you can use a workaround to achieve the effect of commenting out parts of an argument list. One approach is to split your argument list into multiple lines and use Jinja2's comment block feature strategically.\n\nHere is an example of how you might restructure your code to include comments in a way that Jinja2 will accept:\n\n```python\n{% set cases = [\n    ('1', 'foo'),    # comment 1\n    ('2', 'bar'),    # comment 2\n    ('3', 'rum'),    # comment 3\n] %}\n\n{{ Switch('var', cases) }}\n\n{% macro Switch(var, caselist) %}\n    {% for case, action in caselist %}\n        CMP  {{ var }} {{ case }} \n        JNE  {{ LABEL }}\n        {{ action }}\n        JMP  {{ LABELF }}\n{{ LABEL }}:  NOP\n    {%- endfor %}\n{{ LABELF }}: NOP\n{%- endmacro -%}\n```\n\nIn this version, the comments are included in the Python-style list definition outside the Jinja2 expression. Since Jinja2 is processing the expression after the list is set, it doesn't interfere with the template syntax. This allows you to effectively \"comment\" parts of your configuration without running into syntax errors."
    }
]