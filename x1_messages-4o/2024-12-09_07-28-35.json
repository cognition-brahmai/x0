[
    {
        "role": "user",
        "content": "I am utilizing the 'Read the Docs' Sphinx theme for my project's documentation. The original theme, which can be found here: http://read-the-docs.readthedocs.org/en/latest/theme.html, is designed to be mobile-friendly with a certain layout width. However, for my particular project, I would like to modify the content width to be wider. As I do not have experience with HTML, could someone guide me through the process to increase the layout width?"
    },
    {
        "role": "assistant",
        "content": "To modify the layout width of the 'Read the Docs' Sphinx theme, you'll need to make some changes to the CSS files. Here's a step-by-step guide to help you adjust the content width:\n\n1. **Locate the Theme Files**:\n   - If you have installed the theme using a package manager like `pip`, you might find the theme files in the `site-packages` directory. Alternatively, if you have cloned or downloaded it, navigate to the theme's directory.\n\n2. **Create a Custom CSS File**:\n   - To avoid directly modifying the theme's default files (which might get overwritten on updates), create a custom CSS file. This will allow you to override the existing styles.\n\n3. **Edit the Custom CSS File**:\n   - Open your newly created CSS file in a text editor and add the following CSS rule to increase the width:\n\n     ```css\n     .wy-nav-content {\n         max-width: 90%; /* Adjust the percentage as needed */\n     }\n     ```\n\n   - You can adjust the `max-width` value to be a fixed width in pixels or a percentage that suits your needs.\n\n4. **Configure Sphinx to Use the Custom CSS**:\n   - In your Sphinx project directory, open the `conf.py` configuration file.\n   - Add or modify the `html_static_path` setting to include the directory where your custom CSS file is located, if it's not already included.\n\n     ```python\n     html_static_path = ['_static']\n     ```\n\n   - Add the path to your custom CSS file in the `html_css_files` setting:\n\n     ```python\n     html_css_files = [\n         'custom.css',  # Replace with the path to your custom CSS file\n     ]\n     ```\n\n5. **Rebuild Your Documentation**:\n   - Run the Sphinx build command to regenerate the HTML documentation:\n\n     ```bash\n     make html\n     ```\n\n   - This command should generate the updated documentation with the new width settings.\n\n6. **Verify the Changes**:\n   - Open the generated HTML files in your browser to see if the layout width has been adjusted to your preference.\n\nBy following these steps, you should be able to customize the content width of your documentation to better fit your project's needs.\n\nIf you encounter any issues or need further assistance, feel free to ask!"
    }
]