[
    {
        "role": "user",
        "content": "How can I create a CSV table using the given data in Ruby code? Please provide an example."
    },
    {
        "role": "assistant",
        "content": "To create a CSV table in Ruby, you can use Ruby's built-in CSV library. Here's a step-by-step guide along with an example to help you get started.\n\nFirst, make sure to require the CSV library at the beginning of your Ruby script:\n\n```ruby\nrequire 'csv'\n```\n\nLet's say you have the following data that you want to write to a CSV file:\n\n```ruby\ndata = [\n  [\"Name\", \"Age\", \"City\"],\n  [\"Alice\", 30, \"New York\"],\n  [\"Bob\", 25, \"Los Angeles\"],\n  [\"Charlie\", 35, \"Chicago\"]\n]\n```\n\nTo create a CSV file from this data, you can use the `CSV.open` method to write the data to a file:\n\n```ruby\nCSV.open(\"output.csv\", \"w\") do |csv|\n  data.each do |row|\n    csv << row\n  end\nend\n```\n\nHere's a breakdown of the code:\n\n- `CSV.open(\"output.csv\", \"w\")`: Opens a new CSV file named \"output.csv\" in write mode (\"w\").\n- `do |csv| ... end`: A block that allows you to write rows to the CSV file.\n- `data.each do |row|`: Iterates over each row of the data array.\n- `csv << row`: Writes each row to the CSV file.\n\nAfter running this code, you'll have an \"output.csv\" file in your working directory containing the following:\n\n```\nName,Age,City\nAlice,30,New York\nBob,25,Los Angeles\nCharlie,35,Chicago\n```\n\nThis is a simple example to get you started with creating CSV files in Ruby. You can expand on this by adding more functionality, such as handling different data types, formatting, or reading from existing CSV files."
    }
]