[
    {
        "role": "user",
        "content": "How can I determine if a numpy array contains integers? I am aware that simply checking the dtype is not sufficient since there are multiple integer dtypes (int8, int16, int32, int64 and so on)."
    },
    {
        "role": "assistant",
        "content": "To determine if a NumPy array contains integers, you can check the data type of the array against the integer data types provided by NumPy. Since NumPy provides multiple integer data types, you can use the `np.issubdtype()` function to check if the array's data type is a subtype of the integer data types. Here's how you can do it:\n\n```python\nimport numpy as np\n\ndef contains_integers(arr):\n    return np.issubdtype(arr.dtype, np.integer)\n\n# Example usage:\narray1 = np.array([1, 2, 3, 4])\narray2 = np.array([1.0, 2.0, 3.0, 4.0])\n\nprint(contains_integers(array1))  # Output: True\nprint(contains_integers(array2))  # Output: False\n```\n\nIn this example, `contains_integers()` checks if the data type of the array is a subtype of `np.integer`, which encompasses all NumPy integer types like `int8`, `int16`, `int32`, `int64`, etc. If the array's data type matches any of these, the function returns `True`; otherwise, it returns `False`."
    }
]