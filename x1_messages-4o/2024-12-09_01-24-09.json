[
    {
        "role": "user",
        "content": "How can I create a plot with multiple layers of x tick labels in Matplotlib? I am trying to replicate a plot similar to the attached Excel example. I am aware that I can create multi-line tick labels using \\n but I want to be able to shift the two levels independently."
    },
    {
        "role": "assistant",
        "content": "Creating a plot with multiple layers of x-tick labels in Matplotlib requires a bit of customization, as Matplotlib does not support multi-layer tick labels out of the box. However, you can achieve this effect by using a combination of `xticks`, `text`, and `annotate` functions to manually place the additional layer of labels. Here\u2019s a step-by-step guide on how to do it:\n\n1. **Basic Plot Setup**: Begin by setting up your plot as usual, plotting the data you need.\n\n2. **Primary X-Tick Labels**: Use the `xticks` function to place the primary layer of x-tick labels on the plot.\n\n3. **Secondary X-Tick Labels**: Use the `text` function to manually place the secondary layer of x-tick labels. You can control their position by adjusting the x and y coordinates.\n\nHere's an example code snippet to illustrate how you can achieve this:\n\n```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Sample data\nx = np.arange(1, 6)\ny = np.random.rand(5)\n\n# Plot the data\nplt.figure(figsize=(8, 4))\nplt.plot(x, y, marker='o')\n\n# Primary x-tick labels\nprimary_labels = ['A', 'B', 'C', 'D', 'E']\nplt.xticks(x, primary_labels)\n\n# Secondary x-tick labels\nsecondary_labels = ['One', 'Two', 'Three', 'Four', 'Five']\nfor i, label in enumerate(secondary_labels):\n    plt.text(x[i], -0.05, label, ha='center', va='top', transform=plt.gca().transData)\n\n# Adjust ylim to make space for secondary labels\nplt.ylim(-0.2, 1)\n\nplt.xlabel('X-axis')\nplt.ylabel('Y-axis')\nplt.title('Plot with Multi-layer X-Tick Labels')\n\nplt.show()\n```\n\n### Key Points:\n- **Primary Labels**: Set these using `plt.xticks()`.\n- **Secondary Labels**: Use `plt.text()` to place secondary labels. Adjust the y-coordinate to position them as needed. The `transform=plt.gca().transData` ensures that the text is placed in data coordinates.\n- **Adjusting Plot Limits**: Make sure to adjust the y-axis limits using `plt.ylim()` to ensure that there is enough space for the secondary labels.\n\nBy customizing the placement of text, you can independently shift the two levels of x-tick labels to match the desired layout, similar to what you might achieve with Excel."
    }
]