[
    {
        "role": "user",
        "content": "How can I extract the first day of the month from a datetime type column in a pandas dataframe?\n\nI have a dataframe structured like this:\n\n```python\nuser_id    purchase_date \n  1        2015-01-23 14:05:21\n  2        2015-02-05 05:07:30\n  3        2015-02-18 17:08:51\n  4        2015-03-21 17:07:30\n  5        2015-03-11 18:32:56\n  6        2015-03-03 11:02:30\n```\n\nThe 'purchase_date' column is a datetime64[ns] type. I want to add a new column, 'month', which contains the first day of the month of each purchase date, like so:\n\n```python\ndf['month']\n2015-01-01\n2015-02-01\n2015-02-01\n2015-03-01\n2015-03-01\n2015-03-01\n```\n\nThe equivalent operation in SQL would be `DATE_FORMAT(purchase_date, \"%Y-%m-01\")`. I tried using this line of code:\n\n```python\ndf['month']=df['purchase_date'].apply(lambda x : x.replace(day=1))\n```\n\nThis somewhat works, but it gives me the time as well, like `2015-01-01 14:05:21`."
    },
    {
        "role": "assistant",
        "content": "To extract the first day of the month from a datetime column in a pandas DataFrame and avoid retaining the time information, you can use the `pd.to_datetime` function with normalization. Here's how you can achieve this:\n\n```python\nimport pandas as pd\n\n# Sample DataFrame\ndata = {\n    'user_id': [1, 2, 3, 4, 5, 6],\n    'purchase_date': [\n        '2015-01-23 14:05:21',\n        '2015-02-05 05:07:30',\n        '2015-02-18 17:08:51',\n        '2015-03-21 17:07:30',\n        '2015-03-11 18:32:56',\n        '2015-03-03 11:02:30'\n    ]\n}\n\ndf = pd.DataFrame(data)\n\n# Ensure 'purchase_date' is in datetime format\ndf['purchase_date'] = pd.to_datetime(df['purchase_date'])\n\n# Extract the first day of the month\ndf['month'] = df['purchase_date'].dt.to_period('M').dt.to_timestamp()\n\n# Display the DataFrame\nprint(df)\n```\n\nIn this code:\n- `pd.to_datetime()` ensures that the 'purchase_date' column is in datetime format.\n- `df['purchase_date'].dt.to_period('M')` converts the dates to a period representing the month.\n- `.dt.to_timestamp()` converts the period back to a timestamp, defaulting to the first day of the month with the time set to 00:00:00.\n\nThis will give you the first day of each month without the time component."
    }
]