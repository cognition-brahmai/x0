[
    {
        "role": "user",
        "content": "How can I specify the required parameters to run OpenERP v7 unit test with a PyCharm test configuration? I am able to run unit tests of my OpenERP v7 add-on, but I want to use the Python tests -> Unittest configuration in PyCharm to display test output with red/green icons and PyCharm interface for test results. If I specify the file in the Unittest configuration, PyCharm finds all tests in the file but gives errors because the database and other parameters like the openerp-server script are not configured. I used PyCharm 4.0.6 Build #PY-139.1659 and also tried in PyCharm 5 without success."
    },
    {
        "role": "assistant",
        "content": "To run OpenERP v7 unit tests within PyCharm using the Unittest configuration, you'll need to set up the environment correctly to ensure that all necessary parameters (like the database and the OpenERP server script) are configured. Here's a step-by-step guide to help you achieve this:\n\n1. **Set up the Environment:**\n   - Make sure you have the required environment variables set up. You might need to specify `PYTHONPATH` to include the path to your OpenERP server and add-ons directories.\n\n2. **Create a Custom Test Script:**\n   - Create a custom Python script that will initialize the necessary OpenERP environment before running your tests. This script should set up the database connection and any other required configurations.\n\n3. **Configure PyCharm:**\n   - Go to `Run` > `Edit Configurations`.\n   - Click on the `+` icon and select `Python tests` > `Unittest`.\n   - In the `Script` field, specify your custom test script instead of the test file itself.\n   - Set the `Working directory` to the root directory of your OpenERP project.\n   - In the `Environment variables` section, make sure to include any necessary variables such as `OPENERP_SERVER`, `DATABASE`, and `CONFIG_FILE`.\n\n4. **Modify the Test Script:**\n   - Inside your custom test script, make sure to import and initialize OpenERP appropriately. You might use something like:\n     ```python\n     import openerp\n     from openerp.tests import common\n\n     # Initialize OpenERP environment\n     openerp.tools.config['db_name'] = 'your_database_name'\n     # Set other necessary configurations...\n     \n     # Run tests\n     common.single_test('your_module_name.tests.test_file_name')\n     ```\n\n5. **Run the Configuration:**\n   - Run the configuration you've set up in PyCharm. If everything is configured correctly, PyCharm should initialize the OpenERP environment and run the tests, displaying output with the red/green icons.\n\n6. **Troubleshooting:**\n   - If you encounter errors, check the console output in PyCharm for any missing configurations or incorrect paths. Ensure that all environment variables are correctly set.\n   - Look into any specific OpenERP logs for additional error information.\n\nBy setting up the environment and using a custom script to initialize OpenERP, you should be able to integrate the unit tests smoothly with PyCharm's testing framework."
    }
]