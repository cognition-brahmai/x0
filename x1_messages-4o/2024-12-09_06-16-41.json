[
    {
        "role": "user",
        "content": "How can I print a Python file's docstring when executing it? I have a Python script with a docstring and I wish to print the docstring whenever the command-line arguments fail to parse. Can this be done? For instance, in the example given below, I want the docstring to be printed where it says \"<here comes the docstring>\":\n\n```python\n#!/usr/bin/env python\n\"\"\"\nUsage: script.py\n\nThis describes the script.\n\"\"\"\n\nimport sys\n\nif len(sys.argv) < 2:\n    print(\"<here comes the docstring>\")\n```"
    },
    {
        "role": "assistant",
        "content": "Certainly! To print the docstring of a Python script when the command-line arguments fail to parse, you can use the `__doc__` attribute, which contains the module's docstring. You can modify your script as follows:\n\n```python\n#!/usr/bin/env python\n\"\"\"\nUsage: script.py\n\nThis describes the script.\n\"\"\"\n\nimport sys\n\nif len(sys.argv) < 2:\n    print(__doc__)\n```\n\nIn this example, `__doc__` refers to the module-level docstring, which is what you defined at the top of your script. When the script is executed with fewer than the required command-line arguments, it will print the docstring."
    }
]