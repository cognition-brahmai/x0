[
    {
        "role": "user",
        "content": "I am trying to create a Vue.js application where I need to implement a search functionality for a list of items. The list of items will be passed as a prop. Can someone help me with the code for this?"
    },
    {
        "role": "assistant",
        "content": "Certainly! Implementing a search functionality in a Vue.js application is a common task. Below is a basic example of how you can achieve this. We'll create a simple Vue component that takes a list of items as a prop and implements a search feature.\n\n### Step 1: Create the Vue Component\n\n```html\n<template>\n  <div>\n    <input type=\"text\" v-model=\"searchQuery\" placeholder=\"Search items...\" />\n    <ul>\n      <li v-for=\"item in filteredItems\" :key=\"item.id\">{{ item.name }}</li>\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ItemList',\n  props: {\n    items: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      searchQuery: ''\n    };\n  },\n  computed: {\n    filteredItems() {\n      return this.items.filter(item => {\n        return item.name.toLowerCase().includes(this.searchQuery.toLowerCase());\n      });\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Add any styles you need here */\n</style>\n```\n\n### Step 2: Use the Component in Your Application\n\nYou can use this component in your main application file or another component and pass the list of items as a prop.\n\n```html\n<template>\n  <div id=\"app\">\n    <ItemList :items=\"items\" />\n  </div>\n</template>\n\n<script>\nimport ItemList from './components/ItemList.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    ItemList\n  },\n  data() {\n    return {\n      items: [\n        { id: 1, name: 'Apple' },\n        { id: 2, name: 'Banana' },\n        { id: 3, name: 'Orange' },\n        { id: 4, name: 'Grapes' },\n        { id: 5, name: 'Pineapple' }\n      ]\n    };\n  }\n};\n</script>\n\n<style>\n/* Add any global styles here */\n</style>\n```\n\n### Explanation\n\n1. **Template**: The template includes an input field bound to `searchQuery` using `v-model`. The list of items is displayed using a `v-for` directive that iterates over `filteredItems`, a computed property.\n\n2. **Props**: The `items` prop is defined to receive an array of items from the parent component.\n\n3. **Data**: The `searchQuery` data property holds the current value of the search input.\n\n4. **Computed Property**: `filteredItems` computes a new array of items based on the search query. It filters the items array by checking if each item's name includes the search term, ignoring case sensitivity.\n\n5. **Usage**: In the main application file, the `ItemList` component is used, and an array of items is passed as a prop.\n\nThis example should help you get started with implementing search functionality in your Vue.js application. Feel free to customize and expand upon this code to suit your needs!"
    }
]