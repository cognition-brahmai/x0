[
    {
        "role": "user",
        "content": "How can I normalize a URL in Python? Specifically, I am looking for a solution that can handle extra spaces or any other non-normalized characters in a URL. As an example, I have a URL string like \"http://www.example.com/foo goo/bar.html\". What library in Python can I use to transform this into a proper URL?"
    },
    {
        "role": "assistant",
        "content": "To normalize a URL in Python, you can use the `urllib.parse` module, which is part of Python's standard library. This module provides utilities to manipulate URLs, including handling spaces and other non-normalized characters.\n\nHere is how you can normalize a URL like \"http://www.example.com/foo goo/bar.html\":\n\n```python\nimport urllib.parse\n\ndef normalize_url(url):\n    # Parse the URL into components\n    parsed_url = urllib.parse.urlparse(url)\n    \n    # Normalize the path by encoding special characters\n    normalized_path = urllib.parse.quote(parsed_url.path)\n    \n    # Reconstruct the URL with the normalized path\n    normalized_url = urllib.parse.urlunparse((\n        parsed_url.scheme,\n        parsed_url.netloc,\n        normalized_path,\n        parsed_url.params,\n        parsed_url.query,\n        parsed_url.fragment\n    ))\n    \n    return normalized_url\n\n# Example usage\nurl = \"http://www.example.com/foo goo/bar.html\"\nnormalized_url = normalize_url(url)\nprint(normalized_url)\n```\n\nThis script will transform the URL to \"http://www.example.com/foo%20goo/bar.html\", replacing the space with `%20`, which is the percent-encoded format for a space character.\n\nThe `urllib.parse.quote` function is used to encode the path of the URL to ensure that any special characters are correctly represented in their percent-encoded form. This is useful for making sure the URL is properly formatted and compliant with standard URL conventions."
    }
]