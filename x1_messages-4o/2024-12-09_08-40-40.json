[
    {
        "role": "user",
        "content": "How can I convert a string into its corresponding ASCII values in Python? For instance, I would like the string \"hi\" to return [104, 105]. I understand that I can use the ord() function on individual characters like ord('h') and ord('i'), but this seems inefficient when dealing with longer strings. Is there a more efficient way to do this?"
    },
    {
        "role": "assistant",
        "content": "Certainly! You can convert a string into its corresponding ASCII values efficiently using a list comprehension in Python. This approach applies the `ord()` function to each character in the string and compiles the results into a list. Here's how you can do it:\n\n```python\ndef string_to_ascii(s):\n    return [ord(char) for char in s]\n\n# Example usage\nstring = \"hi\"\nascii_values = string_to_ascii(string)\nprint(ascii_values)  # Output: [104, 105]\n```\n\nThis method is both concise and efficient, as it processes each character in the string in a single line of code. The list comprehension iterates over each character in the string `s`, applies the `ord()` function to convert it to its ASCII value, and collects all the results in a list."
    }
]