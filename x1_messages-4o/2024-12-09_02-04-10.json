[
    {
        "role": "user",
        "content": "I am developing a REST backend with the Django REST Framework. I'm having difficulty adding an APIView instance to the web browsable API. The documentation and previous answers suggest that all I should do is add a docstring, but this approach isn't working for me. I believe the browsable API only displays Viewset endpoints that are registered with the router. How can I register APIView classes to the router? My current router code is:\n\n```\nrouter = DefaultRouter(trailing_slash=False)\nrouter.register(r'tokens', TokenViewSet, base_name='token')    \nurlpatterns = patterns('',\n    url(r'^admin/', include(admin.site.urls)),\n    url(r'^api/', include(router.urls)),\n    url(r'^api/register$', RegisterUser.as_view(), name='register_user'),\n    url(r'^api/auth$', ObtainAuthToken.as_view(), name='obtain_token'),\n    url(r'^api/me$', ObtainProfile.as_view(), name='obtain_profile'),\n    url(r'^api/recover$', FindUsername.as_view(), name='recover_username'),\n)\n```\nCurrently, only the Token endpoint appears. How can I resolve this?"
    },
    {
        "role": "assistant",
        "content": "To display API endpoints defined by `APIView` in the Django REST Framework's browsable API, you need to ensure that they are properly included in the URL patterns. While `ViewSet` classes can be easily registered with a router, `APIView` classes need to be manually added to the `urlpatterns`. It seems you have already included your `APIView` classes in the `urlpatterns`, but they are not appearing in the browsable API.\n\nHere are a few steps you can take to troubleshoot and resolve this issue:\n\n1. **Add Docstrings**: Make sure each of your `APIView` classes has a docstring. This helps the Django REST Framework generate documentation for each endpoint.\n\n2. **Check URL Namespacing**: Ensure that your URLs are not being affected by any namespacing issues. The URLs you've defined look correct, but double-check that the paths are pointing to the correct views.\n\n3. **Update Django Settings**: Make sure your Django settings are configured to use the browsable API. Check your `settings.py` and ensure that:\n   - `REST_FRAMEWORK` includes `'DEFAULT_RENDERER_CLASSES': ('rest_framework.renderers.BrowsableAPIRenderer', 'rest_framework.renderers.JSONRenderer')`.\n   - `INSTALLED_APPS` includes `'rest_framework'`.\n\n4. **Check APIView Imports**: Ensure that your `APIView` classes are correctly imported and that there are no typos in the class names.\n\n5. **Test Endpoints Directly**: Try accessing the endpoints directly via their URLs in a web browser or using a tool like Postman to ensure they are functioning correctly, even if they\u2019re not showing in the browsable API.\n\n6. **Update URL Patterns**: Make sure your URL patterns are using the correct regex format. You can switch from `patterns()` to a simple list as `patterns()` is deprecated in Django 1.10 and above. Update your `urlpatterns` like this:\n\n   ```python\n   from django.urls import path, include\n   from rest_framework.routers import DefaultRouter\n\n   router = DefaultRouter(trailing_slash=False)\n   router.register(r'tokens', TokenViewSet, basename='token')    \n\n   urlpatterns = [\n       path('admin/', admin.site.urls),\n       path('api/', include(router.urls)),\n       path('api/register', RegisterUser.as_view(), name='register_user'),\n       path('api/auth', ObtainAuthToken.as_view(), name='obtain_token'),\n       path('api/me', ObtainProfile.as_view(), name='obtain_profile'),\n       path('api/recover', FindUsername.as_view(), name='recover_username'),\n   ]\n   ```\n\n7. **Clear Cache**: If you have any caching mechanism, ensure that you clear the cache as it might be showing an outdated version of the API.\n\nBy following these steps, your `APIView` endpoints should appear in the browsable API. If the problem persists, consider checking the Django REST Framework's GitHub issues or community forums for similar issues and solutions."
    }
]