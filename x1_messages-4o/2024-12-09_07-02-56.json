[
    {
        "role": "user",
        "content": "What are the equivalent functions in Python's pandas library for R's `str()`, `summary()`, and `head()` functions?"
    },
    {
        "role": "assistant",
        "content": "In Python's pandas library, you can find equivalent functions to R's `str()`, `summary()`, and `head()` functions. Here's how you can achieve similar functionality in pandas:\n\n1. **Equivalent to R's `str()`**:\n   - To get a concise summary of a DataFrame, including the index dtype and columns, non-null values, and memory usage, you can use the `info()` method.\n\n   ```python\n   df.info()\n   ```\n\n2. **Equivalent to R's `summary()`**:\n   - To get a statistical summary of the DataFrame, you can use the `describe()` method. This will provide statistics like count, mean, std, min, 25%, 50%, 75%, and max for numerical columns.\n\n   ```python\n   df.describe()\n   ```\n\n   - For a summary of all columns, including non-numeric ones, you can add the `include='all'` parameter:\n\n   ```python\n   df.describe(include='all')\n   ```\n\n3. **Equivalent to R's `head()`**:\n   - To view the first few rows of a DataFrame, you can use the `head()` method. By default, it shows the first 5 rows, but you can specify the number of rows you want to see.\n\n   ```python\n   df.head()\n   ```\n\nThese pandas functions should help you explore and understand your data in a manner similar to R's functions."
    }
]