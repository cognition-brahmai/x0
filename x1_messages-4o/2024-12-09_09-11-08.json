[
    {
        "role": "user",
        "content": "Can you provide a function that takes an array of strings and returns an array of arrays, where each inner array contains the lengths of each word in the original string?"
    },
    {
        "role": "assistant",
        "content": "Certainly! Here's a Python function that takes an array of strings and returns an array of arrays, where each inner array contains the lengths of each word in the original string:\n\n```python\ndef word_lengths(arr):\n    result = []\n    for string in arr:\n        # Split the string into words\n        words = string.split()\n        # Get the length of each word and store it in a list\n        lengths = [len(word) for word in words]\n        # Append the list of lengths to the result\n        result.append(lengths)\n    return result\n\n# Example usage:\nstrings = [\"hello world\", \"this is a test\", \"SensAi by BRAHMAI\"]\nlengths = word_lengths(strings)\nprint(lengths)  # Output: [[5, 5], [4, 2, 1, 4], [6, 2, 7]]\n```\n\nThis function splits each string into words using the `split()` method, calculates the length of each word, and then appends the lengths to a result list."
    }
]