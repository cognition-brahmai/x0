[
    {
        "role": "user",
        "content": "Can someone explain how \"cat << EOF\" works in bash? I was writing a script to enter multi-line input to a program, in this case, psql. After some research, I found that the following syntax works:\n\n```\ncat << EOF | psql ---params\nBEGIN;\n\n`pg_dump ----something`\n\nupdate table .... statement ...;\n\nEND;\nEOF\n```\n\nThis syntax correctly constructs the multi-line string (from BEGIN; to END;, inclusive) and pipes it as an input to psql. I understand that \">\" outputs to a file, \">>\" appends to a file, \"<\" reads input from a file. But I am not clear on what \"<<\" exactly does. Is there a manual page for it?"
    },
    {
        "role": "assistant",
        "content": "The `cat << EOF` syntax in bash is known as a \"here document\" (or heredoc). It's a way to provide multi-line input directly within a script or command line without needing to use a separate file.\n\nHere's how it works:\n\n1. **`<<` Operator**:\n   - The `<<` operator is used to redirect the input to a command from a block of text within the script itself.\n   - This block of text is terminated by a delimiter, which in your example is `EOF`. You can choose any string to be your delimiter, but `EOF` is commonly used for its readability.\n\n2. **Delimiter**:\n   - The delimiter marks the beginning and end of the heredoc. Any text between `<< EOF` and the next occurrence of `EOF` is treated as input.\n   - The delimiter must be alone on a line, and no extra spaces or tabs should be before or after it.\n\n3. **Usage with Commands**:\n   - In your example, the heredoc is used to construct a multi-line input that is piped into `psql`. The text between `BEGIN;` and `END;` is sent as input to the `psql` command.\n\n4. **Manual Page**:\n   - While there isn't a separate manual page specifically for heredocs, you can find information about them in the bash manual. You can access this using the command `man bash` and searching for \"Here Documents\" or \"Here-documents\" using `/Here Documents`.\n\nHere's a breakdown of your example:\n\n```bash\ncat << EOF | psql ---params\nBEGIN;\n\n`pg_dump ----something`\n\nupdate table .... statement ...;\n\nEND;\nEOF\n```\n\n- `cat` reads the input from the heredoc.\n- The text from `BEGIN;` to `END;` is redirected as input to `psql`.\n- The backticks around `pg_dump ----something` execute that command and insert its output into the heredoc.\n\nHeredocs are especially useful for scripting complex command sequences directly in the shell without needing to create temporary files."
    }
]