[
    {
        "role": "user",
        "content": "How can I add a border around an image using OpenCV in Python such that the overall height and width of the final image increases, but the height and width of the original image remains the same in the middle?"
    },
    {
        "role": "assistant",
        "content": "To add a border around an image using OpenCV in Python, you can use the `cv2.copyMakeBorder` function. This function allows you to add borders of specified width and color around an image without altering the original image. Below is a step-by-step guide on how to do this:\n\n1. First, ensure you have OpenCV installed. If not, you can install it using pip:\n   ```bash\n   pip install opencv-python\n   ```\n\n2. Load the image using OpenCV.\n\n3. Use the `cv2.copyMakeBorder` function to add the border.\n\nHere's a simple code example demonstrating how to add a border to an image:\n\n```python\nimport cv2\n\n# Load the image\nimage = cv2.imread('path_to_your_image.jpg')\n\n# Define the size of the border\ntop_border = 50   # pixels\nbottom_border = 50\nleft_border = 50\nright_border = 50\n\n# Define the border color (B, G, R) format\nborder_color = (0, 0, 0)  # Black border\n\n# Add the border to the image\nbordered_image = cv2.copyMakeBorder(\n    image,\n    top_border,\n    bottom_border,\n    left_border,\n    right_border,\n    cv2.BORDER_CONSTANT,\n    value=border_color\n)\n\n# Display the original and bordered images\ncv2.imshow('Original Image', image)\ncv2.imshow('Bordered Image', bordered_image)\n\n# Wait for a key press and close the windows\ncv2.waitKey(0)\ncv2.destroyAllWindows()\n```\n\n### Explanation:\n- **`cv2.imread('path_to_your_image.jpg')`**: Reads the image from the specified path.\n- **`cv2.copyMakeBorder`**: Adds a border to the image.\n  - The first parameter is the input image.\n  - The next four parameters specify the number of pixels to add to the top, bottom, left, and right of the image, respectively.\n  - `cv2.BORDER_CONSTANT` specifies that the border should be a constant color.\n  - `value=border_color` specifies the color of the border as a tuple in (B, G, R) format.\n- **`cv2.imshow`**: Displays the images in separate windows.\n- **`cv2.waitKey(0)`**: Waits for a key press to close the image window.\n- **`cv2.destroyAllWindows()`**: Closes all OpenCV windows.\n\nYou can adjust the size of the borders and the color as per your requirements."
    }
]