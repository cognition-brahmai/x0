[
    {
        "role": "user",
        "content": "How can I import a function from another IPython notebook in the same folder and the same IPython instance? For instance, I have a function called `func_a()` in the notebook `common_func.ipnb`, and I want to access this function in a new notebook. How can I achieve this?"
    },
    {
        "role": "assistant",
        "content": "To import a function from another IPython notebook located in the same folder, you can use a tool called `import_ipynb`. This allows you to import functions and classes from other Jupyter notebooks as if they were regular Python modules. Here\u2019s how you can do it:\n\n1. **Install `import_ipynb`:**\n\n   First, ensure you have the `import_ipynb` package installed. You can install it via pip if necessary:\n\n   ```python\n   !pip install import-ipynb\n   ```\n\n2. **Use `import_ipynb` to Import the Notebook:**\n\n   In your new notebook, you can import the function from `common_func.ipynb` like this:\n\n   ```python\n   import import_ipynb\n   import common_func\n\n   # Now you can use func_a from common_func\n   result = common_func.func_a()\n   ```\n\n3. **Ensure the Notebooks Are in the Same Directory:**\n\n   Make sure that both the notebook containing the function (`common_func.ipynb`) and the notebook from which you're trying to import are in the same directory.\n\n4. **Accessing the Function:**\n\n   After importing the notebook as a module, you can access its functions and classes using the dot notation.\n\nThis method is quite straightforward and allows you to leverage code from other notebooks efficiently. Keep in mind that any changes in the imported notebook will require you to re-run the import cell to update the imported content."
    }
]