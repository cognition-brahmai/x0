[
    {
        "role": "user",
        "content": "How can I write a C program to find the digital root of a given number?"
    },
    {
        "role": "assistant",
        "content": "To write a C program to find the digital root of a given number, you need to understand the concept of digital root. The digital root of a number is the single digit obtained by repeatedly summing the digits of the number until a single digit is obtained. \n\nHere is a simple C program to calculate the digital root:\n\n```c\n#include <stdio.h>\n\n// Function to calculate the digital root\nint digitalRoot(int num) {\n    if (num == 0)\n        return 0;\n    else if (num % 9 == 0)\n        return 9;\n    else\n        return num % 9;\n}\n\nint main() {\n    int number;\n    \n    // Ask the user for input\n    printf(\"Enter a number: \");\n    scanf(\"%d\", &number);\n    \n    // Calculate and print the digital root\n    int result = digitalRoot(number);\n    printf(\"The digital root of %d is %d.\\n\", number, result);\n    \n    return 0;\n}\n```\n\n### Explanation:\n- **Digital Root Calculation**: The digital root can be calculated using the properties of modulo arithmetic and is based on the congruence relation of the number with 9:\n  - If a number is 0, its digital root is 0.\n  - If a number is divisible by 9, its digital root is 9.\n  - Otherwise, the digital root is the remainder of the number divided by 9.\n  \n- **Function `digitalRoot(num)`**: This function uses the above properties to determine the digital root of the given number efficiently.\n\n- **Main Function**: It prompts the user to enter a number, reads the input, and then calls the `digitalRoot` function to compute and display the result.\n\nThis program is efficient and works for any non-negative integer input."
    }
]