[
    {
        "role": "user",
        "content": "How can I start the index at 1 instead of 0 when writing a Pandas DataFrame to a CSV file? Currently, when I run the following code:\n\n```python\nimport pandas as pd\n\nresult = pd.DataFrame({'Count': [83, 19, 20]})\nresult.to_csv('result.csv', index_label='Event_id')  \n```\n\nI get the output:\n\n```python\nEvent_id,Count\n0,83\n1,19\n2,20\n```\n\nHowever, I want my output to look like this:\n\n```python\nEvent_id,Count\n1,83\n2,19\n3,20\n```\n\nI know I can add a sequence of integers shifted by 1 as a column to my data frame, but being new to Pandas, I am looking for a cleaner way to do this."
    },
    {
        "role": "assistant",
        "content": "To start the index at 1 instead of 0 when writing your DataFrame to a CSV file, you can modify the index of the DataFrame before exporting it. This can be done by setting the index to a range starting at 1. Here's how you can do it:\n\n```python\nimport pandas as pd\n\n# Create your DataFrame\nresult = pd.DataFrame({'Count': [83, 19, 20]})\n\n# Set the index to start from 1\nresult.index = range(1, len(result) + 1)\n\n# Write the DataFrame to a CSV file with the desired index\nresult.to_csv('result.csv', index_label='Event_id')\n```\n\nWith this modification, the output in your `result.csv` file will be:\n\n```plaintext\nEvent_id,Count\n1,83\n2,19\n3,20\n```\n\nThis approach updates the DataFrame's index to start from 1, which directly reflects in the CSV output. It's a clean and efficient way to achieve the desired format without adding an extra column."
    }
]