[
    {
        "role": "user",
        "content": "I'm currently using a `requirements.txt` file with Travis-CI. I find it redundant to duplicate the requirements in both `requirements.txt` and `setup.py`. I was wondering if it's possible to pass a file handle to the `install_requires` kwarg in `setuptools.setup`. Is there a way to accomplish this? For reference, here is my `requirements.txt` file:\n\n```\nguessit>=0.5.2\ntvdb_api>=1.8.2\nhachoir-metadata>=1.3.3\nhachoir-core>=1.3.3\nhachoir-parser>=1.3.4\n```"
    },
    {
        "role": "assistant",
        "content": "Yes, you can avoid duplicating the requirements in both `requirements.txt` and `setup.py` by reading the `requirements.txt` file and passing its contents to the `install_requires` argument in `setup.py`. Here's how you can do it:\n\n1. Read the `requirements.txt` file within your `setup.py` script.\n2. Pass the contents of the file to the `install_requires` parameter.\n\nHere's an example of how you can implement this:\n\n```python\nfrom setuptools import setup, find_packages\n\n# A utility function to read the `requirements.txt` file\ndef parse_requirements(filename):\n    \"\"\"Load requirements from a pip requirements file.\"\"\"\n    with open(filename, 'r') as file:\n        return [line.strip() for line in file if line.strip() and not line.startswith('#')]\n\n# Load the requirements\nrequirements = parse_requirements('requirements.txt')\n\nsetup(\n    name='your_package_name',\n    version='0.1',\n    packages=find_packages(),\n    install_requires=requirements,\n    # other arguments like author, description, etc.\n)\n```\n\nThis script reads the `requirements.txt` file, strips any empty lines or comments, and uses the list of requirements as the value for `install_requires`. This way, you only need to maintain the requirements in one place."
    }
]