[
    {
        "role": "user",
        "content": "How can I find the number of words in the vocabulary of a trained word2vec model using the Python gensim library?"
    },
    {
        "role": "assistant",
        "content": "To find the number of words in the vocabulary of a trained Word2Vec model using the Python `gensim` library, you can use the `vocab` attribute of the model's `wv` (word vectors) property. Here's a step-by-step guide:\n\n1. Make sure you have the `gensim` library installed. If not, you can install it using pip:\n\n   ```bash\n   pip install gensim\n   ```\n\n2. Load your Word2Vec model. This can be done either by training a new model or loading a pre-trained one.\n\n3. Access the `wv` property, which holds the word vectors, and then use the `key_to_index` attribute to find the vocabulary size.\n\nHere's an example of how you can do this:\n\n```python\nfrom gensim.models import Word2Vec\n\n# Load your trained Word2Vec model\n# For example, if you have a saved model:\n# model = Word2Vec.load(\"your_model_path\")\n\n# Or train a new model\n# sentences = [[\"example\", \"sentence\"], [\"another\", \"example\"]]\n# model = Word2Vec(sentences, vector_size=100, window=5, min_count=1, workers=4)\n\n# Get the vocabulary size\nvocab_size = len(model.wv.key_to_index)\n\nprint(f\"The number of words in the vocabulary is: {vocab_size}\")\n```\n\nThis will give you the number of unique words that the model has been trained on and has word vectors for. The `key_to_index` attribute is a dictionary where the keys are the words in the model's vocabulary, so taking the length of this dictionary gives you the vocabulary size."
    }
]