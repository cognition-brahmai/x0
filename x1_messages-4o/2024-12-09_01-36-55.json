[
    {
        "role": "user",
        "content": "Is there a library in Python that supports the dumping of long strings as block literals or folded blocks in YAML? I am trying to dump a dictionary that contains long strings and I want to have them in the block style for readability. For instance, I want to achieve the following format:\n\n```yaml\nfoo: |\n  this is a\n  block literal\nbar: >\n  this is a\n  folded block\n```\n\nI know that PyYAML supports the loading of documents in this style but I can't find a way to dump documents in this same style. Is there something I am missing?"
    },
    {
        "role": "assistant",
        "content": "Yes, PyYAML can indeed be used to dump long strings as block literals or folded blocks, but it requires a bit of customization. By default, PyYAML doesn't automatically switch to block literal or folded style for dumping strings. However, you can achieve this by using the `representer` feature in PyYAML to customize how strings are represented.\n\nHere's how you can do it:\n\n1. **Block Literal Style (`|`)**: This is typically used for preserving line breaks.\n2. **Folded Block Style (`>`)**: This is used where line breaks are replaced by spaces.\n\nBelow is an example of how you can customize PyYAML to output strings using these styles:\n\n```python\nimport yaml\nfrom yaml.representer import SafeRepresenter\n\nclass LiteralString(str):\n    pass\n\nclass FoldedString(str):\n    pass\n\ndef literal_representer(dumper, data):\n    return dumper.represent_scalar('tag:yaml.org,2002:str', data, style='|')\n\ndef folded_representer(dumper, data):\n    return dumper.represent_scalar('tag:yaml.org,2002:str', data, style='>')\n\nyaml.add_representer(LiteralString, literal_representer)\nyaml.add_representer(FoldedString, folded_representer)\n\ndata = {\n    'foo': LiteralString(\"this is a\\nblock literal\"),\n    'bar': FoldedString(\"this is a\\nfolded block\")\n}\n\nyaml_str = yaml.dump(data, default_flow_style=False)\nprint(yaml_str)\n```\n\n### Explanation:\n- **`LiteralString` and `FoldedString`**: These are subclasses of `str` used to distinguish between strings that should be represented as block literals or folded blocks.\n- **`literal_representer` and `folded_representer`**: These functions handle the representation of `LiteralString` and `FoldedString` objects in the desired YAML style.\n\nBy using these steps, you can control how strings are dumped into YAML, achieving the readability you desire with block literals and folded blocks."
    }
]