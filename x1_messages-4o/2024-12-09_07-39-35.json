[
    {
        "role": "user",
        "content": "I am currently implementing a client that uses an extensive SOAP management API and I'm considering using either pysimplesoap or SUDS. However, I've encountered some issues with both. Pysimplesoap had problems parsing the WSDL due to excessive recursions, while SUDS, despite working fine, was slow. Additionally, SUDS seems to have a high memory consumption, slow WSDL parsing speed and missing support for some WSDL attributes (e.g., choice attribute). I've also noticed that there hasn't been a release of SUDS since 0.4 on 2010-09-15, leading me to believe it's no longer maintained. So, my questions are: \n\n1. Is it advisable to base a larger project on SUDS as a SOAP client, given these issues?\n2. Is there a SUDS fork that has already implemented some of the patches available in the ticketing system?\n3. What other alternatives exist that are easy to use, have a lower memory footprint, and can handle complex, large WSDL files?\n\nUpdate November 2013: Two years have passed, and it seems that the original SUDS project is indeed dead with no further releases since 2010. However, I've found Jurko's actively maintained fork of SUDS which supports Python 3 and addresses many of SUDS' known problems. The package is available on PyPI and can be installed using pip. Would this be a good alternative?"
    },
    {
        "role": "assistant",
        "content": "Based on your situation, let's address your questions and considerations:\n\n1. **Using SUDS for Larger Projects**: Given the issues you've encountered with SUDS, such as high memory consumption, slow parsing, and lack of updates, it may not be ideal to base a larger project on the original SUDS library. The lack of maintenance could lead to unresolved bugs and compatibility issues with newer Python versions.\n\n2. **SUDS Forks**: You mentioned Jurko's fork of SUDS, which is indeed a popular alternative. This fork has been actively maintained and addresses many of the issues found in the original SUDS, including support for Python 3 and various bug fixes. It would be a more reliable choice if you prefer to stick with a SUDS-based solution.\n\n3. **Alternative Libraries**:\n   - **Zeep**: This is a modern SOAP client for Python that is actively maintained. It has better support for complex WSDLs and a lower memory footprint. Zeep also offers asynchronous capabilities and good performance.\n   - **Spyne**: While primarily a framework for building web services, Spyne can also work as a client. It supports complex SOAP structures and is well-maintained.\n   - **Requests-Soap**: This is a lightweight SOAP client built on top of the popular `requests` library. It might not have all the features of SUDS or Zeep but can be suitable for simpler use cases.\n\nGiven your update regarding Jurko's fork, it seems like a viable option if it meets your project requirements. However, considering the modern alternatives like Zeep, which are actively maintained and offer robust features for handling complex WSDLs, you might find them more efficient and future-proof for your project."
    }
]