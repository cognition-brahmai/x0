[
    {
        "role": "user",
        "content": "How can I draw vertical lines at specific time indices on a given signal plot in Python? Given a plot of a signal with a time index ranging from 0 to 2.6 seconds, I want to draw vertical red lines at time indices provided in the list [0.22058956, 0.33088437, 2.20589566]. How can this be achieved?"
    },
    {
        "role": "assistant",
        "content": "To draw vertical lines at specific time indices on a signal plot in Python, you can use the `matplotlib` library. Here's a step-by-step guide on how to achieve this:\n\n1. First, ensure you have `matplotlib` installed. If not, you can install it using pip:\n\n   ```bash\n   pip install matplotlib\n   ```\n\n2. Next, you can use the following code to plot your signal and add vertical lines at the specified time indices:\n\n   ```python\n   import matplotlib.pyplot as plt\n   import numpy as np\n\n   # Example signal generation (replace this with your actual signal data)\n   time = np.linspace(0, 2.6, 1000)\n   signal = np.sin(2 * np.pi * time)  # Example sine wave signal\n\n   # List of time indices where vertical lines will be drawn\n   vertical_lines = [0.22058956, 0.33088437, 2.20589566]\n\n   # Plot the signal\n   plt.figure(figsize=(10, 4))\n   plt.plot(time, signal, label='Signal')\n\n   # Draw vertical lines at specified time indices\n   for vline in vertical_lines:\n       plt.axvline(x=vline, color='red', linestyle='--', label=f'Line at {vline:.2f}s')\n\n   # Add labels and legend\n   plt.xlabel('Time (s)')\n   plt.ylabel('Amplitude')\n   plt.title('Signal with Vertical Lines')\n   plt.legend(loc='upper right')\n\n   # Show the plot\n   plt.show()\n   ```\n\nIn the above code:\n- We create a time array and a sample signal using `numpy`. You should replace this with your actual signal data.\n- We use `plt.plot()` to plot the signal.\n- We iterate through the `vertical_lines` list and use `plt.axvline()` to draw vertical dashed red lines at each specified time index.\n- Finally, we add labels, a title, a legend, and display the plot using `plt.show()`.\n\nAdjust the signal generation part as per your actual data for accurate plotting."
    }
]