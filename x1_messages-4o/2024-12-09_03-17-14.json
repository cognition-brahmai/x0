[
    {
        "role": "user",
        "content": "I am currently learning Python and working on an exercise where I need to check each word in a text file and add it to a list only if it's not already present in the list. My current code is reading the file, splitting lines into words, and appending words to the list without checking for uniqueness. This is causing duplicates in my list when I print it. How can I modify my code to add only unique values to my list in Python?\n\nHere's my current code:\n\n```python\nfhand = open('romeo.txt')\noutput = []\n\nfor line in fhand:\n    words = line.split()\n    for word in words:\n        if word is not output:\n            output.append(word)\n\nprint sorted(output)\n```\n\nAnd here's the output it produces:\n\n```python\n['Arise', 'But', 'It', 'Juliet', 'Who', 'already', 'and', 'and', 'and',\n 'breaks', 'east', 'envious', 'fair', 'grief', 'is', 'is', 'is',\n 'kill', 'light', 'moon', 'pale', 'sick', 'soft', 'sun', 'sun',\n 'the', 'the', 'the', 'through', 'what', 'window', 'with', 'yonder']\n```\n\nAs you can see, words like \"and\", \"is\", \"sun\" etc are duplicated. How can I modify the code to ensure that only unique words are added to the list?"
    },
    {
        "role": "assistant",
        "content": "To ensure that only unique words are added to your list, you should check if the word is already present in the list before appending it. In your current code, the condition `if word is not output:` is incorrect for this purpose. Instead, you should use the `in` keyword to check for membership in the list.\n\nHere's the corrected version of your code:\n\n```python\nfhand = open('romeo.txt')\noutput = []\n\nfor line in fhand:\n    words = line.split()\n    for word in words:\n        if word not in output:\n            output.append(word)\n\noutput.sort()  # Sort the list of unique words\nprint(output)\n```\n\n### Key Changes:\n1. **Membership Check**: Use `if word not in output:` to check if the word is not already in the list before appending it.\n2. **Sorting**: Use `output.sort()` to sort the list after collecting all unique words.\n\nThis should produce a list with only unique words from the file, sorted alphabetically."
    }
]