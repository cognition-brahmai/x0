[
    {
        "role": "user",
        "content": "How can I create a global role or roles in Sphinx? I am looking to avoid repeating the role directive in every ReST file that uses the custom role. Is there a central place where I can define this once for the whole site?"
    },
    {
        "role": "assistant",
        "content": "To create a global role in Sphinx that can be used across your entire documentation without needing to define it in every reStructuredText (ReST) file, you can follow these steps:\n\n1. **Create a Sphinx Extension**: The best way to define global roles is by creating a custom Sphinx extension. This allows you to encapsulate your role logic in one place and load it as part of the Sphinx build process.\n\n2. **Define the Role in the Extension**:\n   - Create a Python file for your extension, for example, `my_roles.py`.\n   - Within this file, define your custom role. Here's a basic example of how you might set up a custom role:\n\n     ```python\n     from docutils import nodes\n     from docutils.parsers.rst import roles\n\n     def my_custom_role(name, rawtext, text, lineno, inliner, options={}, content=[]):\n         # Process the role text and create nodes\n         node = nodes.strong(text, text)  # Example: make text bold\n         return [node], []\n\n     def setup(app):\n         roles.register_local_role('myrole', my_custom_role)\n     ```\n\n   - The `my_custom_role` function processes the role text and returns a list of nodes. You can customize this function to fit your needs.\n\n3. **Register the Extension in conf.py**:\n   - Within your `conf.py` file, register the extension by adding the path to your custom module in the `extensions` list:\n\n     ```python\n     extensions = [\n         # ... other extensions\n         'path.to.my_roles',\n     ]\n     ```\n\n4. **Use Your Role in ReST Files**:\n   - Once registered, you can use your custom role in any of your documentation files like this:\n\n     ```rst\n     This is a :myrole:`custom role text` example.\n     ```\n\nBy following these steps, your custom role will be available throughout your entire Sphinx documentation project. This approach not only centralizes the role definition but also makes it easier to maintain and update in the future."
    }
]