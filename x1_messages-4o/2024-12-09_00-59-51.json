[
    {
        "role": "user",
        "content": "How can I disable the default formatting for FloatFields in a Django template? I need the numbers to be dot separated like this: 42547.34. However, I am ending up with comma separated values. Here is an example of a template where the problem occurs:\n\n```\n{% for point in zone.points.all  %}\n  {% if forloop.last %}\n    new google.maps.LatLng({{point.latitude|floatformat}},{{point.longitude|floatformat}})\n  {% else %} \n    new google.maps.LatLng({{point.latitude|floatformat}},{{point.longitude|floatformat}}),\n  {% endif %}\n{% endfor %}];\n```\n\nI don't have this problem when using the admin generated forms where the floats appear correctly. My locale is set to en_US."
    },
    {
        "role": "assistant",
        "content": "The issue you're experiencing is likely due to Django's localization feature, which formats numbers according to the current locale settings. By default, Django will use the locale settings to determine how numbers should be formatted, which can cause the comma-separated numbers you're seeing.\n\nTo disable localization for a specific template or part of a template, you can use the `localize` template tag to control this behavior. Here's how you can modify your template to ensure that the numbers are formatted with a dot as the decimal separator, regardless of the locale:\n\n```django\n{% load l10n %}\n\n{% for point in zone.points.all  %}\n  {% if forloop.last %}\n    {% localize off %}\n    new google.maps.LatLng({{ point.latitude|stringformat:\"f\" }},{{ point.longitude|stringformat:\"f\" }})\n    {% endlocalize %}\n  {% else %} \n    {% localize off %}\n    new google.maps.LatLng({{ point.latitude|stringformat:\"f\" }},{{ point.longitude|stringformat:\"f\" }}),\n    {% endlocalize %}\n  {% endif %}\n{% endfor %}];\n```\n\nHere's what this does:\n\n- `{% load l10n %}`: This loads the localization template tags.\n- `{% localize off %}` and `{% endlocalize %}`: These tags are used to disable localization for the enclosed block of template code.\n- `{{ point.latitude|stringformat:\"f\" }}`: This uses the `stringformat` filter to ensure that the number is formatted as a float without localization, keeping the dot as the decimal separator.\n\nThis should give you the desired dot-separated float numbers in your JavaScript output."
    }
]