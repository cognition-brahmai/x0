[
    {
        "role": "user",
        "content": "Is there a concise and elegant way in Pandas DataFrames to select columns by data type (dtype)? Specifically, I want to select only int64 columns from a DataFrame. I'm imagining something along the lines of `df.select_columns(dtype=float64)`."
    },
    {
        "role": "assistant",
        "content": "Yes, you can select columns by their data type in a Pandas DataFrame using the `select_dtypes` method. To select only columns with the `int64` data type, you can do the following:\n\n```python\nimport pandas as pd\n\n# Sample DataFrame\ndf = pd.DataFrame({\n    'A': [1, 2, 3],\n    'B': [1.5, 2.5, 3.5],\n    'C': ['x', 'y', 'z'],\n    'D': [4, 5, 6]\n})\n\n# Select only int64 columns\nint64_columns = df.select_dtypes(include='int64')\n\nprint(int64_columns)\n```\n\nIn this example, `select_dtypes(include='int64')` returns a DataFrame with only the columns of data type `int64`. You can specify other data types in the `include` parameter if needed, and you can use `exclude` to exclude specific types."
    }
]