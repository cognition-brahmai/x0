[
    {
        "role": "user",
        "content": "How can I create a Trading Calendar using Pandas in Python? I'm currently able to create a calendar instance based on the USFederalHolidayCalendar but it's not consistent with the Trading Calendar as it includes Columbus Day and Veteran's Day, which are not in the Trading Calendar. However, the Trading Calendar includes Good Friday which is not included in the USFederalHolidayCalendar. I am getting an error when I try to list the holidays in a date range. How can I solve this?\n\nHere is the code I am using:\n\n```python\nfrom pandas.tseries.holiday import get_calendar, HolidayCalendarFactory, GoodFriday\nfrom datetime import datetime\n\ncal = get_calendar('USFederalHolidayCalendar')  # Create calendar instance\ncal.rules.pop(7)                                # Remove Veteran's Day rule\ncal.rules.pop(6)                                # Remove Columbus Day rule\ntradingCal = HolidayCalendarFactory('TradingCalendar', cal, GoodFriday)\n```\n\nAnd the error message I receive is:\n\n```python\nIn[11]: tradingCal.holidays(datetime(2014, 12, 31), datetime(2016, 12, 31))\nTraceback (most recent call last):\n  File \"C:\\Python27\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 3035, in run_code\n    exec(code_obj, self.user_global_ns, self.user_ns)\n  File \"<ipython-input-12-2708cd2db7a0>\", line 1, in <module>\n    tradingCal.holidays(datetime(2014, 12, 31), datetime(2016, 12, 31))\nTypeError: unbound method holidays() must be called with TradingCalendar instance as first argument (got datetime instance instead)\n```\n\nAny ideas on how to solve this issue?"
    },
    {
        "role": "assistant",
        "content": "The error you are encountering is because `HolidayCalendarFactory` is used to create a new calendar class, not an instance of a calendar. To fix this, you need to create an instance of the calendar class that `HolidayCalendarFactory` generates. Here's how you can modify your code to achieve this:\n\n```python\nfrom pandas.tseries.holiday import get_calendar, HolidayCalendarFactory, GoodFriday\nfrom pandas.tseries.holiday import AbstractHolidayCalendar\nfrom datetime import datetime\n\n# Create a custom trading calendar class\nclass TradingCalendar(AbstractHolidayCalendar):\n    rules = get_calendar('USFederalHolidayCalendar').rules\n    rules.pop(7)  # Remove Veteran's Day rule\n    rules.pop(6)  # Remove Columbus Day rule\n    rules.append(GoodFriday)  # Add Good Friday\n\n# Create an instance of the trading calendar\ntrading_cal = TradingCalendar()\n\n# Get the holidays within the specified date range\nholidays = trading_cal.holidays(datetime(2014, 12, 31), datetime(2016, 12, 31))\n\nprint(holidays)\n```\n\nHere's a breakdown of the changes:\n\n1. **Custom Calendar Class**: Instead of using `HolidayCalendarFactory`, which creates a class, we directly create a subclass of `AbstractHolidayCalendar` named `TradingCalendar` and modify its `rules` attribute.\n\n2. **Modify Rules**: We manipulate the `rules` to remove Veteran's Day and Columbus Day and add Good Friday.\n\n3. **Calendar Instance**: We then create an instance of `TradingCalendar` and call the `holidays` method on this instance to get the holidays in the desired date range.\n\nThis should solve the issue and return the correct list of holidays for the trading calendar."
    }
]