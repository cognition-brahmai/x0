[
    {
        "role": "user",
        "content": "How can I print a Python dictionary as a horizontal table with headers? I have a dictionary that looks like this:\n\n```python\nimport math\nimport random\n\nd = {1: [\"Spices\", math.floor(random.gauss(40, 5))],\n    2: [\"Other stuff\", math.floor(random.gauss(20, 5))],\n    3: [\"Tea\", math.floor(random.gauss(50, 5))],\n    10: [\"Contraband\", math.floor(random.gauss(1000, 5))],\n    5: [\"Fruit\", math.floor(random.gauss(10, 5))],\n    6: [\"Textiles\", math.floor(random.gauss(40, 5))]\n}\n```\n\nI want to print it out so it lines up nicely with headers. Is there a way I could add the headers to the dictionary and always be sure they come out on top? I've seen a few ways to do it vertically but I am specifically looking for horizontal alignment with max column widths close to the max str() or int(). By this I mean, I want it to look something like:\n\n```\nKey    Label        Number\n1      Spices       42\n2      Other Stuff  16\n...\n```\n\nNote, the underscores in the example are just placeholders; I don't want to include them in the actual output."
    },
    {
        "role": "assistant",
        "content": "To print a Python dictionary as a horizontal table with headers, you can use the `tabulate` library, which makes it easy to produce well-formatted tables. Here's a step-by-step guide to achieve the desired output:\n\n1. **Install the `tabulate` library**: First, ensure that you have the `tabulate` library installed. You can install it via pip if necessary:\n\n   ```bash\n   pip install tabulate\n   ```\n\n2. **Format and print the dictionary**: You can convert the dictionary into a list of lists and then use `tabulate` to format it as a table. Here\u2019s how you can do it:\n\n   ```python\n   import math\n   import random\n   from tabulate import tabulate\n\n   # Your dictionary\n   d = {\n       1: [\"Spices\", math.floor(random.gauss(40, 5))],\n       2: [\"Other stuff\", math.floor(random.gauss(20, 5))],\n       3: [\"Tea\", math.floor(random.gauss(50, 5))],\n       10: [\"Contraband\", math.floor(random.gauss(1000, 5))],\n       5: [\"Fruit\", math.floor(random.gauss(10, 5))],\n       6: [\"Textiles\", math.floor(random.gauss(40, 5))]\n   }\n\n   # Prepare data\n   table_data = [[key] + value for key, value in d.items()]\n\n   # Headers\n   headers = [\"Key\", \"Label\", \"Number\"]\n\n   # Print table\n   print(tabulate(table_data, headers=headers, tablefmt=\"plain\", colalign=(\"right\", \"left\", \"right\")))\n   ```\n\n3. **Explanation**:\n\n   - **Dictionary to List Conversion**: The dictionary `d` is converted to a list of lists `table_data` using a list comprehension. Each entry of the dictionary is transformed into a list where the key and values are combined into a single list.\n   \n   - **Headers**: A list `headers` is defined to specify the column headers.\n\n   - **Tabulate**: The `tabulate` function is used to format and print the table. The `tablefmt=\"plain\"` option ensures that no additional formatting characters are added, and the `colalign` parameter is used to align the columns (right for numbers and left for labels).\n\nThis approach will output the data in a neatly formatted table with headers, as you specified, and it will automatically adjust column widths based on the content."
    }
]