[
    {
        "role": "user",
        "content": "Write a SQL query to return the latest order placed by each customer who has made at least three orders in the past month, and also include the total amount spent by each customer on their orders. Additionally, the query should exclude any orders with a status of \"cancelled\" or \"returned\". Finally, the results should be sorted in descending order by the total amount spent by each customer."
    },
    {
        "role": "assistant",
        "content": "To accomplish this task, you would typically need to work with a database that has at least two tables: one for orders and another for customers. Let's assume your database has these tables structured as follows:\n\n- `Customers` table with columns: `CustomerID`, `CustomerName`, etc.\n- `Orders` table with columns: `OrderID`, `CustomerID`, `OrderDate`, `OrderAmount`, `OrderStatus`, etc.\n\nHere is a SQL query that addresses your requirements:\n\n```sql\nWITH RecentOrders AS (\n    SELECT \n        O.CustomerID, \n        O.OrderID, \n        O.OrderDate, \n        O.OrderAmount,\n        ROW_NUMBER() OVER (PARTITION BY O.CustomerID ORDER BY O.OrderDate DESC) AS rn\n    FROM \n        Orders O\n    WHERE \n        O.OrderStatus NOT IN ('cancelled', 'returned')\n        AND O.OrderDate >= DATEADD(MONTH, -1, GETDATE())\n),\nOrderSummary AS (\n    SELECT\n        CustomerID,\n        COUNT(OrderID) AS TotalOrders,\n        SUM(OrderAmount) AS TotalSpent\n    FROM\n        RecentOrders\n    GROUP BY\n        CustomerID\n    HAVING\n        COUNT(OrderID) >= 3\n)\nSELECT \n    C.CustomerID,\n    C.CustomerName,\n    R.OrderID AS LatestOrderID,\n    R.OrderDate AS LatestOrderDate,\n    OS.TotalSpent\nFROM \n    Customers C\nJOIN \n    OrderSummary OS ON C.CustomerID = OS.CustomerID\nJOIN \n    RecentOrders R ON C.CustomerID = R.CustomerID AND R.rn = 1\nORDER BY \n    OS.TotalSpent DESC;\n```\n\n### Explanation:\n\n1. **RecentOrders CTE**: This common table expression (CTE) filters out orders that are either \"cancelled\" or \"returned\" and have been placed in the last month. It also assigns a row number to each order of a customer based on the order date in descending order.\n\n2. **OrderSummary CTE**: This CTE aggregates data to find customers who have placed at least three valid orders in the past month and calculates the total amount they spent.\n\n3. **Main Query**: The main query joins the `Customers` table with the `OrderSummary` and `RecentOrders` CTEs to retrieve the latest order details for each qualifying customer and the total amount they spent. The results are sorted in descending order of the total amount spent by each customer."
    }
]