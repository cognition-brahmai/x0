[
    {
        "role": "user",
        "content": "How can I create line-wrapped text that fills the width of the window using Tkinter in Python? I've tried to use the `Label` widget but it doesn't support line-wrapping. The `Message` widget supports line-wrapping but it forces the text to be roughly square. Here's the code I used:\n```python\nfrom Tkinter import *\n\nroot = Tk()\nroot.title(\"hello\")\n\nMessage(root, text=48*'xxxxx ').grid(row=0, column=0, columnspan=3)\n\nLabel(root, text='Name:').grid(row=1, column=0)\nEntry(root, width=50).grid(row=1, column=1)\nButton(root, text=\"?\").grid(row=1, column=2)\n\nButton(root, text=\"Left\").grid(row=2, column=0)\nButton(root, text=\"Center\").grid(row=2, column=1)\nButton(root, text=\"Right\").grid(row=2, column=2)\n\nroot.mainloop()\n```\nI know that I can use `aspect=700` to change the shape, but I want to avoid hard-coding numbers like that. How can I solve this issue?"
    },
    {
        "role": "assistant",
        "content": "To create line-wrapped text that fills the width of the window using Tkinter, you can use the `Text` widget instead of the `Label` or `Message` widget. The `Text` widget provides more flexibility, allowing you to control line-wrapping, and doesn't force the content into a square shape. \n\nHere's how you can modify your code to use the `Text` widget:\n\n```python\nfrom tkinter import *\n\ndef update_text_width(event):\n    # Adjust the Text widget width to match the window width\n    text_widget.config(width=event.width)\n\nroot = Tk()\nroot.title(\"hello\")\n\n# Create a Text widget with wrap set to 'word'\ntext_widget = Text(root, wrap='word', height=5)\ntext_widget.insert('1.0', 48 * 'xxxxx ')\ntext_widget.grid(row=0, column=0, columnspan=3, sticky=\"ew\")\n\n# Bind the window resize event to adjust the text widget width\ntext_widget.bind(\"<Configure>\", update_text_width)\n\nLabel(root, text='Name:').grid(row=1, column=0)\nEntry(root, width=50).grid(row=1, column=1)\nButton(root, text=\"?\").grid(row=1, column=2)\n\nButton(root, text=\"Left\").grid(row=2, column=0)\nButton(root, text=\"Center\").grid(row=2, column=1)\nButton(root, text=\"Right\").grid(row=2, column=2)\n\n# Allow the first row to expand with the window\nroot.grid_rowconfigure(0, weight=1)\nroot.grid_columnconfigure(0, weight=1)\n\nroot.mainloop()\n```\n\n### Key Elements:\n1. **Text Widget**: The `Text` widget is used with `wrap='word'` to ensure that words are wrapped nicely without being cut off.\n2. **Dynamic Width Adjustment**: We bind the `<Configure>` event to dynamically adjust the width of the `Text` widget whenever the window is resized.\n3. **Grid Configuration**: The `grid_rowconfigure` and `grid_columnconfigure` methods are used to allow the grid cell containing the `Text` widget to expand with the window size.\n\nThis setup will ensure that your text is wrapped within the available window width, providing a flexible and responsive design."
    }
]