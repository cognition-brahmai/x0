[
    {
        "role": "user",
        "content": "Data format:\nYou must have [ Python code ] function in the following Rewrite prompt\nRewrite prompt:\nYou have been given a binary search tree and a value. You need to insert the given value at the appropriate position in the binary search tree. \nImplement a Python function to insert the given value at the appropriate position in the binary search tree using a TreeNode class. \nHere is the given binary search tree and value:\nBinary Search Tree = 5 -> 3 -> 7 -> 1 -> 4 -> 6 -> 8\nValue = 2\nPlease write the function to insert the given value at the appropriate position in the binary search tree."
    },
    {
        "role": "assistant",
        "content": "To insert a given value into a binary search tree, you need to traverse the tree and find the correct position for the new value. Here's a Python function using a `TreeNode` class to perform this task:\n\n```python\n# Definition for a binary tree node.\nclass TreeNode:\n    def __init__(self, val=0, left=None, right=None):\n        self.val = val\n        self.left = left\n        self.right = right\n\ndef insertIntoBST(root: TreeNode, val: int) -> TreeNode:\n    if root is None:\n        return TreeNode(val)\n    \n    if val < root.val:\n        if root.left is None:\n            root.left = TreeNode(val)\n        else:\n            insertIntoBST(root.left, val)\n    else:\n        if root.right is None:\n            root.right = TreeNode(val)\n        else:\n            insertIntoBST(root.right, val)\n            \n    return root\n\n# Example usage:\n# Constructing the initial BST\nroot = TreeNode(5)\nroot.left = TreeNode(3)\nroot.right = TreeNode(7)\nroot.left.left = TreeNode(1)\nroot.left.right = TreeNode(4)\nroot.right.left = TreeNode(6)\nroot.right.right = TreeNode(8)\n\n# Insert the new value\nnew_value = 2\nroot = insertIntoBST(root, new_value)\n```\n\nThis function `insertIntoBST` starts at the root and recursively finds the correct position to insert the new value, maintaining the properties of the binary search tree."
    }
]