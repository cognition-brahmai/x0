[
    {
        "role": "user",
        "content": "How can I add a colorbar to a non-mappable object in matplotlib? I have a series of lines each representing the change of a variable with unique colors. I want to add a colorbar next to the plot. Currently, I am using a solution which involves size parameters that I do not want to control. My current solution is as follows:\n\n```python\nimport numpy             as np\nimport matplotlib        as mpl\nimport matplotlib.pyplot as plt\n\nx    = np.linspace(0, 5, 100)\nN    = 20\ncmap = plt.get_cmap('jet',N)\n\nfig  = plt.figure(figsize=(8,6))\nax1  = fig.add_axes([0.10,0.10,0.70,0.85])\n\nfor i,n in enumerate(np.linspace(0,2,N)):\n    y = np.sin(x)*x**n\n    ax1.plot(x,y,c=cmap(i))\n\nplt.xlabel('x')\nplt.ylabel('y')\n\nax2  = fig.add_axes([0.85,0.10,0.05,0.85])\nnorm = mpl.colors.Normalize(vmin=0,vmax=2)\ncb1  = mpl.colorbar.ColorbarBase(ax2,cmap=cmap,norm=norm,orientation='vertical')\n\nplt.show()\n```\n\nI would prefer to use a solution similar to the one for a mappable object, something like:\n\n```python\nfig,ax = plt.subplots()\ncax    = ax.imshow(..)\ncbar   = fig.colorbar(cax,aspect=10)\nplt.show()\n```\n\nHow can I achieve this?"
    },
    {
        "role": "assistant",
        "content": "To add a colorbar to a non-mappable object in Matplotlib, you can create a ScalarMappable object that connects your colormap and normalization to a colorbar. You can then use this mappable object to add a colorbar to your plot. Here's how you can achieve this:\n\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib as mpl\n\n# Generate data\nx = np.linspace(0, 5, 100)\nN = 20\ncmap = plt.get_cmap('jet', N)\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8, 6))\n\n# Plot lines with different colors\nfor i, n in enumerate(np.linspace(0, 2, N)):\n    y = np.sin(x) * x ** n\n    ax.plot(x, y, c=cmap(i))\n\n# Set labels\nax.set_xlabel('x')\nax.set_ylabel('y')\n\n# Create a ScalarMappable object to use for the colorbar\nnorm = mpl.colors.Normalize(vmin=0, vmax=2)\nsm = mpl.cm.ScalarMappable(cmap=cmap, norm=norm)\nsm.set_array([])  # You can pass an empty array here\n\n# Add the colorbar to the figure\ncbar = fig.colorbar(sm, ax=ax, aspect=10)\n\nplt.show()\n```\n\nIn this solution, the `ScalarMappable` object `sm` is used to connect your colormap and normalization with the colorbar. The `set_array([])` method is called on `sm` to allow the creation of the colorbar without needing an actual mappable array. Then, you can add the colorbar to your plot using `fig.colorbar(sm, ax=ax, aspect=10)`. This approach gives you more control over the appearance and positioning of the colorbar, similar to when you're dealing with mappable objects like images."
    }
]