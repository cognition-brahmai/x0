[
    {
        "role": "user",
        "content": "How can I read a large zipped text file line by line in Python without loading the entire file into memory? I have a compressed file that is around 200MB, but when uncompressed it is approximately 3GB. I am currently using the zipfile module, but it's causing memory overuse. In C#, I was able to achieve this using the SharpZipLib, but I can't seem to find a way to do it in Python. Here's the code I have tried so far:\n\n```python\nimport zipfile\nf = open(...)\nz = zipfile.ZipFile(f)\nfor line in zipfile.open(...).readlines():\n  print line\n```\n\nAnd in C#:\n\n```csharp\nvar fStream = File.OpenRead(\"...\");\nvar unzipper = new ICSharpCode.SharpZipLib.Zip.ZipFile(fStream);\nvar dataStream =  unzipper.GetInputStream(0);\n```\n\nIn the C# version, the 'dataStream' is uncompressed. Any help on how to achieve this in Python would be appreciated."
    },
    {
        "role": "assistant",
        "content": "To read a large zipped text file line by line in Python without loading the entire file into memory, you can use the `zipfile` module along with the `io` module to handle the file streams efficiently. The key is to use `io.TextIOWrapper` to wrap the file object, allowing you to read it line by line. Here's how you can do it:\n\n```python\nimport zipfile\nimport io\n\n# Open the zip file\nwith zipfile.ZipFile('yourfile.zip', 'r') as z:\n    # Iterate over all the files in the zip archive\n    for file_info in z.infolist():\n        # Open each file in the archive\n        with z.open(file_info) as file:\n            # Use TextIOWrapper to read the file line by line\n            with io.TextIOWrapper(file, encoding='utf-8') as text_file:\n                for line in text_file:\n                    print(line.strip())  # Process the line as needed\n```\n\n### Explanation:\n\n1. **`zipfile.ZipFile`**: This is used to open the zip file.\n\n2. **`z.infolist()`**: This method retrieves a list of all the files contained in the zip archive.\n\n3. **`z.open(file_info)`**: This opens the individual file within the zip archive as a file-like object in binary mode.\n\n4. **`io.TextIOWrapper`**: This is used to wrap the binary file-like object so that it can be read as a text file. You can specify the encoding as needed (e.g., `utf-8`).\n\n5. **Iterating Line by Line**: With the `TextIOWrapper`, you can iterate over the file line by line without loading the entire file into memory.\n\nThis approach should help you handle large text files within a zip archive efficiently, similar to how you achieved it in C#."
    }
]