[
    {
        "role": "user",
        "content": "Can you provide a MATLAB code that can convert a given decimal number to any given base between 2 and 36?\nHere is an example of the input and output of the code:\nInput:\nnum = 110;\nbase = 16;\nOutput:\n'6E'"
    },
    {
        "role": "assistant",
        "content": "Certainly! You can use the following MATLAB function to convert a given decimal number to any base between 2 and 36:\n\n```matlab\nfunction result = decimalToBase(num, base)\n    % Check if the base is within the valid range\n    if base < 2 || base > 36\n        error('Base must be between 2 and 36.');\n    end\n    \n    % Characters for bases up to 36\n    chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    \n    % Handle the case where num is zero\n    if num == 0\n        result = '0';\n        return;\n    end\n    \n    % Initialize result as an empty string\n    result = '';\n    \n    % Handle negative numbers\n    isNegative = num < 0;\n    if isNegative\n        num = -num;\n    end\n    \n    % Convert the number to the specified base\n    while num > 0\n        remainder = mod(num, base);\n        result = [chars(remainder + 1), result];\n        num = floor(num / base);\n    end\n    \n    % Add negative sign if the original number was negative\n    if isNegative\n        result = ['-', result];\n    end\nend\n```\n\nYou can use this function by calling it with the desired number and base. For example:\n\n```matlab\nnum = 110;\nbase = 16;\noutput = decimalToBase(num, base);\ndisp(output);  % This should display '6E'\n```\n\nThis function works by repeatedly dividing the number by the base and collecting the remainders, which correspond to the digits in the new base. The characters for the digits in bases greater than 10 are taken from the string `chars`, which includes both numbers and uppercase letters."
    }
]