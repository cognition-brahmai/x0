[
    {
        "role": "user",
        "content": "How can I format a DataFrame column as a date while simultaneously formatting other columns in pandas? I am trying to print the data using custom formatting for \"total_bill\", \"tip\" and \"date\" columns in my DataFrame. My current code looks like this:\n\n```python\nimport pandas as pd\n\nurl = \"https://raw.github.com/pandas-dev/pandas/master/pandas/tests/data/tips.csv\"\ndf = pd.read_csv(url)\ndf[\"date\"] = list(range(42005, 42005+len(df)))\n\nprint(\n  df\n  .head(10)\n  .to_string(\n    formatters={\"total_bill\": \"${:,.2f}\".format, \n                \"tip\": \"${:,.2f}\".format\n    }\n  )\n)\n```\nI've searched for solutions on how to format the date in this step but I couldn't find any that fits my needs. Is there a simple way to achieve this?"
    },
    {
        "role": "assistant",
        "content": "Certainly! You can achieve the desired formatting by adding a custom formatter for the \"date\" column in your `formatters` dictionary. To format the \"date\" column as a date, you'll first need to convert it to a recognizable date format using `pd.to_datetime` and then format it as a string using a lambda function. Here's how you can modify your code:\n\n```python\nimport pandas as pd\n\nurl = \"https://raw.github.com/pandas-dev/pandas/master/pandas/tests/data/tips.csv\"\ndf = pd.read_csv(url)\ndf[\"date\"] = pd.to_datetime(list(range(42005, 42005+len(df))), origin='1899-12-30', unit='D')\n\nprint(\n  df\n  .head(10)\n  .to_string(\n    formatters={\n      \"total_bill\": \"${:,.2f}\".format, \n      \"tip\": \"${:,.2f}\".format,\n      \"date\": lambda x: x.strftime(\"%Y-%m-%d\")\n    }\n  )\n)\n```\n\n### Explanation:\n- **Date Conversion:** The `pd.to_datetime` function is used to convert the integer list (simulating Excel serial date numbers) to actual date objects. The `origin='1899-12-30'` and `unit='D'` parameters are used to interpret these integers as Excel-style serial dates.\n- **Custom Formatter for Dates:** Once converted to date objects, you can use the `strftime` method to format the dates as strings. In this example, the format `\"%Y-%m-%d\"` is used, but you can customize it according to your needs (e.g., `\"%d-%m-%Y\"` for day-month-year format).\n\nThis approach will allow you to format all specified columns in the DataFrame output simultaneously."
    }
]