[
    {
        "role": "user",
        "content": "How can I combine two dictionaries in Python in a way that, if a key appears in both dictionaries, its values are added together, and if it appears in only one dictionary, its value is kept as it is? For example, I have two dictionaries:\n\nDict A: {'a': 1, 'b': 2, 'c': 3}\nDict B: {'b': 3, 'c': 4, 'd': 5}\n\nI want to combine these two dictionaries so that the result is:\n\n{'a': 1, 'b': 5, 'c': 7, 'd': 5}"
    },
    {
        "role": "assistant",
        "content": "To achieve this, you can use a dictionary comprehension along with the `collections.Counter` class, which is specifically designed to handle operations like this. Here's how you can combine the two dictionaries:\n\n```python\nfrom collections import Counter\n\ndict_a = {'a': 1, 'b': 2, 'c': 3}\ndict_b = {'b': 3, 'c': 4, 'd': 5}\n\n# Use Counter to combine the dictionaries\ncombined_dict = Counter(dict_a) + Counter(dict_b)\n\n# Convert back to a regular dictionary if needed\ncombined_dict = dict(combined_dict)\n\nprint(combined_dict)\n```\n\nThis code will output:\n\n```\n{'a': 1, 'b': 5, 'c': 7, 'd': 5}\n```\n\nHere's what happens in this code:\n- `Counter(dict_a)` and `Counter(dict_b)` create Counter objects from the dictionaries.\n- Using the `+` operator on these Counter objects combines them by adding the values of common keys.\n- Finally, converting the result to a regular dictionary gives you the desired combined dictionary."
    }
]