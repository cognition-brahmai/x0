[
    {
        "role": "user",
        "content": "How can I add common x-axis and y-axis labels to a plot grid of 5x2 subplots in matplotlib? I am currently using the function `plt.subplots(5,2,sharex=True,sharey=True,figsize=fig_size)` to generate my plot grid and I would like to have one big x-axis label below the whole grid of subplots, and one big y-axis label to the right. I have been unable to find a way to do this in the documentation for `plt.subplots` and my research suggests that I might need to make a big `plt.subplot(111)` initially. If so, how can I integrate my 5*2 subplots into that using `plt.subplots`?"
    },
    {
        "role": "assistant",
        "content": "To add common x-axis and y-axis labels to a grid of subplots in Matplotlib, you can use the `fig.text` method, which allows you to place text at an arbitrary position in the figure. This is often more convenient than trying to manipulate subplot indices or creating an overarching subplot, especially when working with a grid of subplots like in your case. Here's how you can do it:\n\n```python\nimport matplotlib.pyplot as plt\n\n# Define the size of the figure\nfig_size = (10, 8)\n\n# Create a grid of 5x2 subplots\nfig, axes = plt.subplots(5, 2, sharex=True, sharey=True, figsize=fig_size)\n\n# Add a common x-axis label and y-axis label\nfig.text(0.5, 0.04, 'Common X-axis Label', ha='center', va='center')\nfig.text(0.06, 0.5, 'Common Y-axis Label', ha='center', va='center', rotation='vertical')\n\n# Now you can plot your data in each of the subplots\nfor ax in axes.flatten():\n    ax.plot([0, 1], [0, 1])  # Example plot\n\n# Adjust layout to prevent overlap\nplt.tight_layout(rect=[0.1, 0.1, 1, 0.96])\n\n# Show the plot\nplt.show()\n```\n\nIn this example:\n- `fig.text(0.5, 0.04, ...)` places the x-axis label centered along the bottom of the figure.\n- `fig.text(0.06, 0.5, ...)` places the y-axis label centered along the side of the figure, with a vertical orientation.\n- `plt.tight_layout(rect=[0.1, 0.1, 1, 0.96])` is used to adjust the layout to make sure the common labels do not overlap with the subplots. Adjust the `rect` parameter as needed to fit your specific layout.\n\nThis method ensures that the common labels are positioned correctly without interfering with the individual subplots."
    }
]