[
    {
        "role": "user",
        "content": "How can I selectively escape the percent (%) symbol in Python strings? I have the following code:\n\n```python\ntest = \"have it break.\"\nselectiveEscape = \"Print percent % in sentence and not %s\" % test\n\nprint(selectiveEscape)\n```\n\nI want to get the output as:\n\n```python\nPrint percent % in sentence and not have it break.\n```\n\nHowever, I am encountering the following error:\n\n```python\nselectiveEscape = \"Use percent % in sentence and not %s\" % test\nTypeError: %d format: a number is required, not str\n```"
    },
    {
        "role": "assistant",
        "content": "To selectively escape the percent symbol in a Python string when using old-style string formatting (the `%` operator), you need to double the percent symbol (`%%`). This tells Python to treat it as a literal percent sign rather than a placeholder for string interpolation.\n\nHere's how you can modify your code to achieve the desired output:\n\n```python\ntest = \"have it break.\"\nselectiveEscape = \"Print percent %% in sentence and not %s\" % test\n\nprint(selectiveEscape)\n```\n\nIn this modified code, `%%` is used to insert a literal `%` character into the string, while `%s` is used to insert the value of `test`. This will produce the following output:\n\n```python\nPrint percent % in sentence and not have it break.\n```\n\nThis technique allows you to selectively escape the percent symbol when you're using old-style string formatting in Python."
    }
]