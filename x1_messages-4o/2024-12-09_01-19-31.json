[
    {
        "role": "user",
        "content": "How can I link to a large source code file in Sphinx? I am currently documenting a Python module and I have a source code file full of examples. The file is too long to include inline. Is there a way to create a link to the full source file, preferably formatted in a code-friendly way, such as literal or with line numbers?"
    },
    {
        "role": "assistant",
        "content": "To link to a large source code file in Sphinx, you can use a couple of different approaches depending on how you want to present the file. Here's a common method to achieve this, leveraging Sphinx extensions:\n\n### Using the `sphinx.ext.viewcode` Extension\n\nSphinx provides a built-in extension called `sphinx.ext.viewcode` which can be useful for linking to source code. However, this is more for linking to the source code of the modules being documented. If you want to link to an external file, you'll need a different approach.\n\n### Using the `literalinclude` Directive\n\nThe `literalinclude` directive is ideal for embedding snippets of code. However, it can also be used to link to external files. If the file is too large to include inline, you can create a separate document or section for it. Here\u2019s how you can do it:\n\n1. **Create a New RST File**: Create a new reStructuredText (.rst) file to hold the link to your source code.\n\n2. **Use the `literalinclude` Directive**: In the new RST file, use the `literalinclude` directive to include your source code file. You can specify options to format it with line numbers, syntax highlighting, etc.\n\n   ```rst\n   .. _full_source_code:\n\n   Full Source Code\n   =================\n\n   Here is the full source code file for reference:\n\n   .. literalinclude:: /path/to/your/source/code/example.py\n      :language: python\n      :linenos:\n   ```\n\n   Replace `/path/to/your/source/code/example.py` with the relative path to your file.\n\n3. **Link to the New RST File**: In your main documentation, you can link to this section using a reference link:\n\n   ```rst\n   See the full source code in :ref:`full_source_code`.\n   ```\n\n### Additional Options\n\n- **Download Link**: If you prefer not to display the entire file but provide a download link instead, you can use a simple hyperlink:\n\n  ```rst\n  You can download the full source code [here](../path/to/your/source/code/example.py).\n  ```\n\n- **Separate HTML Page**: You can also consider creating a separate HTML page for the source code file, if your documentation structure allows for it. This way, the code can be accessed and viewed independently.\n\n### Configuration\n\nEnsure that your Sphinx `conf.py` is configured to recognize the file types and paths correctly. You may need to adjust the `html_static_path` or similar settings if your source code is not located in the default paths.\n\nBy following these steps, you can effectively link to and display large source code files in a Sphinx documentation project, while keeping the main documentation concise and readable."
    }
]