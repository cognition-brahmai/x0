[
    {
        "role": "user",
        "content": "I have a project in Python3 with a specific hierarchy, and I want to run an HTTP server that serves the content of a specific folder in my project. My project hierarchy is as follows:\n\n```\nproject\n  \\\n  script.py\n  web\n    \\\n    index.html\n```\n\nI want to run the HTTP server from `script.py` and I want it to serve the content of the `web` folder. I have tried the following code which is suggested to run a simple HTTP server:\n\n```python\nimport http.server\nimport socketserver\n\nPORT = 8000\nHandler = http.server.SimpleHTTPRequestHandler\nhttpd = socketserver.TCPServer((\"\", PORT), Handler)\nprint(\"serving at port\", PORT)\nhttpd.serve_forever()\n```\n\nHowever, this code serves the `project` directory, not the `web` directory. How can I specify the path of the folder I want to serve?"
    },
    {
        "role": "assistant",
        "content": "To serve the content of the `web` directory specifically, you need to change the current working directory to `web` before starting the HTTP server. You can use the `os` module to change the directory in your `script.py`. Here's how you can modify your script:\n\n```python\nimport http.server\nimport socketserver\nimport os\n\n# Define the port you want to serve on\nPORT = 8000\n\n# Change the current working directory to 'web'\nweb_dir = os.path.join(os.path.dirname(__file__), 'web')\nos.chdir(web_dir)\n\n# Create a handler and server\nHandler = http.server.SimpleHTTPRequestHandler\nhttpd = socketserver.TCPServer((\"\", PORT), Handler)\n\nprint(\"Serving at port\", PORT)\nhttpd.serve_forever()\n```\n\n### Explanation:\n1. **Change Directory**: The line `os.chdir(web_dir)` changes the current working directory to the `web` directory. This ensures that the HTTP server serves files from this directory.\n\n2. **Directory Path**: `os.path.join(os.path.dirname(__file__), 'web')` constructs the path to the `web` directory dynamically, ensuring that it works regardless of the location from where the script is run.\n\nBy making these changes, your HTTP server will serve files from the `web` directory, and you can access them through `http://localhost:8000` or `http://127.0.0.1:8000`."
    }
]