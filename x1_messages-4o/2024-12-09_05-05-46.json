[
    {
        "role": "user",
        "content": "How can I use an `if` statement to determine which block should fill my `{% block content %}` in jinja2? I have a `base.html` which has a default `{% block content %}` and this template is extending `base.html`. When I try to implement it, I either get the same content regardless of the condition or a `TemplateAssertionError: block 'content' defined twice`. How can I successfully implement a block inside an `if` statement?\n\nHere are the two methods I tried:\n\nMethod 1:\n```jinja2\n{% extends \"base.html\" %}\n{% if condition == True %}\n    {% block content %}\n    <div>blah blah blah blah</div>\n    {% endblock content %}\n{% endif %}\n```\nI expected to see `blah blah blah blah` if condition was true and see the default block if it wasn't true. But both times I got `blah blah blah blah`.\n\nMethod 2:\n```jinja2\n{% extends \"base.html\" %}\n{% if condition == True %}\n    {% block content %}\n    <div>blah blah blah blah</div>\n    {% endblock content %}\n{% else %}\n    {% block content %}\n    <div>The Default Thing</div>\n    {% endblock content %}\n{% endif %}\n```\nIn this case, I received the error: `TemplateAssertionError: block 'content' defined twice`."
    },
    {
        "role": "assistant",
        "content": "In Jinja2, the `{% block %}` tag is used for defining a block that can be overridden by child templates extending a base template. However, Jinja2 does not allow you to conditionally define blocks with the same name, as this would lead to the `TemplateAssertionError` you encountered.\n\nTo achieve conditional content rendering within the `{% block content %}`, you can use an `if` statement inside the block itself, rather than trying to define multiple blocks conditionally. Here's how you can do it:\n\n```jinja2\n{% extends \"base.html\" %}\n\n{% block content %}\n    {% if condition %}\n        <div>blah blah blah blah</div>\n    {% else %}\n        <div>The Default Thing</div>\n    {% endif %}\n{% endblock %}\n```\n\nIn this approach, you define the `{% block content %}` once, and use the `if` statement inside the block to determine which content should be rendered based on the condition. This way, you avoid defining multiple blocks with the same name and can control the content dynamically based on the given condition."
    }
]