[
    {
        "role": "user",
        "content": "I am encountering an issue while trying to rotate my date ticks in matplotlib using Python. When I attempt to rotate the ticks at the end of my code, the ticks do not rotate. If I try to rotate the ticks in the function `avail_plot`, matplotlib crashes. This issue only occurs when the x-values are dates. If I replace the variable `dates` with the variable `t` in the call to `avail_plot`, the `xticks(rotation=70)` call works properly within `avail_plot`. Could you suggest any solutions? Here is the code I have been working with:\n\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport datetime as dt\n\ndef avail_plot(ax, x, y, label, lcolor):\n    ax.plot(x,y,'b')\n    ax.set_ylabel(label, rotation='horizontal', color=lcolor)\n    ax.get_yaxis().set_ticks([])\n    #crashes\n    #plt.xticks(rotation=70)\n    ax2 = ax.twinx()\n    ax2.plot(x, [1 for a in y], 'b')\n    ax2.get_yaxis().set_ticks([])\n    ax2.set_ylabel('testing')\n\nf, axs = plt.subplots(2, sharex=True, sharey=True)\nt = np.arange(0.01, 5, 1)\ns1 = np.exp(t)\nstart = dt.datetime.now()\ndates=[]\nfor val in t:\n    next_val = start + dt.timedelta(0,val)\n    dates.append(next_val)\n    start = next_val\n\navail_plot(axs[0], dates, s1, 'testing', 'green')\navail_plot(axs[1], dates, s1, 'testing2', 'red')\nplt.subplots_adjust(hspace=0, bottom=0.3)\nplt.yticks([0.5,],(\"\",\"\"))\n#plt.xticks(rotation=70)\nplt.show()\n```"
    },
    {
        "role": "assistant",
        "content": "In your code, the issue of rotating date ticks in matplotlib arises because the `plt.xticks(rotation=70)` function call attempts to rotate the ticks for the current figure. However, since the x-values are datetime objects and you're using `sharex=True`, the tick formatting is automatically handled by matplotlib.\n\nTo rotate date ticks when dealing with datetime objects, you should use the `ax.xaxis.set_tick_params(rotation=70)` method on the specific axes objects. Here\u2019s how you can modify your code to achieve the desired rotation of date ticks:\n\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport datetime as dt\n\ndef avail_plot(ax, x, y, label, lcolor):\n    ax.plot(x, y, 'b')\n    ax.set_ylabel(label, rotation='horizontal', color=lcolor)\n    ax.get_yaxis().set_ticks([])\n    ax2 = ax.twinx()\n    ax2.plot(x, [1 for a in y], 'b')\n    ax2.get_yaxis().set_ticks([])\n    ax2.set_ylabel('testing')\n\n# Create subplots with shared x-axis\nf, axs = plt.subplots(2, sharex=True, sharey=True)\n\nt = np.arange(0.01, 5, 1)\ns1 = np.exp(t)\nstart = dt.datetime.now()\n\n# Generate datetime objects for x-values\ndates = [start + dt.timedelta(seconds=val) for val in t]\n\n# Plot data on each subplot\navail_plot(axs[0], dates, s1, 'testing', 'green')\navail_plot(axs[1], dates, s1, 'testing2', 'red')\n\n# Adjust subplot layout\nplt.subplots_adjust(hspace=0, bottom=0.3)\nplt.yticks([0.5,], (\"\", \"\"))\n\n# Rotate the x-tick labels for the bottom shared axis\naxs[-1].xaxis.set_tick_params(rotation=70)\n\nplt.show()\n```\n\n### Explanation:\n- **Shared x-axis:** Since you are using `sharex=True`, the x-axis is shared between the subplots, and you only need to set the tick rotation for one of the axes, typically the bottom-most one.\n- **`set_tick_params` method:** This method allows you to customize tick properties, including rotation, for a specific axes object, ensuring your datetime tick labels are displayed at the desired angle.\n\nBy making these changes, your date ticks should now properly rotate without causing any issues or crashes."
    }
]