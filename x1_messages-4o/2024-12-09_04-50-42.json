[
    {
        "role": "user",
        "content": "How can I retrieve and print the URL after each redirect when using urllib2 in Python? I am attempting to open a URL that redirects to another URL, which then redirects to yet another URL. For instance, if A redirects to B, B redirects to C, and C redirects to D, I would like to print the URLs for B, C, and D (given that A is already known as it's the initial URL)."
    },
    {
        "role": "assistant",
        "content": "To achieve this task using `urllib2` in Python 2, you'll need to create a custom HTTPRedirectHandler to intercept and print each redirect. Below is an example of how you can do this:\n\n```python\nimport urllib2\n\nclass MyHTTPRedirectHandler(urllib2.HTTPRedirectHandler):\n    def http_error_302(self, req, fp, code, msg, headers):\n        print(\"Redirected to:\", headers['Location'])\n        return urllib2.HTTPRedirectHandler.http_error_302(self, req, fp, code, msg, headers)\n\n    def http_error_301(self, req, fp, code, msg, headers):\n        print(\"Redirected to:\", headers['Location'])\n        return urllib2.HTTPRedirectHandler.http_error_301(self, req, fp, code, msg, headers)\n\n# Build the opener with our custom redirect handler\nopener = urllib2.build_opener(MyHTTPRedirectHandler)\n\n# Open the initial URL\nresponse = opener.open('http://example.com/A')\n\n# Print the final URL (after all redirects)\nprint(\"Final URL:\", response.geturl())\n```\n\nIn this code:\n\n1. We create a subclass of `urllib2.HTTPRedirectHandler` called `MyHTTPRedirectHandler`.\n2. We override the `http_error_301` and `http_error_302` methods to print the location header, which contains the URL to which the request is being redirected.\n3. We use this custom redirect handler in an opener built with `urllib2.build_opener()`.\n4. We open the initial URL with this opener.\n5. The final URL after all the redirects is printed using `response.geturl()`.\n\nThis will print each URL that the request is redirected to, including the final destination URL. Note that this code is specifically for Python 2. If you're using Python 3, you'd use `urllib.request` instead of `urllib2`, and the code would be slightly different."
    }
]