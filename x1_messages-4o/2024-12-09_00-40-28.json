[
    {
        "role": "user",
        "content": "How can I read data from a SQL database using pyodbc and then process this data using pandas in Python?\n\nI have been trying to query a SQL database and process the data using pandas in Python. However, I am facing difficulties in moving the data from pyodbc to pandas. Here is my code:\n\n```python\nimport pyodbc\nimport pandas\nfrom pandas import DataFrame\n\ncnxn = pyodbc.connect(r'DRIVER={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=C:\\users\\bartogre\\desktop\\CorpRentalPivot1.accdb;UID=\"\";PWD=\"\";')\ncrsr = cnxn.cursor()\nfor table_name in crsr.tables(tableType='TABLE'):\n    print(table_name)\ncursor = cnxn.cursor()\nsql = \"Select sum(CYTM), sum(PYTM), BRAND From data Group By BRAND\"\ncursor.execute(sql)\nfor data in cursor.fetchall():\n    print (data)\n```\n\nAnd this is the output I get:\n\n```\n('C:\\\\users\\\\bartogre\\\\desktop\\\\CorpRentalPivot1.accdb', None, 'Data', 'TABLE', None)\n('C:\\\\users\\\\bartogre\\\\desktop\\\\CorpRentalPivot1.accdb', None, 'SFDB', 'TABLE', None)\n(Decimal('78071898.71'), Decimal('82192672.29'), 'A')\n(Decimal('12120663.79'), Decimal('13278814.52'), 'B')\n```\n\nCan you guide me on how to move the data from pyodbc to pandas?"
    },
    {
        "role": "assistant",
        "content": "Certainly! To move the data from a SQL database using `pyodbc` to a pandas DataFrame, you can utilize the `pandas.read_sql_query` function. This function simplifies the process by directly executing the SQL query and loading the result into a DataFrame. Below is an example of how you can modify your code to achieve this:\n\n```python\nimport pyodbc\nimport pandas as pd\n\n# Establish the connection to the database\ncnxn = pyodbc.connect(\n    r'DRIVER={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=C:\\users\\bartogre\\desktop\\CorpRentalPivot1.accdb;UID=\"\";PWD=\"\";'\n)\n\n# Your SQL query\nsql = \"SELECT SUM(CYTM) AS CYTM_Sum, SUM(PYTM) AS PYTM_Sum, BRAND FROM data GROUP BY BRAND\"\n\n# Use pandas to execute the query and read the results into a DataFrame\ndf = pd.read_sql_query(sql, cnxn)\n\n# Display the DataFrame\nprint(df)\n\n# Close the connection\ncnxn.close()\n```\n\n### Key Points:\n1. **Connection Setup**: Ensure the connection string is correct for your database. You might need to adjust the driver or other parameters depending on your setup.\n\n2. **Query Execution**: The `pandas.read_sql_query` function executes the SQL query and directly reads the result into a pandas DataFrame, which is a convenient way to handle results.\n\n3. **DataFrame**: Once the data is in a DataFrame, you can use all the powerful data manipulation and analysis tools provided by pandas.\n\n4. **Closing Connections**: Always remember to close the database connection when you're done to free up resources.\n\nThis approach simplifies the data transfer process and provides you with a highly flexible and powerful toolset for subsequent data analysis."
    }
]