[
    {
        "role": "user",
        "content": "How can I retrieve the size of an uploaded image in Flask? I'm currently trying to control if the size of the uploaded image is greater than the maximum file upload limit. Here is what I have attempted:\n\n```python\n@app.route(\"/new/photo\",methods=[\"POST\"])\ndef newPhoto():\n    form_photo = request.files['post-photo']\n    print form_photo.content_length\n```\n\nThis code returns `0` instead of the expected size. Am I doing something wrong? Should I retrieve the size of this image from its temporary path? Is there a method in Python similar to PHP's `$_FILES['foo']['size']`?"
    },
    {
        "role": "assistant",
        "content": "In Flask, when you're dealing with file uploads, the `content_length` attribute refers to the entire request's content length, not the individual file size. Instead, you should use the `stream` object of the uploaded file to get its size, or simply use the `seek` method to determine the file size as it's in memory. Here's how you can do it:\n\n```python\nfrom flask import Flask, request\n\napp = Flask(__name__)\n\n@app.route(\"/new/photo\", methods=[\"POST\"])\ndef newPhoto():\n    form_photo = request.files['post-photo']\n    form_photo.seek(0, 2)  # Move the cursor to the end of the file\n    file_size = form_photo.tell()  # Get the current position of cursor which is the size of the file\n    form_photo.seek(0)  # Reset the cursor position to the start of the file, so you can read it later if needed\n\n    max_file_size = 5 * 1024 * 1024  # Let's say 5 MB for example\n\n    if file_size > max_file_size:\n        return \"File is too large\", 400\n\n    # Process the file as needed\n    return \"File is within size limit\", 200\n\nif __name__ == \"__main__\":\n    app.run(debug=True)\n```\n\n### Explanation:\n- `form_photo.seek(0, 2)`: Moves the cursor to the end of the file.\n- `form_photo.tell()`: Returns the current cursor position, which is the size of the file.\n- `form_photo.seek(0)`: Resets the cursor to the beginning, so you can read the file content later if needed.\n\nThis way, you can effectively check the size of the uploaded file and compare it with your defined limit."
    }
]