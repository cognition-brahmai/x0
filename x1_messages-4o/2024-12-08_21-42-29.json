[
    {
        "role": "user",
        "content": "How can I create a Python function that calculates the sum of prime factors for each number in a given list of integers? I want to use the Sieve of Eratosthenes algorithm to generate a list of prime numbers up to the highest number in the input list. Then, for each number in the input list, I want to find all of its prime factors and add them together to get the total sum of prime factors. Can you show me the formula/code for this function?"
    },
    {
        "role": "assistant",
        "content": "Certainly! To achieve this, you can follow these steps:\n\n1. Use the Sieve of Eratosthenes to generate a list of prime numbers up to the maximum number in the input list.\n2. Create a function to calculate the sum of prime factors for each number in the list.\n3. Iterate through each number in the input list, find its prime factors using the generated list of primes, and sum them up.\n\nHere's a Python function to perform the task:\n\n```python\ndef sieve_of_eratosthenes(max_num):\n    is_prime = [True] * (max_num + 1)\n    p = 2\n    while p * p <= max_num:\n        if is_prime[p]:\n            for i in range(p * p, max_num + 1, p):\n                is_prime[i] = False\n        p += 1\n    primes = [p for p in range(2, max_num + 1) if is_prime[p]]\n    return primes\n\ndef sum_of_prime_factors(n, primes):\n    sum_factors = 0\n    original_n = n\n    for prime in primes:\n        if prime * prime > n:\n            break\n        while n % prime == 0:\n            sum_factors += prime\n            n //= prime\n    if n > 1:  # n is prime itself if not reduced to 1\n        sum_factors += n\n    return sum_factors\n\ndef sum_of_prime_factors_for_list(numbers):\n    if not numbers:\n        return []\n\n    max_num = max(numbers)\n    primes = sieve_of_eratosthenes(max_num)\n    result = []\n\n    for number in numbers:\n        sum_factors = sum_of_prime_factors(number, primes)\n        result.append(sum_factors)\n\n    return result\n\n# Example usage\nnumbers = [10, 15, 21, 33]\nresult = sum_of_prime_factors_for_list(numbers)\nprint(result)  # Output: [5, 8, 10, 14]\n```\n\n### Explanation:\n- **`sieve_of_eratosthenes`**: This function generates all prime numbers up to `max_num` using the Sieve of Eratosthenes algorithm.\n- **`sum_of_prime_factors`**: This function calculates the sum of prime factors for a given number `n` using the list of prime numbers.\n- **`sum_of_prime_factors_for_list`**: This function iterates through each number in the list and computes the sum of its prime factors using the two previously defined functions.\n\nThe example usage demonstrates how to call the function with a list of integers and get the sum of their prime factors."
    }
]