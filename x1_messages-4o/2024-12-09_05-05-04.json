[
    {
        "role": "user",
        "content": "I am working with numpy and trying to find a function that returns all occurrences of the maximum value in a given list. When using numpy.argmax, it only returns the first occurrence of the maximum value. For example, when running the following code:\n```python\nfrom numpy import argmax\n\nlist = [7, 6, 5, 7, 6, 7, 6, 6, 6, 4, 5, 6]\nwinner = argmax(list)\n\nprint(winner)\n```\nit only gives the index `0` when I want it to give all indices: `0, 3, 5`. Is there a way to make numpy.argmax return all occurrences of the maximum value?"
    },
    {
        "role": "assistant",
        "content": "`numpy.argmax` indeed returns only the first occurrence of the maximum value. To find all occurrences of the maximum value in the list, you can use `numpy.where` in combination with `numpy.max`. Here's how you can do it:\n\n```python\nimport numpy as np\n\nlst = [7, 6, 5, 7, 6, 7, 6, 6, 6, 4, 5, 6]\nmax_value = np.max(lst)\nindices = np.where(lst == max_value)[0]\n\nprint(indices)\n```\n\nThis will give you an array containing all the indices where the maximum value occurs, which in this case will be `[0, 3, 5]`."
    }
]