[
    {
        "role": "user",
        "content": "I'm using Django 1.5 and attempting to create a custom user model, `PokerUser`, based on the `AbstractUser` model. However, I'm encountering a few issues. First, I can only register new users via the Django admin interface, not through my registration form. When I attempt to register a new user via the form, I receive the error: `Manager isn't available; User has been swapped for 'poker.PokerUser'`. I've tried changing the model in the `PokerUserForm` to use `get_user_model()` instead of `PokerUser`, but then I receive a new error: `django.core.exceptions.ImproperlyConfigured: AUTH_USER_MODEL refers to model 'poker.PokerUser' that has not been installed`. My `AUTH_USER_MODEL` is correctly set up in my `settings.py` file as `AUTH_USER_MODEL = 'poker.PokerUser'`. I've also overridden the `UserCreationForm` according to the Django documentation, but the users created can't log in. Their passwords are not being saved correctly, though all other fields are. All of these issues only occur with users created via the registration form; users created via the Django admin interface work correctly. Why are these issues occurring and how can I fix them?"
    },
    {
        "role": "assistant",
        "content": "Creating a custom user model in Django can be a bit tricky, especially when dealing with forms and ensuring everything is set up correctly. Let's break down your issues and address them one by one:\n\n1. **Error: `Manager isn't available; User has been swapped for 'poker.PokerUser'`**\n\n   This error typically occurs when there is a misconfiguration or when the custom user model is not properly recognized by Django. Here are a few steps you can take to resolve this issue:\n\n   - **Ensure the app is listed in `INSTALLED_APPS`:** Double-check that your app (`poker` in this case) is listed in the `INSTALLED_APPS` setting in `settings.py`.\n\n   - **Sync Database:** Run `python manage.py makemigrations` and `python manage.py migrate` to ensure that your custom user model is migrated properly.\n\n   - **Use `get_user_model()`:** Continue using `get_user_model()` to refer to your custom user model instead of directly referring to `PokerUser`. This ensures that you are using the correct model.\n\n2. **Error: `AUTH_USER_MODEL refers to model 'poker.PokerUser' that has not been installed`**\n\n   This error suggests that Django is unable to find the custom user model. Ensure the following:\n\n   - **Migrations:** Ensure that you have run all necessary migrations. If you're still encountering issues, try deleting your migration files and running `makemigrations` and `migrate` again.\n\n   - **Import Order:** Check your `models.py` and other related files to ensure that there are no circular imports or incorrect import orders that could be causing issues.\n\n3. **Password Issue:**\n\n   If passwords are not being saved correctly, it's likely that the password hashing process is not being performed during user creation. Ensure the following:\n\n   - **Override `save` Method in Form:** If you have a custom registration form, override the `save` method to handle password hashing. Here is an example:\n\n     ```python\n     from django.contrib.auth.forms import UserCreationForm\n\n     class PokerUserCreationForm(UserCreationForm):\n         class Meta:\n             model = get_user_model()\n             fields = ('username', 'email',)  # Add other fields you want to include\n\n         def save(self, commit=True):\n             user = super(PokerUserCreationForm, self).save(commit=False)\n             user.set_password(self.cleaned_data[\"password1\"])\n             if commit:\n                 user.save()\n             return user\n     ```\n\n   - **Check Form Validation:** Ensure your form is properly validating the input data. Use `form.is_valid()` to check for validation errors.\n\n4. **Testing Logins:**\n\n   - After fixing the password issue, ensure that you can log in with users created via the form. If issues persist, check the authentication backends and ensure they are set up correctly in `settings.py`.\n\nBy following these steps, you should be able to resolve the issues you're facing with the custom user model and registration form in Django 1.5. If problems persist, consider checking the Django documentation for any version-specific quirks or updates that might be relevant to your setup."
    }
]