[
    {
        "role": "user",
        "content": "How can I send automated messages to Microsoft Teams using Python? I have a Python script that I want to run, and at the end of its execution, I want to send the results in a text format to a few employees through MS Teams. Is there a pre-existing library that would allow me to send a message in Microsoft Teams through Python code?"
    },
    {
        "role": "assistant",
        "content": "Yes, you can send automated messages to Microsoft Teams using Python by leveraging the Microsoft Teams Webhook feature. This allows you to send messages to a specific channel in a team. Here's a step-by-step guide on how to do it:\n\n### Step 1: Set Up an Incoming Webhook in Microsoft Teams\n\n1. **Go to the Channel**: Open the Microsoft Teams app and go to the channel where you want to send messages.\n\n2. **Manage Channel**: Click on the three dots (`...`) next to the channel name and select \"Connectors.\"\n\n3. **Add Incoming Webhook**: Scroll down to find \"Incoming Webhook\" and click \"Add.\"\n\n4. **Configure Webhook**: Give the webhook a name and upload an image if you want. After that, click \"Create.\"\n\n5. **Copy the Webhook URL**: Once the webhook is created, you\u2019ll get a unique URL. Copy this URL as you will need it in your Python script.\n\n### Step 2: Use Python to Send a Message\n\nYou can use the `requests` library in Python to send a POST request to this webhook URL with the message payload.\n\n1. **Install the requests library**: If you haven\u2019t already installed it, you can do so using pip:\n\n   ```bash\n   pip install requests\n   ```\n\n2. **Python Script**: Here\u2019s a sample script that sends a message to a Microsoft Teams channel:\n\n   ```python\n   import requests\n   import json\n\n   def send_teams_message(webhook_url, message):\n       headers = {\n           \"Content-Type\": \"application/json\"\n       }\n       payload = {\n           \"text\": message\n       }\n       response = requests.post(webhook_url, headers=headers, data=json.dumps(payload))\n       if response.status_code == 200:\n           print(\"Message sent successfully.\")\n       else:\n           print(f\"Failed to send message: {response.status_code} - {response.text}\")\n\n   if __name__ == \"__main__\":\n       # Replace with your webhook URL\n       webhook_url = \"YOUR_WEBHOOK_URL\"\n       message = \"Your message content goes here\"\n       \n       send_teams_message(webhook_url, message)\n   ```\n\n### Step 3: Integrate with Your Script\n\nAt the end of your existing Python script, integrate this function to send the desired results as a message to your Microsoft Teams channel. You can modify the `message` variable to include the results from your script.\n\n### Additional Customization\n\nYou can customize the message payload to include more complex formatting, such as cards or attachments, by following the [Microsoft Teams Message Card Reference](https://docs.microsoft.com/en-us/microsoftteams/platform/webhooks-and-connectors/how-to/connectors-using). This will allow you to create rich and interactive messages.\n\nBy following these steps, you should be able to automate sending notifications or results from your script to Microsoft Teams."
    }
]