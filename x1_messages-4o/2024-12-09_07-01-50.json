[
    {
        "role": "user",
        "content": "How can I encode and decode an integer using base 36 in Python?"
    },
    {
        "role": "assistant",
        "content": "To encode and decode an integer using base 36 in Python, you can create functions that handle the conversion. Base 36 is a numeral system that uses 36 characters: the digits `0-9` and the letters `a-z`.\n\nHere's a simple implementation for encoding and decoding:\n\n### Encoding an Integer to Base 36\n\n```python\ndef encode_base36(num):\n    if num < 0:\n        raise ValueError(\"Base 36 encoding only works for non-negative integers.\")\n\n    if num == 0:\n        return '0'\n\n    base36_chars = '0123456789abcdefghijklmnopqrstuvwxyz'\n    encoded = []\n\n    while num > 0:\n        num, remainder = divmod(num, 36)\n        encoded.append(base36_chars[remainder])\n\n    return ''.join(reversed(encoded))\n\n# Example usage:\nnum_to_encode = 123456789\nencoded_str = encode_base36(num_to_encode)\nprint(f\"Encoded: {encoded_str}\")  # Output will be '21i3v9'\n```\n\n### Decoding a Base 36 String to an Integer\n\n```python\ndef decode_base36(encoded_str):\n    base36_chars = '0123456789abcdefghijklmnopqrstuvwxyz'\n    base36_map = {char: index for index, char in enumerate(base36_chars)}\n\n    num = 0\n    for char in encoded_str:\n        if char not in base36_map:\n            raise ValueError(f\"Invalid character '{char}' for base 36.\")\n        num = num * 36 + base36_map[char]\n\n    return num\n\n# Example usage:\nencoded_str = '21i3v9'\ndecoded_num = decode_base36(encoded_str)\nprint(f\"Decoded: {decoded_num}\")  # Output will be 123456789\n```\n\n### Explanation\n\n- **Encoding**: The `encode_base36` function converts a non-negative integer to a base 36 string. It repeatedly divides the number by 36 and stores the remainder as a character in the base 36 system, building the result string in reverse order.\n  \n- **Decoding**: The `decode_base36` function converts a base 36 string back to an integer. It iterates through each character in the string, uses a mapping to get the corresponding value, and accumulates the result by multiplying the current total by 36 and adding the current character's value.\n\nMake sure the input for the encoding function is a non-negative integer and the string for the decoding function only contains valid base 36 characters."
    }
]