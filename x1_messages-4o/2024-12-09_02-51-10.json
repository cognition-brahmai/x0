[
    {
        "role": "user",
        "content": "I'm using the Python high level consumer for Kafka and I'm trying to get the latest offsets for each partition of a topic. However, I'm having trouble accomplishing this. Here's the code I'm using:\n\n```python\nfrom kafka import TopicPartition\nfrom kafka.consumer import KafkaConsumer\n\ncon = KafkaConsumer(bootstrap_servers = brokers)\nps = [TopicPartition(topic, p) for p in con.partitions_for_topic(topic)]\n\ncon.assign(ps)\nfor p in ps:\n    print \"For partition %s highwater is %s\"%(p.partition,con.highwater(p))\n\nprint \"Subscription = %s\"%con.subscription()\nprint \"con.seek_to_beginning() = %s\"%con.seek_to_beginning()\n```\n\nThe output I get is:\n\n```python\nFor partition 0 highwater is None\nFor partition 1 highwater is None\nFor partition 2 highwater is None\nFor partition 3 highwater is None\nFor partition 4 highwater is None\nFor partition 5 highwater is None\n....\nFor partition 96 highwater is None\nFor partition 97 highwater is None\nFor partition 98 highwater is None\nFor partition 99 highwater is None\nSubscription = None\ncon.seek_to_beginning() = None\ncon.seek_to_end() = None\n```\n\nI also tried an alternate approach using `assign` but the result is the same. I've read some documentation that suggests this might be the case if a `fetch` has not been issued, but I can't find a way to force that. What am I doing wrong? Or is there a different or simpler way to get the latest offsets for a topic?"
    },
    {
        "role": "assistant",
        "content": "To get the latest offsets for each partition in a Kafka topic using the Kafka Python client, you can use the `end_offsets()` method provided by the KafkaConsumer. This method requires that you specify the partitions for which you want to retrieve the offsets. Here's a modified version of your code that should work:\n\n```python\nfrom kafka import KafkaConsumer, TopicPartition\n\n# Initialize the KafkaConsumer\ncon = KafkaConsumer(bootstrap_servers=brokers)\n\n# Get the partitions for the topic\npartitions = [TopicPartition(topic, p) for p in con.partitions_for_topic(topic)]\n\n# Assign the partitions to the consumer\ncon.assign(partitions)\n\n# Get the latest offsets for each partition\nlatest_offsets = con.end_offsets(partitions)\n\n# Print the offsets\nfor partition, offset in latest_offsets.items():\n    print(f\"For partition {partition.partition} the latest offset is {offset}\")\n```\n\n### Key Points:\n- **end_offsets()**: This method retrieves the latest offsets for the specified partitions. It returns a dictionary with partitions as keys and their latest offsets as values.\n- **Assigning Partitions**: You need to assign the partitions to the consumer using `assign()` before calling `end_offsets()`.\n- **No Fetch Required**: Unlike fetching messages, getting offsets does not require you to consume any messages; hence, there's no need to perform a fetch operation first.\n- **Python Print Syntax**: Note that I used the `f-string` for formatting the print statement, which is available in Python 3.6 and later.\n\nEnsure you have the necessary permissions to read from the topic and access the partition metadata. If you continue to experience issues, verify the connectivity with the Kafka broker and that the topic and partitions exist."
    }
]