[
    {
        "role": "user",
        "content": "Is there a simple function that can be used to plot a normal distribution given a mean and a variance?"
    },
    {
        "role": "assistant",
        "content": "Yes, you can use Python's Matplotlib and NumPy libraries to plot a normal distribution given a mean and a variance. Here's a simple function that does exactly that:\n\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.stats import norm\n\ndef plot_normal_distribution(mean, variance):\n    # Calculate the standard deviation\n    std_dev = np.sqrt(variance)\n    \n    # Generate x values\n    x_values = np.linspace(mean - 4*std_dev, mean + 4*std_dev, 1000)\n    \n    # Calculate the y values for the normal distribution\n    y_values = norm.pdf(x_values, mean, std_dev)\n    \n    # Plot the normal distribution\n    plt.plot(x_values, y_values, label=f'Mean: {mean}, Variance: {variance}')\n    plt.title('Normal Distribution')\n    plt.xlabel('Value')\n    plt.ylabel('Probability Density')\n    plt.legend()\n    plt.grid(True)\n    plt.show()\n\n# Example usage\nplot_normal_distribution(0, 1)\n```\n\nThis function first calculates the standard deviation from the variance, generates a range of x values around the mean, then calculates the corresponding y values using the probability density function (pdf) for a normal distribution. The plot is then displayed using Matplotlib. You can adjust the `mean` and `variance` parameters to plot different normal distributions."
    }
]