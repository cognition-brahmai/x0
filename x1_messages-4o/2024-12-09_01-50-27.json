[
    {
        "role": "user",
        "content": "How can I convert a date in Excel, which is in a number format, to a properly formatted date in Python?"
    },
    {
        "role": "assistant",
        "content": "To convert a date in Excel, which is stored as a serial number, to a properly formatted date in Python, you can use the `datetime` module. Excel stores dates as the number of days since a base date, which is January 1, 1900, for Windows Excel (with some exceptions around leap years). Here's how you can achieve this conversion:\n\n```python\nfrom datetime import datetime, timedelta\n\ndef excel_date_to_python_date(excel_serial):\n    # Excel dates start from January 1, 1900\n    excel_base_date = datetime(1899, 12, 30)  # Note: Excel's day 1 is Jan 1, 1900, but Python's day 1 is Dec 30, 1899\n    python_date = excel_base_date + timedelta(days=excel_serial)\n    return python_date\n\n# Example usage\nexcel_serial_number = 44561  # This is an example Excel serial number\npython_date = excel_date_to_python_date(excel_serial_number)\nprint(python_date.strftime('%Y-%m-%d'))  # Output will be in 'YYYY-MM-DD' format\n```\n\nIn this code:\n- We start by defining the base date for Excel as December 30, 1899. This is because Excel mistakenly considers 1900 as a leap year due to a historical bug, which effectively makes its base date December 30, 1899, in Python.\n- We then add the number of days (Excel serial number) to this base date.\n- Finally, we format the resulting Python date object into a string for easy readability.\n\nYou can modify the output format using `strftime()` depending on how you want to display the date."
    }
]