[
    {
        "role": "user",
        "content": "How can I read and write to Google Sheets spreadsheets using Python? I would like to query spreadsheets based on different columns, similar to a SQL query, and then parse the data and put it into another spreadsheet or doc at Google Docs. I have looked at the Google Docs API but I am unsure if it is the right tool for this purpose. Could you provide an example of how to achieve this?"
    },
    {
        "role": "assistant",
        "content": "To read and write to Google Sheets using Python, you can use the Google Sheets API. This API allows you to interact with Google Sheets programmatically and perform operations like reading data, writing data, and even performing complex queries.\n\nHere's a step-by-step guide on how to achieve this using the `gspread` library along with the Google Sheets API:\n\n### Prerequisites\n\n1. **Create a Google Cloud Project and Enable the API:**\n   - Go to the [Google Cloud Console](https://console.cloud.google.com/).\n   - Create a new project.\n   - Enable the Google Sheets API and Google Drive API for the project.\n\n2. **Create Credentials:**\n   - Navigate to \"APIs & Services\" > \"Credentials\".\n   - Click \"Create Credentials\" and choose \"Service Account\".\n   - Fill in the necessary details and create the service account.\n   - Once created, go to the service account and click \"Add Key\" > \"JSON\". This will download a JSON file with the credentials.\n\n3. **Share Your Google Sheet:**\n   - Open your Google Sheet.\n   - Share it with the email address that corresponds to your service account (found in the downloaded JSON file).\n\n### Installation\n\nYou'll need the `gspread` library and `oauth2client` for authentication. Install them using pip:\n\n```bash\npip install gspread oauth2client\n```\n\n### Code Example\n\nHere's a Python script that demonstrates how to read from and write to a Google Sheet:\n\n```python\nimport gspread\nfrom oauth2client.service_account import ServiceAccountCredentials\n\n# Define the scope\nscope = [\"https://spreadsheets.google.com/feeds\", \"https://www.googleapis.com/auth/drive\"]\n\n# Add credentials to the account\ncreds = ServiceAccountCredentials.from_json_keyfile_name('path/to/credentials.json', scope)\n\n# Authorize the clientsheet \nclient = gspread.authorize(creds)\n\n# Open the Google Sheet\nsheet = client.open(\"Your Google Sheet Name\").sheet1\n\n# Read data from the sheet\ndata = sheet.get_all_records()\n\n# Query data similar to SQL\n# For example, filter rows based on a specific column value\nfiltered_data = [row for row in data if row['Your Column Name'] == 'Desired Value']\n\n# Write the filtered data to another sheet or document\n# Here, we'll write to another sheet\nnew_sheet = client.create(\"Filtered Data Sheet\").sheet1\n\n# Assuming the keys of the first dictionary in filtered_data are the headers\nif filtered_data:\n    headers = filtered_data[0].keys()\n    new_sheet.append_row(headers)  # Write headers\n    for row in filtered_data:\n        new_sheet.append_row(list(row.values()))  # Write each row\n\nprint(\"Data filtered and written to the new sheet successfully.\")\n```\n\n### Notes\n\n- Replace `'path/to/credentials.json'` with the actual path to your JSON credentials file.\n- Replace `\"Your Google Sheet Name\"` and `'Your Column Name'` with the actual names.\n- You can modify the data filtering logic to match your specific querying needs.\n\nThis example demonstrates how to interact with Google Sheets using Python. If you need to manipulate Google Docs, you might have to use the Google Docs API, but for most spreadsheet operations, the Sheets API should suffice."
    }
]