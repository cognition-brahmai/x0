[
    {
        "role": "user",
        "content": "How would you write a Python function to reverse the order of words in a sentence? For example, given the sentence \"He stopped walking and watched the sunset\", the output should be \"sunset the watched and walking stopped He\"."
    },
    {
        "role": "assistant",
        "content": "To reverse the order of words in a sentence in Python, you can create a function that splits the sentence into a list of words, reverses that list, and then joins the words back together into a string. Here's a simple implementation:\n\n```python\ndef reverse_words(sentence):\n    # Split the sentence into words\n    words = sentence.split()\n    # Reverse the list of words\n    reversed_words = words[::-1]\n    # Join the reversed list of words back into a string\n    reversed_sentence = ' '.join(reversed_words)\n    return reversed_sentence\n\n# Example usage\nsentence = \"He stopped walking and watched the sunset\"\nreversed_sentence = reverse_words(sentence)\nprint(reversed_sentence)\n```\n\nWhen you run this code with the given example sentence, it will output:\n\n```\nsunset the watched and walking stopped He\n```\n\nThis function works by using Python's string `split()` method to break the sentence into a list of words. The list slicing operation `[::-1]` is used to reverse the list. Finally, `join()` is used to concatenate the words back into a single string with spaces in between."
    }
]