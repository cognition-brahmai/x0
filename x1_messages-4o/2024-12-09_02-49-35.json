[
    {
        "role": "user",
        "content": "I'm trying to load a JSON file using the json.loads() function in Python, but I'm encountering an error: json.decoder.JSONDecodeError: Extra data: line 2 column 1 (char 190). Here is the code I'm using:\n\n```python\nimport json\n\naddrsfile = open(\"C:\\\\Users\\\\file.json\", \"r\")\naddrJson = json.loads(addrsfile.read())\naddrsfile.close()\nif addrJson:\n    print(\"yes\")\n```\n\nThe error message I receive is:\n\n```python\nTraceback (most recent call last):\n  File \"C:/Users/Mayur/Documents/WebPython/Python_WebServices/test.py\", line 9, in <module>\n    addrJson = json.loads(addrsfile.read())\n  File \"C:\\\\Users\\\\Mayur\\\\Anaconda3\\\\lib\\\\json\\\\__init__.py\", line 354, in loads\n    return _default_decoder.decode(s)\n  File \"C:\\\\Users\\\\Mayur\\\\Anaconda3\\\\lib\\\\json\\\\decoder.py\", line 342, in decode\n    raise JSONDecodeError(\"Extra data\", s, end)\njson.decoder.JSONDecodeError: Extra data: line 2 column 1 (char 190)\n```\n\nThe format of my JSON file is as follows:\n\n```json\n{\"name\": \"XYZ\", \"address\": \"54.7168,94.0215\", \"country_of_residence\": \"PQR\", \"countries\": \"LMN;PQRST\", \"date\": \"28-AUG-2008\", \"type\": null}\n{\"name\": \"OLMS\", \"address\": null, \"country_of_residence\": null, \"countries\": \"Not identified;No\", \"date\": \"23-FEB-2017\", \"type\": null}\n```\n\nCan someone please help me understand and resolve this issue?"
    },
    {
        "role": "assistant",
        "content": "The error you're encountering is due to the fact that your JSON file contains multiple JSON objects that are not wrapped in an array. The `json.loads()` function expects a single JSON object or an array of objects. In your file, each line is a separate JSON object, but they are not enclosed in a list.\n\nHere are a few ways to resolve this issue:\n\n### Option 1: Enclose the JSON objects in a list\n\nYou can modify your JSON file to enclose the objects in a list by adding square brackets and separating the objects with commas, like this:\n\n```json\n[\n    {\"name\": \"XYZ\", \"address\": \"54.7168,94.0215\", \"country_of_residence\": \"PQR\", \"countries\": \"LMN;PQRST\", \"date\": \"28-AUG-2008\", \"type\": null},\n    {\"name\": \"OLMS\", \"address\": null, \"country_of_residence\": null, \"countries\": \"Not identified;No\", \"date\": \"23-FEB-2017\", \"type\": null}\n]\n```\n\n### Option 2: Read the file line by line\n\nIf you can't modify the file, you can read each line as a separate JSON object. Here's how you can do it:\n\n```python\nimport json\n\nwith open(\"C:\\\\Users\\\\file.json\", \"r\") as addrsfile:\n    addrJsonList = []\n    for line in addrsfile:\n        addrJson = json.loads(line.strip())\n        addrJsonList.append(addrJson)\n\nif addrJsonList:\n    print(\"yes\")\n```\n\n### Option 3: Use `jsonlines` module\n\nIf you expect to work with newline-delimited JSON frequently, you might consider using the `jsonlines` module, which is specifically designed for handling JSON lines format.\n\nFirst, install the module:\n\n```bash\npip install jsonlines\n```\n\nThen use it as follows:\n\n```python\nimport jsonlines\n\nwith jsonlines.open(\"C:\\\\Users\\\\file.json\") as reader:\n    addrJsonList = [obj for obj in reader]\n\nif addrJsonList:\n    print(\"yes\")\n```\n\nAny of these methods will help you parse the JSON file correctly without encountering the `JSONDecodeError`."
    }
]