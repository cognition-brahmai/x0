[
    {
        "role": "user",
        "content": "I am trying to create a function in Python that can find a specific substring within a given string. How can I implement this functionality?"
    },
    {
        "role": "assistant",
        "content": "To create a function in Python that can find a specific substring within a given string, you can use the `in` keyword or the `find` method. Here's an example of how you can implement this functionality:\n\n```python\ndef find_substring(main_string, substring):\n    \"\"\"\n    This function checks if the substring is present in the main string.\n    Returns the starting index of the substring if found, otherwise returns -1.\n    \"\"\"\n    index = main_string.find(substring)\n    return index\n\n# Example usage\nmain_string = \"Hello, this is a sample string.\"\nsubstring = \"sample\"\n\nresult = find_substring(main_string, substring)\n\nif result != -1:\n    print(f\"The substring '{substring}' is found at index {result}.\")\nelse:\n    print(f\"The substring '{substring}' is not found in the main string.\")\n```\n\n### Explanation:\n\n- The `find_substring` function takes two parameters: `main_string` and `substring`.\n- It uses the `find` method of the string, which returns the lowest index of the substring if it is found, or `-1` if it is not found.\n- The function returns the index, which can be used to determine if the substring exists within the main string.\n- In the example usage, the function is tested with a sample string and substring, and it prints the appropriate message based on whether the substring is found.\n\nThis method is simple and effective for finding substrings in Python strings."
    }
]