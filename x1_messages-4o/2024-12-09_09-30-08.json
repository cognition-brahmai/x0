[
    {
        "role": "user",
        "content": "How can I write a Python function to update the value of a specific element in a given list?"
    },
    {
        "role": "assistant",
        "content": "To update the value of a specific element in a list in Python, you can write a function that takes the list, the index of the element you want to update, and the new value as arguments. Here\u2019s a simple example of how you can achieve this:\n\n```python\ndef update_list_element(my_list, index, new_value):\n    \"\"\"\n    Update the value of a specific element in a list.\n\n    Parameters:\n    my_list (list): The list containing the element to be updated.\n    index (int): The index of the element to update.\n    new_value: The new value to assign to the element.\n\n    Returns:\n    list: The updated list.\n    \"\"\"\n    try:\n        # Check if the index is within the bounds of the list\n        if 0 <= index < len(my_list):\n            my_list[index] = new_value\n        else:\n            print(\"Error: Index is out of bounds.\")\n    except TypeError:\n        print(\"Error: Provided index must be an integer.\")\n    \n    return my_list\n\n# Example usage:\nmy_list = [10, 20, 30, 40, 50]\nindex_to_update = 2\nnew_value = 100\n\nupdated_list = update_list_element(my_list, index_to_update, new_value)\nprint(updated_list)  # Output: [10, 20, 100, 40, 50]\n```\n\nIn this function:\n\n- We first check if the provided index is within the bounds of the list. If it is not, an error message is printed.\n- We also handle a potential `TypeError` if the index is not an integer.\n- If the index is valid, we update the element at the specified index with the new value.\n- Finally, the function returns the updated list."
    }
]