[
    {
        "role": "user",
        "content": "How can I obtain the last value of a DataFrame column without an index in pandas? Currently, I have a DataFrame created like this:\n```python\ndf = pd.DataFrame(np.random.randn(10,5), columns = ['a','b','c','d','e'])\n```\nAnd when I want to retrieve the last value in column 'e' by using `df['e'].tail(1)`, it returns a series with index 9. I just want to obtain the value as a number that I can work with directly. I also tried using `np.array(df['e'].tail(1))`, but this requires me to access the 0th element of it before I can really work with it. Is there a more direct or easier way to do this?"
    },
    {
        "role": "assistant",
        "content": "Certainly! To directly obtain the last value of a DataFrame column as a scalar without any index, you can use the `iloc` method. Here's how you can achieve that for your DataFrame:\n\n```python\nlast_value = df['e'].iloc[-1]\n```\n\nThis will give you the last value of the column 'e' directly as a scalar, allowing you to work with it without dealing with an index or an array. The `iloc[-1]` effectively selects the last element of the Series."
    }
]