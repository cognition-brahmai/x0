[
    {
        "role": "user",
        "content": "How can I convert a PIL Image.image object to a base64 string in Python? I have a base64 encoded image that I am trying to rotate at a 90 degree angle. After rotating the image, I am attempting to convert it back into a base64 string. However, I have not been successful in doing so. Here is the code I have implemented:\n\n```python\nimage_string = StringIO(base64.b64decode(base64_string_here))\nimage = Image.open(image_string)\nangle = 90\nrotated_image = image.rotate( angle, expand=1 )\n```\n\nI am looking for a way to convert this \"rotated_image\" back into a base64 string. The \"dir()\" of the \"rotated_image\" object contains the following:\n\n```python\n['_Image__transformer', '__doc__', '__getattr__', '__init__',\n'__module__', '__repr__', '_copy', '_dump', '_expand', '_makeself',\n'_new', 'category', 'convert', 'copy', 'crop', 'draft', 'filter',\n'format', 'format_description', 'fromstring', 'getbands', 'getbbox',\n'getcolors', 'getdata', 'getextrema', 'getim', 'getpalette',\n'getpixel', 'getprojection', 'histogram', 'im', 'info', 'load',\n'mode', 'offset', 'palette', 'paste', 'point', 'putalpha', 'putdata',\n'putpalette', 'putpixel', 'quantize', 'readonly', 'resize', 'rotate',\n'save', 'seek', 'show', 'size', 'split', 'tell', 'thumbnail',\n'tobitmap', 'tostring', 'transform', 'transpose', 'verify']\n```\n\nHow can I achieve this?"
    },
    {
        "role": "assistant",
        "content": "To convert a `PIL.Image` object back into a base64 string after rotating it, you can follow these steps. First, you need to save the rotated image to a `BytesIO` object instead of a file, and then encode the bytes of this object to a base64 string. Here's the complete code for doing that:\n\n```python\nfrom PIL import Image\nimport base64\nfrom io import BytesIO\n\n# Assuming base64_string_here contains the base64 encoded image\nimage_string = BytesIO(base64.b64decode(base64_string_here))\nimage = Image.open(image_string)\n\n# Rotate the image by 90 degrees\nangle = 90\nrotated_image = image.rotate(angle, expand=True)\n\n# Save the rotated image to a BytesIO object\nbuffered = BytesIO()\nrotated_image.save(buffered, format=\"PNG\")  # You can change the format if needed\n\n# Encode the BytesIO object to a base64 string\nrotated_base64_string = base64.b64encode(buffered.getvalue()).decode('utf-8')\n\n# Print or use the new base64 string\nprint(rotated_base64_string)\n```\n\nIn the above code:\n- `BytesIO` is used to handle the image data in memory.\n- The rotated image is saved to a `BytesIO` object using `rotated_image.save(buffered, format=\"PNG\")`. You can adjust the format to match the original image format if necessary (e.g., \"JPEG\" or \"PNG\").\n- The `base64.b64encode` function is used to encode the image data from the `BytesIO` object.\n- The `.decode('utf-8')` converts the base64 bytes to a string.\n\nThis will give you the base64 encoded string of the rotated image."
    }
]