[
    {
        "role": "user",
        "content": "How can I dynamically assign an active class to a link in Django based on the current page URL? I have a basic menu and I want to assign the active class to the link of the current page. I tried to do this by comparing the full path of the request with the URL of the views, but I'm having trouble because I can't nest two {% ... %} tags inside each other. Here's what I'm trying to do:\n\n```\n<ul class=\"nav navbar-nav\">\n  <li class=\"active\"><a href=\"{% url 'home' %}\">Home</a></li>\n  <li><a href=\"{% url 'about' %}\">About</a></li>\n</ul>\n```\n\nAnd here's the logic I'd like to use:\n\n```\n{% if request.get_full_path = \"{% url 'home' %}\" %}class=\"active\"{% endif %}\n{% if request.get_full_path = \"{% url 'about' %}\" %}class=\"active\"{% endif %}\n```\n\nCan you provide a solution for this?"
    },
    {
        "role": "assistant",
        "content": "To dynamically assign an \"active\" class to a link based on the current page URL in Django, you can use the `request` context in your template. However, you cannot directly nest template tags like you attempted. Instead, you can use a combination of Django template tags and filters to achieve this.\n\nHere's a step-by-step solution:\n\n1. **Ensure the Request Context is Available**: Make sure that the `request` context is available in your template. This is typically available if you are using Django's built-in `RequestContext` or `render()` function in your views. If it's not, you can explicitly pass it to your template.\n\n2. **Modify the Template**: Use the `{% url %}` tag to generate the links and compare the `request.path` with the URL patterns to add the \"active\" class conditionally.\n\nHere's how you can structure your template:\n\n```html\n<ul class=\"nav navbar-nav\">\n  <li class=\"{% if request.path == url 'home' %}active{% endif %}\"><a href=\"{% url 'home' %}\">Home</a></li>\n  <li class=\"{% if request.path == url 'about' %}active{% endif %}\"><a href=\"{% url 'about' %}\">About</a></li>\n  <!-- Add more items as needed -->\n</ul>\n```\n\n### Explanation:\n\n- **`request.path`**: This gives you the path of the current request, which you can compare with the URLs generated by `{% url 'name' %}`.\n\n- **Conditional Logic**: The `{% if %}` statement checks if the current path matches the URL of the link, and if so, adds the \"active\" class.\n\n- **Avoid Nesting Tags**: By using the `url` tag directly in the comparison, you avoid nesting `{% ... %}` tags.\n\n### Additional Notes:\n\n- **Request Context**: If you find that `request` is not available, make sure you are using the `render` shortcut in your views which automatically includes the request context, like so:\n  \n  ```python\n  from django.shortcuts import render\n\n  def my_view(request):\n      return render(request, 'my_template.html')\n  ```\n\n- **Named URLs**: Ensure your URL patterns have names set, as this allows you to use `{% url %}` conveniently.\n\nWith this setup, your navigation menu should correctly highlight the active link based on the current page URL."
    }
]