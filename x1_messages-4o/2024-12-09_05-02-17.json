[
    {
        "role": "user",
        "content": "I am using the latest version of matplotlib which automatically creates navigation buttons under the graph. However, I am only able to plot a single graph, which makes the 'Next' and 'Previous' navigation buttons useless. How can I plot multiple graphs such as sin() and cos() from 0 to 360 degrees and make use of these navigation buttons? Currently, my code looks like this:\n\n```python\nimport scipy\nfrom matplotlib import pyplot\n\nDataRange = range(0, 360)\nDataRange = map(scipy.deg2rad, DataRange)\nData1 = map(scipy.sin, DataRange)\nData2 = map(scipy.cos, DataRange)\npyplot.plot(Data1)\npyplot.show()   # <--- if I exclude this\npyplot.plot(Data2)\npyplot.show()\n```\n\nWith this code, the sin() graph is shown first and only after I close the window, the cos() graph is shown. If I exclude the first pyplot.show(), both graphs are shown in the same figure. How can I modify this so that the second graph is shown when I press the 'Next' button?"
    },
    {
        "role": "assistant",
        "content": "To utilize the navigation buttons effectively and plot multiple graphs in separate figures that can be navigated using the 'Next' and 'Previous' buttons, you can use the concept of subplots in a single figure with multiple axes. This way, each graph is plotted on a separate subplot, and you can navigate through them. Here's how you can modify your code to achieve this:\n\n```python\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport scipy\n\n# Convert range to radians\nDataRange = np.arange(0, 360)\nDataRange = np.deg2rad(DataRange)\n\n# Compute sin and cos data\nData1 = np.sin(DataRange)\nData2 = np.cos(DataRange)\n\n# Create a figure and subplots\nfig, axs = plt.subplots(2, 1)  # 2 rows, 1 column\n\n# Plot the first graph (sin)\naxs[0].plot(DataRange, Data1)\naxs[0].set_title('Sin Graph')\naxs[0].set_xlabel('Radians')\naxs[0].set_ylabel('sin(x)')\n\n# Plot the second graph (cos)\naxs[1].plot(DataRange, Data2)\naxs[1].set_title('Cos Graph')\naxs[1].set_xlabel('Radians')\naxs[1].set_ylabel('cos(x)')\n\n# Adjust layout\nplt.tight_layout()\n\n# Show the plots\nplt.show()\n```\n\n### Explanation:\n- **Subplots**: By using `plt.subplots()`, you create a grid of subplots within a single figure. In this case, `2, 1` creates two rows and one column of subplots.\n- **Navigation**: The navigation buttons will allow you to scroll up and down through the subplots using your mouse wheel, but they won't necessarily correspond to 'Next' and 'Previous' in this setup. The buttons are mainly for panning and zooming.\n- **Layout Adjustment**: `plt.tight_layout()` is used to automatically adjust subplot parameters to give specified padding.\n\nThis setup effectively organizes the plots within a single window, allowing you to compare them easily. If you want more interactive control (like switching between figures), you'd typically need a more sophisticated UI setup with callbacks."
    }
]