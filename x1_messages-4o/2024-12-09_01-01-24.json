[
    {
        "role": "user",
        "content": "I am working on a project in PyCharm where I need to use the krakenex module. I've imported it as follows:\n```python\nimport krakenex\n```\nCurrently, I have a version of krakenex in `/Users/x/Library/Python/3.6/lib/python/site-packages`. When I execute the script and use `print(krakenex)`, it displays the expected path. However, I want to prioritize using the modules from the packages I installed using `pipenv install krakenex`. How do I achieve this? Is it enough to add the path of the virtual environment to the sys path, or is there a more elegant way to set up pipenv in PyCharm?"
    },
    {
        "role": "assistant",
        "content": "To ensure that your project in PyCharm uses the `krakenex` module installed via `pipenv`, you need to configure PyCharm to use the virtual environment created by `pipenv`. Here's how you can set this up:\n\n1. **Ensure `pipenv` is Installed**: Make sure `pipenv` is installed on your system. You can install it via pip if it's not already installed:\n   ```bash\n   pip install pipenv\n   ```\n\n2. **Create a Pipenv Environment**: Navigate to your project directory in the terminal and set up a `pipenv` environment if you haven't already:\n   ```bash\n   pipenv install krakenex\n   ```\n\n3. **Locate the Virtual Environment**: You can find out where the virtual environment is located by running:\n   ```bash\n   pipenv --venv\n   ```\n\n4. **Configure PyCharm to Use Pipenv**:\n   - Open your project in PyCharm.\n   - Go to `File` > `Settings` (or `PyCharm` > `Preferences` on macOS).\n   - Navigate to `Project: <your_project_name>` > `Python Interpreter`.\n   - Click on the gear icon next to the Python interpreter dropdown and select `Add...`.\n   - Choose `Existing environment` and then click the `...` button to browse to the Python interpreter located in the `pipenv` virtual environment. It should be something like `/path/to/your/venv/bin/python`.\n   - Click `OK` to apply the changes.\n\n5. **Switch to the Pipenv Environment**: Make sure the interpreter for your project is now set to the one from the `pipenv` environment.\n\n6. **Install Packages with Pipenv**: Continue to add other packages using `pipenv` to ensure they are installed in the correct environment.\n\nThis setup will ensure that PyCharm uses the modules from the `pipenv` environment, including `krakenex`, rather than the global Python packages or any other installations on your system.\n\nBy following these steps, you don't need to manually modify the `sys.path`, and you can take full advantage of `pipenv`'s environment management within PyCharm."
    }
]