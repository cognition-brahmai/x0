[
    {
        "role": "user",
        "content": "I am working with Bash scripts and I want to check if a file does not exist. I currently have a script that checks if a file exists as follows:\n```bash\n#!/bin/bash\n\nFILE=$1     \nif [ -f $FILE ]; then\n   echo \"File $FILE exists.\"\nelse\n   echo \"File $FILE does not exist.\"\nfi\n```\nIs there a way to adjust this script to only check if a file does not exist?"
    },
    {
        "role": "assistant",
        "content": "Yes, you can adjust the script to specifically check if a file does not exist by modifying the condition within the `if` statement. You can use the `!` (not) operator to negate the condition. Here's how you can do it:\n\n```bash\n#!/bin/bash\n\nFILE=$1\nif [ ! -f \"$FILE\" ]; then\n   echo \"File $FILE does not exist.\"\nelse\n   echo \"File $FILE exists.\"\nfi\n```\n\nIn this modified script:\n\n- The `!` operator is used to negate the `-f` condition, thus checking if the file does not exist.\n- It's a good practice to enclose variables like `$FILE` in quotes (`\"$FILE\"`) to handle cases where the filename might contain spaces or special characters."
    }
]