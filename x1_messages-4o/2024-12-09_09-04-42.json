[
    {
        "role": "user",
        "content": "What is the code for a sorting algorithm that can be used to sort a list of integer elements?"
    },
    {
        "role": "assistant",
        "content": "Certainly! Here's an example of a simple sorting algorithm called the Bubble Sort, implemented in Python. This algorithm repeatedly steps through the list, compares adjacent elements, and swaps them if they are in the wrong order. The pass through the list is repeated until the list is sorted.\n\n```python\ndef bubble_sort(arr):\n    n = len(arr)\n    # Traverse through all elements in the list\n    for i in range(n):\n        # Last i elements are already in place\n        for j in range(0, n-i-1):\n            # Swap if the element found is greater than the next element\n            if arr[j] > arr[j+1]:\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n\n# Example usage\nnumbers = [64, 34, 25, 12, 22, 11, 90]\nbubble_sort(numbers)\nprint(\"Sorted list is:\", numbers)\n```\n\nIn this example, the `bubble_sort` function sorts the `numbers` list in ascending order. Bubble Sort is easy to understand and implement but not the most efficient for large datasets. For more efficient sorting, you might want to look into algorithms like Quick Sort or Merge Sort. Let me know if you need an example of those as well!"
    }
]