[
    {
        "role": "user",
        "content": "I am a beginner in Python and I'm working on a text game. I want to create an inventory system, but I'm having trouble printing out the dictionary in a pleasing way. Here's my current code:\n\n```python\ndef inventory():\n    for numberofitems in len(inventory_content.keys()):\n        inventory_things = list(inventory_content.keys())\n        inventory_amounts = list(inventory_content.values())\n        print(inventory_things[numberofitems])\n```\n\nCan someone guide me on how I can print a dictionary nicely in Python?"
    },
    {
        "role": "assistant",
        "content": "Certainly! It looks like you're iterating over the length of the dictionary keys but not using that correctly to access the items. Instead, you can iterate directly over the dictionary items to make it easier to print both keys and values nicely. Here's a revised version of your function:\n\n```python\ndef print_inventory(inventory_content):\n    print(\"Inventory:\")\n    for item, amount in inventory_content.items():\n        print(f\"{item}: {amount}\")\n\n# Example usage\ninventory_content = {\n    \"sword\": 1,\n    \"potion\": 5,\n    \"shield\": 1\n}\n\nprint_inventory(inventory_content)\n```\n\nIn this version, the `print_inventory` function takes a dictionary `inventory_content` as an argument. It then iterates over the dictionary items using `inventory_content.items()`, which provides a tuple of `(key, value)` for each item in the dictionary. This allows you to print each item and its corresponding amount in a formatted string.\n\nYou can further format the output according to your preferences, such as aligning text or adding additional details."
    }
]