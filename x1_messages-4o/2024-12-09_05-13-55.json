[
    {
        "role": "user",
        "content": "I am trying to add a global query using context processors in Django. However, I am encountering an issue where my 'foos' display correctly but my 'media_url' and other contexts are disappearing. Below is the process I followed:\n\nI created a processor.py in my app like this:\n```python\nfrom myproject.myapp.models import Foo\n\ndef foos(request):\n    return {'foos': Foo.objects.all()}\n```\nI then added this at the end of my settings.py:\n```python\nTEMPLATE_CONTEXT_PROCESSORS = ('myapp.processor.foos',)\n```\nI passed my view as:\n```python\ndef index_view(request):\n    return render_to_response('index.html', {}, context_instance=RequestContext(request))\n```\nIn my index.html template, I have:\n```html\n<select id=\"select_foo\">\n{% for foo in foos %}\n    <option value=\"/{{ foo.slug }}\">{{ foo.name }}</option>\n{% endfor %}\n</select>\n```\nAnd my URL is:\n```python\n(r'^$', 'myapp.views.index_view'),\n```\nCan someone help me understand why my 'media_url' and other contexts are gone and how I can fix this?"
    },
    {
        "role": "assistant",
        "content": "The issue you're encountering is due to the fact that you've overridden the `TEMPLATE_CONTEXT_PROCESSORS` setting in your `settings.py`. By doing so, you removed the default context processors that Django includes, which provide variables like `media_url`, `static`, and others.\n\nTo fix this, you need to include the default context processors along with your custom one. Here's how you can do it:\n\n1. First, ensure that you include all the default context processors along with your custom one in the `TEMPLATE_CONTEXT_PROCESSORS` setting. The default context processors for Django might vary slightly depending on the version, but generally, they include things like `django.template.context_processors.debug`, `django.template.context_processors.request`, `django.contrib.auth.context_processors.auth`, `django.contrib.messages.context_processors.messages`, and `django.template.context_processors.media`.\n\n2. Modify your `settings.py` to include these defaults:\n\n```python\nfrom django.conf import global_settings\n\nTEMPLATE_CONTEXT_PROCESSORS = global_settings.TEMPLATE_CONTEXT_PROCESSORS + (\n    'myapp.processor.foos',\n)\n```\n\nAlternatively, if you're using Django 1.8 or later, the context processors are specified within the `TEMPLATES` setting. You should modify it as follows:\n\n```python\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n                'django.template.context_processors.media',\n                'django.template.context_processors.static',\n                'django.template.context_processors.tz',\n                'myapp.processor.foos',\n            ],\n        },\n    },\n]\n```\n\nBy including these default context processors, you ensure that the standard context variables like `media_url` are available in your templates, along with your custom context variable `foos`."
    }
]