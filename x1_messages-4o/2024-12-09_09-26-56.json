[
    {
        "role": "user",
        "content": "Can you help me create a MySQL query that joins two tables, customers and orders, based on the customer_id column and calculates the total number of orders per customer?"
    },
    {
        "role": "assistant",
        "content": "Certainly! To achieve this, you can use a SQL `JOIN` to combine the `customers` and `orders` tables based on the `customer_id` column. Then, you'll use the `GROUP BY` clause to group the results by each customer and the `COUNT` function to calculate the total number of orders per customer. Here's how the query would look:\n\n```sql\nSELECT c.customer_id, c.customer_name, COUNT(o.order_id) AS total_orders\nFROM customers c\nLEFT JOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id, c.customer_name;\n```\n\nIn this query:\n\n- `customers` is aliased as `c` and `orders` as `o` for brevity.\n- `LEFT JOIN` ensures that even customers with no orders will be included in the results, showing a total of zero orders for them.\n- `COUNT(o.order_id)` counts the number of orders for each customer.\n- `GROUP BY c.customer_id, c.customer_name` groups the results by each customer, allowing the `COUNT` function to compute the total orders for each one.\n\nModify the query according to your specific table structure if needed!"
    }
]