[
    {
        "role": "user",
        "content": "I am using the Counter function in Python to count the occurrences of items in a list, stored in the variable \"category_list\". I am having difficulty formatting the output. Currently, when I run the following code:\n\n```python\ncategory = Counter(category_list)\nprint(category)\n```\n\nI get the output as:\n\n```python\nCounter({'a': 8508, 'c': 345, 'w': 60})\n```\n\nHowever, I want the output to be displayed in the following format:\n\n```python\na 8508\nc 345\nw 60\n```\n\nI tried iterating over the Counter object to achieve this, but I couldn't succeed. Can someone guide me on how to print the output of the Counter operation in the desired format?"
    },
    {
        "role": "assistant",
        "content": "Certainly! You can achieve the desired output format by iterating over the `Counter` object and printing each key-value pair on a new line. Here's how you can do it:\n\n```python\nfrom collections import Counter\n\ncategory_list = ['a', 'b', 'a', 'c', 'a', 'b', 'a', 'w', 'c']  # Example list\ncategory = Counter(category_list)\n\nfor item, count in category.items():\n    print(f\"{item} {count}\")\n```\n\nIn this code snippet, the `for` loop iterates over each item in the `category` Counter. The `items()` method returns pairs of keys and their counts, which are then printed in the desired format using an f-string. This will produce output like:\n\n```\na 4\nb 2\nc 2\nw 1\n```\n\nThis should give you the format you want, with each item and its count on a separate line."
    }
]