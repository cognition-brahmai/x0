[
    {
        "role": "user",
        "content": "I am trying to display my CPU usage dynamically on a webpage, and I don't want to reload the page to see a new value. I have figured out how to get the CPU usage in Python and currently I am rendering a template with the value using Flask. I have the following Flask route defined:\n\n```python\n@app.route('/show_cpu')\ndef show_cpu():\n    cpu = getCpuLoad()\n    return render_template('show_cpu.html', cpu=cpu)\n```\nHow can I continually update a page with a value from Flask without reloading the page?"
    },
    {
        "role": "assistant",
        "content": "To dynamically update the CPU usage on a webpage without reloading the page, you can use JavaScript to periodically fetch new data from your Flask server. This can be achieved using AJAX requests. Here\u2019s a step-by-step guide to implement this:\n\n1. **Create an endpoint to serve the CPU usage data in JSON format:**\n\n   You need a separate endpoint that returns just the CPU usage as JSON. This endpoint will be called by your JavaScript code.\n\n   ```python\n   @app.route('/cpu_data')\n   def cpu_data():\n       cpu = getCpuLoad()\n       return jsonify(cpu=cpu)\n   ```\n\n2. **Modify your HTML template to include JavaScript for fetching data:**\n\n   Use JavaScript with `fetch` (or `XMLHttpRequest`) to periodically request the CPU usage data from your Flask server and update the page. Here's a simple example using `fetch`:\n\n   ```html\n   <!DOCTYPE html>\n   <html lang=\"en\">\n   <head>\n       <meta charset=\"UTF-8\">\n       <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n       <title>CPU Usage</title>\n   </head>\n   <body>\n       <h1>CPU Usage</h1>\n       <div id=\"cpu-usage\">Loading...</div>\n\n       <script>\n           function updateCpuUsage() {\n               fetch('/cpu_data')\n                   .then(response => response.json())\n                   .then(data => {\n                       document.getElementById('cpu-usage').textContent = `CPU Usage: ${data.cpu}%`;\n                   })\n                   .catch(error => console.error('Error fetching CPU data:', error));\n           }\n\n           // Update the CPU usage every 5 seconds\n           setInterval(updateCpuUsage, 5000);\n\n           // Initial call to update the CPU usage\n           updateCpuUsage();\n       </script>\n   </body>\n   </html>\n   ```\n\n3. **Explanation of the JavaScript code:**\n\n   - The `updateCpuUsage` function uses the `fetch` API to make an AJAX request to the `/cpu_data` endpoint.\n   - When the response is received, it updates the content of the `div` with the id `cpu-usage` to display the current CPU usage.\n   - `setInterval(updateCpuUsage, 5000);` is used to call the `updateCpuUsage` function every 5 seconds (5000 milliseconds), which keeps your CPU usage display updated.\n\n4. **Run your Flask application:**\n\n   Make sure your Flask application is running, and navigate to the page where you want to display the CPU usage. You should see the CPU usage updating dynamically every few seconds.\n\nThis approach uses JavaScript to keep the page updated with the latest CPU usage figures from the server without needing to reload the page."
    }
]