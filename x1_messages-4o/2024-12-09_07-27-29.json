[
    {
        "role": "user",
        "content": "I am currently using a Python script to launch a downloadable file from a URL. I am wondering if there is a way to make Python display the download progress instead of launching the browser?"
    },
    {
        "role": "assistant",
        "content": "Yes, you can download files and display the download progress directly in Python without launching a browser. One way to achieve this is by using the `requests` library in combination with the `tqdm` library for displaying the progress bar. Here's how you can do it:\n\nFirst, you need to install the required libraries, if you haven't already:\n\n```bash\npip install requests tqdm\n```\n\nThen, you can use the following script to download a file and display the progress:\n\n```python\nimport requests\nfrom tqdm import tqdm\n\ndef download_file(url, filename):\n    # Send a HTTP request to the URL\n    response = requests.get(url, stream=True)\n    \n    # Get the total file size from headers\n    total_size_in_bytes = int(response.headers.get('content-length', 0))\n    block_size = 1024  # 1 Kilobyte\n\n    # Create a progress bar using tqdm\n    progress_bar = tqdm(total=total_size_in_bytes, unit='iB', unit_scale=True)\n\n    with open(filename, 'wb') as file:\n        for data in response.iter_content(block_size):\n            # Write data to file\n            file.write(data)\n            # Update the progress bar\n            progress_bar.update(len(data))\n    \n    progress_bar.close()\n\n    if total_size_in_bytes != 0 and progress_bar.n != total_size_in_bytes:\n        print(\"ERROR: Something went wrong\")\n    else:\n        print(\"Download completed successfully\")\n\n# Example usage\nurl = 'https://example.com/file.zip'\nfilename = 'file.zip'\ndownload_file(url, filename)\n```\n\n### Explanation:\n\n- **requests.get(url, stream=True):** This sends a GET request to the specified URL and streams the response content. Streaming is used to handle large files efficiently.\n\n- **response.iter_content(block_size):** Iterates over the response data in chunks, allowing you to download the file in blocks.\n\n- **tqdm(total=total_size_in_bytes):** Initializes a progress bar with the total file size, displaying the progress as data is downloaded.\n\n- **file.write(data):** Writes the downloaded data to a local file.\n\nThis script will download the file from the given URL and display the download progress in the console. Make sure to replace `url` and `filename` with your specific URL and desired file name."
    }
]