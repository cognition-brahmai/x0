[
    {
        "role": "user",
        "content": "I'm new to Flask and I'm trying to upload a file using an AJAX call to the server. I have implemented a file upload in my HTML as shown below:\n\n```html\n<form action=\"\" method=post enctype=\"multipart/form-data\" id=\"testid\">\n <table>\n  <tr>\n   <td>\n     <label>Upload</label>\n   </td>\n   <td>\n     <input id=\"upload_content_id\" type=\"file\" name=\"upload_file\" multiple>\n     <input type=\"button\" name=\"btn_uplpad\" id=\"btn_upload_id\" class=\"btn-upload\" value=\"Upload\"/>\n   </td>\n  </tr>\n </table>\n</form>\n```\n\nAnd I have an AJAX handler as follows:\n\n```javascript\n$(document).ready(function() {\n    $(\"#btn_upload_id\" ).click(function() {           \n        $.ajax({\n            type : \"POST\",\n            url : \"/uploadajax\",\n            cache: false,\n            async: false,\n            success : function (data) {},\n            error: function (XMLHttpRequest, textStatus, errorThrown) {}\n        });\n    });\n});\n```\n\nHowever, I'm not sure how to access the uploaded file (not just the file name) from this input:\n\n```html\n<input id=\"upload_content_id\" type=\"file\" name=\"upload_file\" multiple>\n```\n\nAdditionally, I'm uncertain about how to read the file from the handler I have written:\n\n```python\n@app.route('/uploadajax', methods = ['POST'])\ndef upldfile():\n    if request.method == 'POST':\n        file_val = request.files['file']\n```\n\nHow can I save the uploaded file in a folder using Flask?"
    },
    {
        "role": "assistant",
        "content": "To handle file uploads using AJAX with Flask, you need to make a few adjustments to your JavaScript and Flask code. Here's a step-by-step guide on how to achieve this:\n\n### HTML and JavaScript\n\nFirst, ensure that you're actually sending the file data via AJAX. You need to use a `FormData` object to encapsulate the file and send it to the server.\n\n```html\n<form id=\"testid\">\n    <table>\n        <tr>\n            <td>\n                <label>Upload</label>\n            </td>\n            <td>\n                <input id=\"upload_content_id\" type=\"file\" name=\"upload_file\" multiple>\n                <input type=\"button\" name=\"btn_upload\" id=\"btn_upload_id\" class=\"btn-upload\" value=\"Upload\"/>\n            </td>\n        </tr>\n    </table>\n</form>\n```\n\nUpdate your AJAX call to use `FormData`:\n\n```javascript\n$(document).ready(function() {\n    $(\"#btn_upload_id\").click(function() {\n        var formData = new FormData();\n        var files = $('#upload_content_id')[0].files;\n\n        // Append each file to the form data\n        for (var i = 0; i < files.length; i++) {\n            formData.append('upload_file', files[i]);\n        }\n\n        $.ajax({\n            type: \"POST\",\n            url: \"/uploadajax\",\n            data: formData,\n            processData: false,\n            contentType: false,\n            success: function(data) {\n                console.log(\"Upload successful!\");\n            },\n            error: function(XMLHttpRequest, textStatus, errorThrown) {\n                console.log(\"Upload failed.\");\n            }\n        });\n    });\n});\n```\n\n### Flask App\n\nIn your Flask app, you need to handle the file upload by accessing `request.files`. You can then save the file to a directory using the `save` method.\n\n```python\nfrom flask import Flask, request, jsonify\nimport os\n\napp = Flask(__name__)\n\n# Ensure this path exists or create it\nUPLOAD_FOLDER = 'uploads'\nos.makedirs(UPLOAD_FOLDER, exist_ok=True)\n\n@app.route('/uploadajax', methods=['POST'])\ndef upldfile():\n    if 'upload_file' not in request.files:\n        return jsonify({\"error\": \"No file part in the request\"}), 400\n\n    files = request.files.getlist('upload_file')\n\n    for file in files:\n        if file.filename == '':\n            return jsonify({\"error\": \"No selected file\"}), 400\n\n        # Save the file to the specified directory\n        file_path = os.path.join(UPLOAD_FOLDER, file.filename)\n        file.save(file_path)\n    \n    return jsonify({\"success\": \"File(s) successfully uploaded\"}), 200\n\nif __name__ == '__main__':\n    app.run(debug=True)\n```\n\n### Key Points\n\n1. **FormData**: Use `FormData` in JavaScript to handle file uploads. This allows you to append files and other data to your request.\n\n2. **File Handling in Flask**: Use `request.files.getlist('upload_file')` to handle multiple files. You can iterate over these files and save them as needed.\n\n3. **File Saving**: Use the `save` method to save each file to your desired location on the server. Make sure the folder exists or handle folder creation in your code.\n\n4. **Error Handling**: Add appropriate error handling to manage cases where no file is uploaded or an invalid file is selected.\n\nThis setup should allow you to upload files via AJAX and process them on your Flask server."
    }
]