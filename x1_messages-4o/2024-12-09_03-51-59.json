[
    {
        "role": "user",
        "content": "How can I render a dynamically rotatable 3D plot in IPython or Jupyter Notebook on Mac OSX 10.10.5? I have been able to reproduce the example code for a 3D scatter plot from the matplotlib website but the plot renders as a static image. I can't click on the graph and dynamically rotate to view the 3D plotted data. I've achieved the static 3D plot using (a) ipython from within Terminal, (b) ipython notebook from within terminal, and (c) ipython notebook launched from the Anaconda launcher. But, I think I am missing some very basic step. I have tried using \"%matplotlib inline\" as the first line (as shown in the tutorial), but it doesn't make the graph dynamic.\n\nHere's the example code I've been using, which generates a static 3D plot:\n\n```\n%matplotlib inline  \nimport pandas as pd\nimport numpy as np\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\n\npd.set_option('html',False)\npd.set_option('max_columns',30)\npd.set_option('max_rows',10)\n\ndef randrange(n, vmin, vmax):\n    return (vmax-vmin)*np.random.rand(n) + vmin\n\nfig = plt.figure()\nax = fig.add_subplot(111, projection='3d')\nn = 100\nfor c, m, zl, zh in [('r', 'o', -60, -25), ('b', '^', -30, -5)]:\n    xs = randrange(n, 23, 50)\n    ys = randrange(n, 0, 100)\n    zs = randrange(n, zl, zh)\n    ax.scatter(xs, ys, zs, c=c, marker=m)\n\nax.set_xlabel('X Label')\nax.set_ylabel('Y Label')\nax.set_zlabel('Z Label')\n\nplt.show()\n```\n\nI have looked up the Python 3.3.6 documentation, section 25.1 which mentions the tkinter package (the standard Python interface to the Tk GUI toolkit). Is this relevant to my problem?"
    },
    {
        "role": "assistant",
        "content": "To render a dynamically rotatable 3D plot in Jupyter Notebook, you need to use a different backend for Matplotlib that supports interactive plots. The `%matplotlib inline` magic command renders static images, which is why your plot is not interactive. For interactive 3D plots, you can use `%matplotlib notebook` or `%matplotlib widget`. Here's how you can modify your code:\n\n1. Use `%matplotlib notebook` or `%matplotlib widget` at the start of your notebook to enable interactive plotting.\n2. Ensure that you have the necessary packages installed, which include `ipympl` for `%matplotlib widget`.\n\nHere's how you can adjust your code:\n\n```python\n# Use one of the following\n# %matplotlib notebook \n%matplotlib widget \n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\n\ndef randrange(n, vmin, vmax):\n    return (vmax-vmin) * np.random.rand(n) + vmin\n\nfig = plt.figure()\nax = fig.add_subplot(111, projection='3d')\nn = 100\nfor c, m, zl, zh in [('r', 'o', -60, -25), ('b', '^', -30, -5)]:\n    xs = randrange(n, 23, 50)\n    ys = randrange(n, 0, 100)\n    zs = randrange(n, zl, zh)\n    ax.scatter(xs, ys, zs, c=c, marker=m)\n\nax.set_xlabel('X Label')\nax.set_ylabel('Y Label')\nax.set_zlabel('Z Label')\n\nplt.show()\n```\n\n### Additional Steps:\n- **Installing ipympl**: If you opt for `%matplotlib widget`, you will need to install the `ipympl` package. You can install it using pip:\n\n  ```bash\n  pip install ipympl\n  ```\n\n- **Jupyter Extensions**: If you face issues with `%matplotlib widget`, ensure that Jupyter extensions are installed and enabled. You can check and install them with:\n\n  ```bash\n  jupyter nbextension enable --py widgetsnbextension --sys-prefix\n  ```\n\n- **Backend Support**: Make sure your Jupyter Notebook is running on a platform that supports the interactive backend, which should be fine on Mac OSX.\n\nAfter making these changes, your 3D plot should be interactive, allowing you to rotate it dynamically within the Jupyter Notebook."
    }
]