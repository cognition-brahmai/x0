[
    {
        "role": "user",
        "content": "How can I use iterrows in Python and Pandas to access a column in a dataframe? I am trying to iterate over rows and access a column using row['COL_NAME'] but I am getting an error: TypeError: tuple indices must be integers, not str. The dataframe column names are as follows:\n\n```python\nprint df\nInt64Index: 152 entries, 0 to 151\nData columns:\nDate          152  non-null values\nTime          152  non-null values\nTime Zone     152  non-null values\nCurrency      152  non-null values\nEvent         152  non-null values\nImportance    152  non-null values\nActual        127  non-null values\nForecast      86  non-null values\nPrevious      132  non-null values\ndtypes: object(9)\n\nfor row in df.iterrows():\n    print row['Date']\n\nTraceback (most recent call last):\n  File \"/home/ubuntu/workspace/calandar.py\", line 34, in &lt;module&gt;\n    print row['Date']\nTypeError: tuple indices must be integers, not str\n```\n\nWhen I print one row, it shows as follows:\n\n```python\n(0, Date                                                 Sun Apr 13\nTime                                                      17:30\nTime Zone                                                   GMT\nCurrency                                                    USD\nEvent         USD Fed's Stein Speaks on Financial Stability ...\nImportance                                                  Low\nActual                                                      NaN\nForecast                                                    NaN\nPrevious                                                    NaN\nName: 0)\n```\n\nWhat am I doing wrong and how can I fix it?"
    },
    {
        "role": "assistant",
        "content": "The error you're encountering is due to the way you're unpacking the tuples returned by the `iterrows()` method. When you use `iterrows()`, it returns an iterator yielding index and row data as a tuple. Therefore, you need to unpack the tuple into two variables: the index and the row itself. Here's how you can do it:\n\n```python\nimport pandas as pd\n\n# Example DataFrame\ndf = pd.DataFrame({\n    'Date': ['Sun Apr 13', 'Mon Apr 14', 'Tue Apr 15'],\n    'Time': ['17:30', '18:00', '19:00'],\n    'Time Zone': ['GMT', 'GMT', 'GMT'],\n    'Currency': ['USD', 'USD', 'USD'],\n    'Event': [\"Event1\", \"Event2\", \"Event3\"],\n    'Importance': ['Low', 'Medium', 'High']\n})\n\n# Iterate over the rows using iterrows()\nfor index, row in df.iterrows():\n    print(row['Date'])  # Access the 'Date' column of the row\n```\n\n### Explanation:\n\n- **Tuple Unpacking**: The `iterrows()` method returns a tuple of `(index, Series)` for each row in the DataFrame. You need to unpack it into two variables: `index` and `row`.\n\n- **Accessing Row Data**: After unpacking, `row` is a Pandas Series object representing the row data, and you can access its elements using the column names like `row['Date']`.\n\nThis should fix the `TypeError` you're encountering, and allow you to iterate over the DataFrame while accessing the desired columns."
    }
]