[
    {
        "role": "user",
        "content": "How can I correctly add line breaks to an email sent using Python's smtplib library? I have written a script that writes a message to a text file and also sends it as an email. The line breaks appear correctly in the text file, but the email appears all in one line. I currently add line breaks with `\\n`, which works for the text file but not for the email. Here is the code I am using:\n\n```python\nimport smtplib, sys\nimport traceback\ndef send_error(sender, recipient, headers, body):\n\n    SMTP_SERVER = 'smtp.gmail.com'\n    SMTP_PORT = 587\n    session = smtplib.SMTP('smtp.gmail.com', 587)\n    session.ehlo()\n    session.starttls()\n    session.ehlo\n    session.login(sender, 'my password')\n    send_it = session.sendmail(sender, recipient, headers + \"\\r\\n\\r\\n\" +  body)\n    session.quit()\n    return send_it\n\n\nSMTP_SERVER = 'smtp.gmail.com'\nSMTP_PORT = 587\nsender = 'sender_id@gmail.com'\nrecipient = 'recipient_id@yahoo.com'\nsubject = 'report'\nbody = \"Dear Student, \\n Please send your report\\n Thank you for your attention\"\nopen('student.txt', 'w').write(body) \n\nheaders = [\"From: \" + sender,\n               \"Subject: \" + subject,\n               \"To: \" + recipient,\n               \"MIME-Version: 1.0\",\n               \"Content-Type: text/html\"]\nheaders = \"\\r\\n\".join(headers)\nsend_error(sender, recipient, headers, body)\n```"
    },
    {
        "role": "assistant",
        "content": "To ensure that line breaks are correctly handled in the email, make sure that the email content is properly formatted according to the MIME standards. Since you're sending a plain text message, you should use the `Content-Type: text/plain` header instead of `text/html`. Additionally, it's important to use `\\r\\n` for line breaks in email headers and bodies, as this is the standard for SMTP.\n\nHere's how you can modify your code to correctly display line breaks in the email:\n\n```python\nimport smtplib\n\ndef send_error(sender, recipient, headers, body):\n    SMTP_SERVER = 'smtp.gmail.com'\n    SMTP_PORT = 587\n    session = smtplib.SMTP(SMTP_SERVER, SMTP_PORT)\n    session.ehlo()\n    session.starttls()\n    session.ehlo()\n    session.login(sender, 'my password')\n    send_it = session.sendmail(sender, recipient, headers + \"\\r\\n\\r\\n\" + body)\n    session.quit()\n    return send_it\n\nSMTP_SERVER = 'smtp.gmail.com'\nSMTP_PORT = 587\nsender = 'sender_id@gmail.com'\nrecipient = 'recipient_id@yahoo.com'\nsubject = 'report'\nbody = \"Dear Student,\\r\\nPlease send your report.\\r\\nThank you for your attention.\"\n\n# Write to the text file\nwith open('student.txt', 'w') as f:\n    f.write(body)\n\nheaders = [\n    \"From: \" + sender,\n    \"Subject: \" + subject,\n    \"To: \" + recipient,\n    \"MIME-Version: 1.0\",\n    \"Content-Type: text/plain; charset=utf-8\"\n]\nheaders = \"\\r\\n\".join(headers)\n\nsend_error(sender, recipient, headers, body)\n```\n\n### Key Changes:\n\n1. **Content-Type**: Changed from `text/html` to `text/plain` because you're sending plain text. If you want to send HTML content, then you'd format the body as HTML and use `text/html`.\n\n2. **Line Breaks**: Use `\\r\\n` for line breaks in both the headers and the body to adhere to SMTP standards.\n\n3. **File Writing**: Used a `with` statement to open the file, which ensures that the file is properly closed after writing.\n\nThese changes should help display the line breaks correctly in the email."
    }
]