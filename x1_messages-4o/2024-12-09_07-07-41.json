[
    {
        "role": "user",
        "content": "I have a Python library that I haven't updated to work with Python 3 yet. In the `setup.py` of my library, I tried to restrict the allowable version of the Python interpreter by adding `install_requires=['python<3']`. However, `pip` tries to download and install Python 2.7.3, which is already the installed version. How can I specify my library dependency on a particular range of Python interpreter versions? Should I add a `Programming Language :: Python :: 2 :: Only` tag, and will this prevent installation under Python 3? How can I restrict the minimum version to Python 2.6? I'm looking for a solution that works universally, but if it only works in `pip` and doesn't cause `easy_install` to choke, that would be acceptable."
    },
    {
        "role": "assistant",
        "content": "To properly specify the Python version compatibility for your library, you'll want to use the `python_requires` argument in your `setup.py` file. This is the recommended way to specify the versions of Python that your package is compatible with. The `install_requires` argument is actually used for specifying dependencies on other packages, not the Python version itself.\n\nHere's how you can specify that your library is only compatible with Python 2.6 through 2.7:\n\n```python\nfrom setuptools import setup\n\nsetup(\n    name='your-library-name',\n    version='your-version',\n    # other arguments...\n    python_requires='>=2.6, <3',\n    classifiers=[\n        'Programming Language :: Python :: 2',\n        'Programming Language :: Python :: 2.6',\n        'Programming Language :: Python :: 2.7',\n        'Programming Language :: Python :: 2 :: Only',\n    ],\n    # other arguments...\n)\n```\n\n### Explanation:\n\n1. **`python_requires`**: This specifies the versions of Python that your package supports. By setting it to `'>=2.6, <3'`, you indicate that your package is compatible with any Python version starting from 2.6 up to, but not including, 3.0.\n\n2. **Classifiers**: These are metadata that can be used by repositories like PyPI to categorize your package. Adding `'Programming Language :: Python :: 2 :: Only'` helps communicate that your package is intended only for Python 2.\n\n3. **Installation Tools**: `python_requires` is supported by `pip` and will prevent installation on incompatible Python versions. However, `easy_install` does not respect `python_requires`, and there is not much you can do to enforce it there, as `easy_install` is deprecated and no longer actively maintained.\n\nBy using `python_requires`, `pip` will automatically check the Python version before attempting installation, making it a robust solution for specifying your library's compatibility range."
    }
]