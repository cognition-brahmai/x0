[
    {
        "role": "user",
        "content": "Why does the Python function I have written display 'None' in the output? I've written the function as follows:\n\n```python\ndef lyrics():\n    print \"The very first line\"\nprint lyrics()\n```\nAfter I run the function, the output is:\n```python\nThe very first line\nNone\n```\nWhy is 'None' being displayed in the output?"
    },
    {
        "role": "assistant",
        "content": "The reason you're seeing `None` in the output is because of the line `print lyrics()`. Here's a breakdown of what's happening:\n\n1. When you call `lyrics()`, the function executes and prints `\"The very first line\"`. However, the function `lyrics()` itself does not have a return statement, which means it implicitly returns `None`.\n\n2. When you do `print lyrics()`, you are printing the return value of the `lyrics()` function, which is `None`. That's why you see `None` in the output.\n\nTo fix this and avoid printing `None`, you should call the function without using `print`, like this:\n\n```python\ndef lyrics():\n    print(\"The very first line\")\n\nlyrics()\n```\n\nThis will print only `\"The very first line\"`, without the `None` appearing in the output. Additionally, note that in Python 3, `print` is a function and should be used with parentheses, so if you're using Python 3, make sure to use `print(\"The very first line\")`."
    }
]