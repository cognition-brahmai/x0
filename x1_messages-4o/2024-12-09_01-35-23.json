[
    {
        "role": "user",
        "content": "How can I URL decode a string in Python 3? I have a string like \"id%253D184ff84d27c3613d%26quality%3Dmedium\" and I want to decode it twice to get \"id=184ff84d27c3613d&amp;quality=medium\"."
    },
    {
        "role": "assistant",
        "content": "To URL decode a string in Python 3, you can use the `urllib.parse` module, which provides the `unquote` function to decode percent-encoded characters in a URL.\n\nSince you need to decode the string twice to achieve the desired result, you'll want to call `unquote` twice. Here's how you can do it:\n\n```python\nimport urllib.parse\n\nencoded_string = \"id%253D184ff84d27c3613d%26quality%3Dmedium\"\n\n# First decoding\nfirst_decoded = urllib.parse.unquote(encoded_string)\n\n# Second decoding\nsecond_decoded = urllib.parse.unquote(first_decoded)\n\nprint(second_decoded)\n```\n\nThis will output:\n\n```\nid=184ff84d27c3613d&quality=medium\n```\n\nMake sure to import the `urllib.parse` module, and apply `unquote` twice to achieve the double decoding needed for your specific string."
    }
]