[
    {
        "role": "user",
        "content": "What is the optimal method to split a string based on the first occurrence of a specific delimiter? For instance, if I have a string like \"123mango abcd mango kiwi peach\", how can I split it on the first occurrence of \"mango\" to get \"abcd mango kiwi peach\"?"
    },
    {
        "role": "assistant",
        "content": "To split a string based on the first occurrence of a specific delimiter, you can use the `split` method in Python with an additional argument to limit the number of splits. Here's how you can do it:\n\n```python\n# Your original string\noriginal_string = \"123mango abcd mango kiwi peach\"\n\n# Use the split method with the maxsplit parameter set to 1\nsplit_result = original_string.split(\"mango\", 1)\n\n# The result is a list, where split_result[1] will give you the desired part\nif len(split_result) > 1:\n    result = split_result[1]\nelse:\n    result = \"\"\n\n# Output the result\nprint(result.strip())\n```\n\nThis code will output `\"abcd mango kiwi peach\"`. The `split` method splits the string at the delimiter, and the `maxsplit` parameter ensures that it only splits at the first occurrence. The `strip()` function is used to remove any leading or trailing whitespace from the resulting string."
    }
]