[
    {
        "role": "user",
        "content": "I am using the Python requests 1.2.3 library and trying to add a cookie to an existing cookiejar. Every time I attempt to add a new cookie, the data in the jar gets munged for the new cookie, with keys missing, values missing or matched to incorrect keys. I'm unsure if this is a Request library bug or an error in how I'm sending the cookie. Here is the code I'm using:\n\n```python\nmy_cookie = {\n    'domain':'www.mydomain.com',\n    'expires':None,\n    'name':'COOKIE_NAME',\n    'path':'/',\n    'value':'the cookie works',\n    'version':0\n}\n\ns = requests.Session()\nrequests.utils.add_dict_to_cookiejar(s.cookies, my_cookie)\n```\n\nThis results in a bad cookie in the cookiejar. Is the cookie being formatted correctly? Any suggestions?"
    },
    {
        "role": "assistant",
        "content": "The issue you're encountering is related to how the `add_dict_to_cookiejar` function is handling the dictionary you're passing. When you add a cookie to a `RequestsCookieJar`, you need to do it in a way that mimics how a browser would store cookies. The `add_dict_to_cookiejar` function is typically used for simple key-value pairs, not for adding cookies with detailed attributes like domain, path, and expires.\n\nTo add a cookie with specific attributes to a `RequestsCookieJar`, you can use the `set` method of the cookie jar. Here's how you can do it:\n\n```python\nimport requests\nfrom requests.cookies import create_cookie\n\n# Create a cookie with the desired attributes\nmy_cookie = create_cookie(\n    domain='www.mydomain.com',\n    name='COOKIE_NAME',\n    value='the cookie works',\n    path='/',\n    expires=None,\n    version=0\n)\n\n# Create a session\ns = requests.Session()\n\n# Add the cookie to the session's cookie jar\ns.cookies.set_cookie(my_cookie)\n\n# Verify the cookie is added correctly\nprint(s.cookies)\n```\n\nIn this code, we use the `create_cookie` function from `requests.cookies` to create a cookie object and then add it to the session's cookie jar using `set_cookie`. This approach ensures that all attributes of the cookie are correctly set in the cookie jar."
    }
]