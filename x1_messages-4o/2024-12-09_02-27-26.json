[
    {
        "role": "user",
        "content": "How can I compare two lists in Python, where each list contains a number of dictionaries? Each dictionary has a unique key, and there is a match for each dictionary from the first list in the second list (i.e. a dictionary with a unique key exists in the other list). However, other elements within the matching dictionaries may vary. For example:\n\n```python\nlist_1 = [\n            {\n                'unique_id': '001',\n                'key1': 'AAA',\n                'key2': 'BBB',\n                'key3': 'EEE'\n             },\n             {\n                'unique_id': '002',\n                'key1': 'AAA',\n                'key2': 'CCC',\n                'key3': 'FFF'\n             }\n         ]\n\n list_2 = [\n             {\n                'unique_id': '001',\n                'key1': 'AAA',\n                'key2': 'DDD',\n                'key3': 'EEE'\n             },\n             {\n                'unique_id': '002',\n                'key1': 'AAA',\n                'key2': 'CCC',\n                'key3': 'FFF'\n             }\n         ]\n```\n\nI aim to compare all elements of two matching dictionaries, and if any of the elements are not equal, I would like to print the unequal elements. How can I achieve this in Python?"
    },
    {
        "role": "assistant",
        "content": "To compare two lists of dictionaries and find any differences in the matching dictionaries, you can use Python's dictionary capabilities to map the unique identifiers to their corresponding dictionaries. Then, iterate through the dictionaries and compare the values for each key. Here's a step-by-step approach to achieve this:\n\n```python\ndef compare_lists(list_1, list_2):\n    # Create a mapping from unique_id to dictionary for quick access\n    dict_1 = {d['unique_id']: d for d in list_1}\n    dict_2 = {d['unique_id']: d for d in list_2}\n\n    # Iterate through each unique_id in the first dictionary\n    for unique_id in dict_1:\n        if unique_id in dict_2:\n            # Get the corresponding dictionaries from both lists\n            dict1 = dict_1[unique_id]\n            dict2 = dict_2[unique_id]\n\n            # Compare the dictionaries\n            for key in dict1:\n                if key != 'unique_id' and key in dict2:\n                    if dict1[key] != dict2[key]:\n                        print(f\"Difference found for unique_id {unique_id}:\")\n                        print(f\"  Key: {key}\")\n                        print(f\"  List 1 Value: {dict1[key]}\")\n                        print(f\"  List 2 Value: {dict2[key]}\")\n        else:\n            print(f\"Unique_id {unique_id} from list_1 not found in list_2\")\n\n# Example usage\nlist_1 = [\n    {\n        'unique_id': '001',\n        'key1': 'AAA',\n        'key2': 'BBB',\n        'key3': 'EEE'\n     },\n     {\n        'unique_id': '002',\n        'key1': 'AAA',\n        'key2': 'CCC',\n        'key3': 'FFF'\n     }\n]\n\nlist_2 = [\n    {\n        'unique_id': '001',\n        'key1': 'AAA',\n        'key2': 'DDD',\n        'key3': 'EEE'\n     },\n     {\n        'unique_id': '002',\n        'key1': 'AAA',\n        'key2': 'CCC',\n        'key3': 'FFF'\n     }\n]\n\ncompare_lists(list_1, list_2)\n```\n\nWhen you run the `compare_lists` function with the provided `list_1` and `list_2`, it will print any differences found between the matching dictionaries, except for the `unique_id` key, which is assumed to be matched already. In the example provided, you should see output indicating the difference in `key2` for `unique_id '001'`."
    }
]