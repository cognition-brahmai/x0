[
    {
        "role": "user",
        "content": "How can I generate a unique, sorted, random list of a fixed length from a specified range of numbers in Python? I am looking for an output like the following:\n\n```python\n>>> list_length = 4\n>>> values_range = [1, 30]\n>>> random_list(list_length, values_range)\n\n[1, 6, 17, 29]\n\n>>> random_list(list_length, values_range)\n\n[5, 6, 22, 24]\n\n>>> random_list(3, [0, 11])\n\n[0, 7, 10]\n```"
    },
    {
        "role": "assistant",
        "content": "To generate a unique, sorted, random list of a fixed length from a specified range of numbers in Python, you can use the `random.sample()` function. This function allows you to randomly select a specified number of unique elements from a given range. After selecting the numbers, you can sort the list to ensure it is in ascending order. Here's a function that does exactly that:\n\n```python\nimport random\n\ndef random_list(list_length, values_range):\n    # Unpack the start and end of the range\n    start, end = values_range\n    # Generate a random sample of unique numbers from the specified range\n    random_numbers = random.sample(range(start, end + 1), list_length)\n    # Sort the list before returning\n    random_numbers.sort()\n    return random_numbers\n\n# Example usage\nprint(random_list(4, [1, 30]))\nprint(random_list(4, [1, 30]))\nprint(random_list(3, [0, 11]))\n```\n\n### Explanation:\n- `random.sample(range(start, end + 1), list_length)` ensures that you get a list of unique elements. The `range` function is inclusive of the start and exclusive of the end, so `end + 1` is used to include the end value.\n- `.sort()` ensures that the list is in ascending order before returning it."
    }
]