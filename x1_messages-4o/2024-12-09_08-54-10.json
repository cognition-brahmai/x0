[
    {
        "role": "user",
        "content": "Can you provide a program that can determine whether two given strings are rotations of each other?"
    },
    {
        "role": "assistant",
        "content": "Certainly! To determine whether two strings are rotations of each other, you can use a simple approach. If you concatenate one of the strings with itself, the other string should be a substring of this concatenated result if they are rotations of each other.\n\nHere's a Python program to achieve this:\n\n```python\ndef are_rotations(str1, str2):\n    # Check if lengths of two strings are equal and they are not empty\n    if len(str1) != len(str2) or not str1 or not str2:\n        return False\n    \n    # Concatenate str1 with itself\n    temp = str1 + str1\n    \n    # Check if str2 is a substring of the concatenated string\n    return str2 in temp\n\n# Example usage\nstring1 = \"abcde\"\nstring2 = \"deabc\"\n\nif are_rotations(string1, string2):\n    print(f'\"{string1}\" and \"{string2}\" are rotations of each other.')\nelse:\n    print(f'\"{string1}\" and \"{string2}\" are not rotations of each other.')\n```\n\nThis program first checks if the two strings have the same length and are not empty. Then, it concatenates the first string with itself and checks if the second string is a substring of this concatenated string. If it is, they are rotations of each other."
    }
]