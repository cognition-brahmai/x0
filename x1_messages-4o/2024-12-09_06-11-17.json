[
    {
        "role": "user",
        "content": "How can I use Python to find all files in a directory with the extension .csv?"
    },
    {
        "role": "assistant",
        "content": "To find all files in a directory with the `.csv` extension using Python, you can use the `os` and `glob` modules. Here's a simple script demonstrating how to do this:\n\n### Method 1: Using `os` and `os.path`\n\n```python\nimport os\n\ndef find_csv_files(directory):\n    csv_files = []\n    for filename in os.listdir(directory):\n        if filename.endswith('.csv'):\n            csv_files.append(filename)\n    return csv_files\n\n# Example usage\ndirectory_path = '/path/to/your/directory'\ncsv_files = find_csv_files(directory_path)\nprint(csv_files)\n```\n\n### Method 2: Using `glob`\n\n```python\nimport glob\nimport os\n\ndef find_csv_files(directory):\n    # Use glob to find all .csv files in the specified directory\n    csv_files = glob.glob(os.path.join(directory, '*.csv'))\n    return csv_files\n\n# Example usage\ndirectory_path = '/path/to/your/directory'\ncsv_files = find_csv_files(directory_path)\nprint(csv_files)\n```\n\n### Method 3: Using `pathlib` (Python 3.5+)\n\n```python\nfrom pathlib import Path\n\ndef find_csv_files(directory):\n    # Use Path object to find all .csv files in the specified directory\n    path = Path(directory)\n    csv_files = list(path.glob('*.csv'))\n    return csv_files\n\n# Example usage\ndirectory_path = '/path/to/your/directory'\ncsv_files = find_csv_files(directory_path)\nprint(csv_files)\n```\n\n### Explanation:\n- **Method 1** uses the `os` module to list all files in the directory and checks if they end with `.csv`.\n- **Method 2** uses the `glob` module to match patterns, which is convenient for finding files with specific extensions.\n- **Method 3** utilizes `pathlib`, which provides an object-oriented approach to handling paths and is more modern and versatile.\n\nChoose the method that best fits your project requirements and Python version. Remember to replace `'/path/to/your/directory'` with the actual path to the directory you want to search in."
    }
]