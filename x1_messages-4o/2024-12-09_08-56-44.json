[
    {
        "role": "user",
        "content": "I am trying to implement a web form validation script in my application. Can someone provide a solution for this?"
    },
    {
        "role": "assistant",
        "content": "Certainly! Implementing form validation is crucial to ensure that the data entered by users is accurate and meets the required criteria before it is submitted. Here's a basic example of how you can implement client-side form validation using HTML5 and JavaScript:\n\n### HTML\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Form Validation Example</title>\n    <style>\n        .error {\n            color: red;\n        }\n    </style>\n</head>\n<body>\n    <form id=\"myForm\" action=\"/submit\" method=\"post\">\n        <label for=\"name\">Name:</label>\n        <input type=\"text\" id=\"name\" name=\"name\" required>\n        <span class=\"error\" id=\"nameError\"></span><br><br>\n\n        <label for=\"email\">Email:</label>\n        <input type=\"email\" id=\"email\" name=\"email\" required>\n        <span class=\"error\" id=\"emailError\"></span><br><br>\n\n        <label for=\"age\">Age:</label>\n        <input type=\"number\" id=\"age\" name=\"age\" min=\"0\" max=\"120\" required>\n        <span class=\"error\" id=\"ageError\"></span><br><br>\n\n        <input type=\"submit\" value=\"Submit\">\n    </form>\n\n    <script src=\"validation.js\"></script>\n</body>\n</html>\n```\n\n### JavaScript (validation.js)\n```javascript\ndocument.getElementById('myForm').addEventListener('submit', function(event) {\n    let isValid = true;\n\n    // Clear previous error messages\n    document.getElementById('nameError').textContent = '';\n    document.getElementById('emailError').textContent = '';\n    document.getElementById('ageError').textContent = '';\n\n    // Validate Name\n    const name = document.getElementById('name').value;\n    if (name.trim() === '') {\n        document.getElementById('nameError').textContent = 'Name is required.';\n        isValid = false;\n    }\n\n    // Validate Email\n    const email = document.getElementById('email').value;\n    const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailPattern.test(email)) {\n        document.getElementById('emailError').textContent = 'Invalid email format.';\n        isValid = false;\n    }\n\n    // Validate Age\n    const age = document.getElementById('age').value;\n    if (age < 0 || age > 120) {\n        document.getElementById('ageError').textContent = 'Age must be between 0 and 120.';\n        isValid = false;\n    }\n\n    // Prevent form submission if there are validation errors\n    if (!isValid) {\n        event.preventDefault();\n    }\n});\n```\n\n### Explanation:\n- **HTML:** The form has three fields: name, email, and age. Each field is required (using the `required` attribute), and the age field has additional constraints for minimum and maximum values.\n- **JavaScript:** The script listens for the form's submit event and validates each field. It displays an error message next to the field if validation fails and prevents the form from submitting if there are any errors.\n\nThis is a basic example and can be expanded with more complex validation logic or integrated with server-side validation for added security."
    }
]