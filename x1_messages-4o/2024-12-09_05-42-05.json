[
    {
        "role": "user",
        "content": "I have recently installed Python 2.7.3 on my CentOS machine by compiling it from the source. The installation was done at /opt/python2.7 and I altered /usr/bin/python to point to the new version. However, this seems to have caused an issue with yum as I am getting an error stating \"No module named yum\" and my Python version is showing as 2.7.3. I tried to resolve the issue by pointing /usr/bin/python back to Python 2.6.6 but now Python 2.6.6 is the default version. How can I fix this issue without breaking yum and setting Python 2.7.3 as the default?"
    },
    {
        "role": "assistant",
        "content": "To resolve your issue without breaking `yum` and while setting Python 2.7.3 as the default version, you can follow these steps:\n\n1. **Restore the Default Python for System Tools:**\n   - Ensure that `/usr/bin/python` points back to the original Python 2.6.6, as system tools like `yum` depend on this version. You can do this by linking it back:\n     ```bash\n     sudo ln -sf /usr/bin/python2.6 /usr/bin/python\n     ```\n\n2. **Set Python 2.7.3 as the Default for Your User:**\n   - Avoid changing the system default Python. Instead, update your user environment to use Python 2.7.3. You can do this by modifying your `~/.bashrc` or `~/.bash_profile` file:\n     ```bash\n     echo \"alias python=/opt/python2.7/bin/python2.7\" >> ~/.bashrc\n     source ~/.bashrc\n     ```\n\n3. **Use Virtual Environments:**\n   - It's a good practice to create virtual environments with the desired Python version for your projects. Install `virtualenv` or `venv` for Python 2.7.3 and create isolated environments:\n     ```bash\n     /opt/python2.7/bin/python2.7 -m pip install virtualenv\n     mkdir ~/my_project\n     cd ~/my_project\n     /opt/python2.7/bin/virtualenv venv\n     source venv/bin/activate\n     ```\n\n4. **Check Python Versions:**\n   - Verify that your default Python points to Python 2.7.3 in your terminal:\n     ```bash\n     python --version\n     ```\n\n5. **Avoid System Python Alterations:**\n   - Always ensure that system-dependent tools use the expected Python version by not altering `/usr/bin/python`. This practice helps maintain system stability.\n\nBy following these steps, you can use Python 2.7.3 as your default version for development without interfering with system tools like `yum`."
    }
]