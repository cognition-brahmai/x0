[
    {
        "role": "user",
        "content": "How can I find all occurrences of a specific element in a Python list? The `index()` function only provides the first occurrence of an item in a list, but I am interested in finding all indices in the list for a specific element. Is there a neat trick or method to accomplish this?"
    },
    {
        "role": "assistant",
        "content": "To find all occurrences of a specific element in a Python list, you can use a list comprehension combined with the `enumerate()` function. This approach will give you the indices of all occurrences of the specified element. Here's a neat way to do it:\n\n```python\ndef find_all_occurrences(lst, element):\n    return [index for index, value in enumerate(lst) if value == element]\n\n# Example usage\nmy_list = [1, 2, 3, 2, 4, 2, 5]\nelement_to_find = 2\nindices = find_all_occurrences(my_list, element_to_find)\nprint(indices)  # Output: [1, 3, 5]\n```\n\nIn this example, the `find_all_occurrences` function iterates over the list using `enumerate()`, which provides both the index and the value of each element. The list comprehension collects the indices where the value matches the specified element."
    }
]