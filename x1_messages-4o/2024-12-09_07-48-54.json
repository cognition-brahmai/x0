[
    {
        "role": "user",
        "content": "What is the best way to include other scripts in a bash script to ensure portability even if the script is executed from another location? I'm currently using the \"source\" command to include other scripts, but it can't find the include unless it's in my path. For example, with the following setup:\n\nmain.sh:\n\n```bash\n#!/bin/bash\n\nsource incl.sh\n\necho \"The main script\"\n```\n\nincl.sh:\n\n```bash\necho \"The included script\"\n```\n\nThe output of executing \"./main.sh\" is:\n\n```bash\nThe included script\nThe main script\n```\n\nIf I attempt to execute the shell script from another location, it can't find the included script. How can I solve this issue?"
    },
    {
        "role": "assistant",
        "content": "To ensure that your scripts can include other scripts reliably, regardless of where they are executed from, you can use a method that determines the script's directory and then uses that directory to reference the included scripts. This makes your script more portable because it doesn't rely on the current working directory or the script being in your PATH.\n\nHere's an approach to achieve this:\n\n1. Determine the directory of the main script.\n2. Use that directory to construct the path to the included script.\n\nYou can use the following modification to `main.sh`:\n\n```bash\n#!/bin/bash\n\n# Determine the directory of the current script\nSCRIPT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" &> /dev/null && pwd)\"\n\n# Source the included script using the determined script directory\nsource \"$SCRIPT_DIR/incl.sh\"\n\necho \"The main script\"\n```\n\nExplanation:\n- `BASH_SOURCE[0]` gives the path of the script being executed.\n- `dirname` extracts the directory portion of that path.\n- `cd \"$(dirname \"${BASH_SOURCE[0]}\")\" &> /dev/null && pwd` changes to that directory and gets the absolute path.\n- The `source` command then uses this absolute path to include `incl.sh`.\n\nNow, regardless of where you execute `./main.sh` from, it will correctly find and include `incl.sh` as long as they are in the same directory. This makes your script more robust and portable across different environments."
    }
]