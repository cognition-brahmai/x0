[
    {
        "role": "user",
        "content": "How can I change the active class of a link using the Twitter Bootstrap CSS in Python/Flask? In my HTML template file, I have an 'active' class that highlights the active tab in my navigation bar. However, this only works correctly when I visit the homepage of my site. If I visit another page such as 'www.page.com/login', the home link remains highlighted as the active tab. I could use JavaScript/jQuery to solve this problem, but I prefer not to use it in this situation. I found a solution that works for Ruby on Rails, but I'm unsure of how to implement this in Python/Jinja. Can you guide me through the process?"
    },
    {
        "role": "assistant",
        "content": "Certainly! To dynamically set the active class for navigation links in a Flask application using Jinja templates, you can utilize the request object to determine the current URL and render the appropriate class. Here's a step-by-step guide to achieving this:\n\n1. **Set Up Your Flask Route:**\n   Make sure you have your routes defined in your Flask application. For example:\n\n   ```python\n   from flask import Flask, render_template\n\n   app = Flask(__name__)\n\n   @app.route('/')\n   def home():\n       return render_template('index.html')\n\n   @app.route('/login')\n   def login():\n       return render_template('login.html')\n\n   if __name__ == '__main__':\n       app.run(debug=True)\n   ```\n\n2. **Create a Jinja Template:**\n   In your Jinja template (e.g., `layout.html`), you can use the `request.path` attribute to compare the current URL with each link's URL and set the `active` class conditionally. Here's an example:\n\n   ```html\n   <!DOCTYPE html>\n   <html lang=\"en\">\n   <head>\n       <meta charset=\"UTF-8\">\n       <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n       <link href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\" rel=\"stylesheet\">\n       <title>My Website</title>\n   </head>\n   <body>\n       <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n           <a class=\"navbar-brand\" href=\"#\">My Website</a>\n           <div class=\"collapse navbar-collapse\">\n               <ul class=\"navbar-nav mr-auto\">\n                   <li class=\"nav-item {% if request.path == '/' %}active{% endif %}\">\n                       <a class=\"nav-link\" href=\"/\">Home</a>\n                   </li>\n                   <li class=\"nav-item {% if request.path == '/login' %}active{% endif %}\">\n                       <a class=\"nav-link\" href=\"/login\">Login</a>\n                   </li>\n                   <!-- Add more navigation items here -->\n               </ul>\n           </div>\n       </nav>\n\n       <div class=\"container\">\n           {% block content %}{% endblock %}\n       </div>\n   </body>\n   </html>\n   ```\n\n3. **Inherit From the Layout Template:**\n   Use this layout in your individual page templates by extending it. For example, for your `index.html`:\n\n   ```html\n   {% extends \"layout.html\" %}\n\n   {% block content %}\n   <h1>Welcome to the Homepage</h1>\n   {% endblock %}\n   ```\n\n   Similarly, for `login.html`:\n\n   ```html\n   {% extends \"layout.html\" %}\n\n   {% block content %}\n   <h1>Login Page</h1>\n   {% endblock %}\n   ```\n\nBy using the `request.path` in your Jinja templates, you can dynamically set the `active` class based on the current page URL. This approach avoids using JavaScript/jQuery and keeps the logic on the server side."
    }
]