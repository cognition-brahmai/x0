[
    {
        "role": "user",
        "content": "How can I build an HTML form with one text input and a submit button, where the input value is validated and an error message is displayed if the value is not valid?"
    },
    {
        "role": "assistant",
        "content": "To build an HTML form with one text input and a submit button, where the input value is validated and an error message is displayed if the value is not valid, you can use a combination of HTML, CSS, and JavaScript. Here's a simple example to illustrate how you can achieve this:\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Form Validation Example</title>\n    <style>\n        .error {\n            color: red;\n            display: none;\n        }\n    </style>\n</head>\n<body>\n    <form id=\"myForm\" onsubmit=\"return validateForm()\">\n        <label for=\"textInput\">Enter a value:</label>\n        <input type=\"text\" id=\"textInput\" name=\"textInput\" required>\n        <button type=\"submit\">Submit</button>\n        <div id=\"error-message\" class=\"error\">Please enter a valid value.</div>\n    </form>\n\n    <script>\n        function validateForm() {\n            const textInput = document.getElementById('textInput').value;\n            const errorMessage = document.getElementById('error-message');\n\n            // Example validation: Check if the input is not empty and has at least 3 characters\n            if (textInput.trim() === '' || textInput.length < 3) {\n                errorMessage.style.display = 'block';\n                return false; // Prevent form submission\n            }\n\n            errorMessage.style.display = 'none';\n            return true; // Allow form submission\n        }\n    </script>\n</body>\n</html>\n```\n\n### Explanation:\n\n1. **HTML Structure:**\n   - A form is created with an ID `myForm`.\n   - A text input field with the ID `textInput` and a submit button are included.\n   - A `div` with the ID `error-message` is used to display an error message when the input is invalid.\n\n2. **CSS:**\n   - The `.error` class is styled to display the error message in red and is initially hidden (`display: none`).\n\n3. **JavaScript:**\n   - The `validateForm` function is triggered on form submission.\n   - It retrieves the value from the text input and checks if it meets the validation criteria (in this example, the input should not be empty and should have at least 3 characters).\n   - If the validation fails, the error message is displayed, and the form submission is prevented by returning `false`.\n   - If the validation passes, the error message is hidden, and the form is submitted by returning `true`.\n\nYou can adjust the validation logic within the `validateForm` function to meet your specific requirements."
    }
]