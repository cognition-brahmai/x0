[
    {
        "role": "user",
        "content": "In my Django application, I'm trying to extract the host name and protocol from the referrer URL which I get from `request.META.get('HTTP_REFERER')`. For example, if I have URLs like:\n\n- `https://docs.google.com/spreadsheet/ccc?key=blah-blah-blah-blah#gid=1`\n- `https://stackoverflow.com/questions/1234567/blah-blah-blah-blah`\n- `http://www.example.com`\n- `https://www.other-domain.example/whatever/blah/blah/?v1=0&v2=blah+blah`\n\nI want to get:\n\n- `https://docs.google.com/`\n- `https://stackoverflow.com/`\n- `http://www.example.com`\n- `https://www.other-domain.example/`\n\nI tried using urlparse but it's not working as expected. For instance, when I use `urlparse(request.META.get('HTTP_REFERER')).hostname`, I only get 'docs.google.com'. How can I extract both the hostname and the protocol from these URLs?"
    },
    {
        "role": "assistant",
        "content": "To extract both the protocol (scheme) and the hostname from a URL in Django, you can indeed use the `urlparse` function from Python's standard library `urllib.parse`. However, you need to combine both the scheme and the hostname to get the desired result.\n\nHere's how you can do it:\n\n```python\nfrom urllib.parse import urlparse\n\ndef extract_base_url(referrer_url):\n    parsed_url = urlparse(referrer_url)\n    # Combine scheme and hostname to form the base URL\n    base_url = f\"{parsed_url.scheme}://{parsed_url.hostname}/\"\n    return base_url\n\n# Example usage in a Django view\ndef my_view(request):\n    referrer_url = request.META.get('HTTP_REFERER')\n    if referrer_url:\n        base_url = extract_base_url(referrer_url)\n        # Now you have the base URL\n        print(base_url)\n    else:\n        print(\"No referrer URL found.\")\n```\n\n### Explanation:\n- **`urlparse`**: This function splits the URL into its components: scheme, netloc, path, params, query, and fragment.\n- **`parsed_url.scheme`**: Gives you the protocol (e.g., `http` or `https`).\n- **`parsed_url.hostname`**: Gives you the hostname (e.g., `docs.google.com`).\n- **Combining scheme and hostname**: By concatenating `parsed_url.scheme` and `parsed_url.hostname` with `://` in between, you construct the base URL.\n\nThis approach will yield the desired base URL for the examples you provided. Keep in mind that the trailing slash at the end of the URL is added manually in the `base_url` construction."
    }
]