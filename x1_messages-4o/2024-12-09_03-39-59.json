[
    {
        "role": "user",
        "content": "I have a DataFrame with multiple columns (for example, columns a, b, c, d, e, f, g, etc.) and I want to delete all columns except for certain ones (in this case, columns 'a' and 'b'). Considering that I might have a large number of columns (say, 1000), I would like a simple and efficient line of code to accomplish this. How can I do this?\n\nHere is the DataFrame I have:\n\n```\na  b  c  d  e  f  g  \n1  2  3  4  5  6  7\n4  3  7  1  6  9  4\n8  9  0  2  4  2  1\n```\n\nI want to transform it into:\n\n```\na  b\n1  2\n4  3\n8  9\n```"
    },
    {
        "role": "assistant",
        "content": "To achieve this, you can use the `pandas` library in Python, which provides a convenient way to select specific columns from a DataFrame. Given your requirement to keep only columns 'a' and 'b', you can use the following code:\n\n```python\nimport pandas as pd\n\n# Assuming df is your original DataFrame\ndf = pd.DataFrame({\n    'a': [1, 4, 8],\n    'b': [2, 3, 9],\n    'c': [3, 7, 0],\n    'd': [4, 1, 2],\n    'e': [5, 6, 4],\n    'f': [6, 9, 2],\n    'g': [7, 4, 1]\n})\n\n# Select only the columns 'a' and 'b'\ndf_filtered = df[['a', 'b']]\n\nprint(df_filtered)\n```\n\nThis code creates a new DataFrame `df_filtered` that contains only the specified columns 'a' and 'b'. The original DataFrame `df` remains unchanged. The double brackets `[['a', 'b']]` are used to access multiple columns in the DataFrame."
    }
]