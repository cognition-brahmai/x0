[
    {
        "role": "user",
        "content": "How can a Ruby program check if a given string contains only alphabetic characters?\nCan you provide a code snippet in [Ruby code] that uses regular expressions to accomplish this task?"
    },
    {
        "role": "assistant",
        "content": "Certainly! In Ruby, you can use regular expressions to check if a string contains only alphabetic characters. You can use the `=~` operator or the `match?` method to perform this check. Here's a code snippet that demonstrates how to accomplish this:\n\n```ruby\ndef only_alphabetic?(string)\n  # Use the match? method with a regular expression to check if the string contains only alphabetic characters\n  string.match?(/\\A[a-zA-Z]+\\z/)\nend\n\n# Example usage\nputs only_alphabetic?(\"Hello\")    # Output: true\nputs only_alphabetic?(\"Hello123\") # Output: false\nputs only_alphabetic?(\"world\")    # Output: true\nputs only_alphabetic?(\"\")         # Output: false\n```\n\nIn this snippet, the regular expression `/\\A[a-zA-Z]+\\z/` is used to check the string:\n- `\\A` asserts the start of the string.\n- `[a-zA-Z]+` matches one or more alphabetic characters (both uppercase and lowercase).\n- `\\z` asserts the end of the string.\n\nThis ensures that the entire string is composed of alphabetic characters only. If the string contains anything other than alphabetic characters or is empty, the method will return `false`."
    }
]