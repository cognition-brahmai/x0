[
    {
        "role": "user",
        "content": "I am working with different shapes of arrays in NumPy and I want to save them all at once using `numpy.save`. This works fine when the arrays have different shapes. However, when I have two matrices with one dimension of the same size, I encounter an error. For instance, when I run the following code:\n\n```python\nmat1 = numpy.arange(8).reshape(2, 4)\nmat2 = numpy.arange(10).reshape(2, 5)\nnumpy.save('mat.npy', numpy.array([mat1, mat2]))\n```\n\nI get this error:\n\n```python\nTraceback (most recent call last):\n  File \"<input>\", line 1, in <module>\nValueError: could not broadcast input array from shape (2,4) into shape (2)\n```\n\nI believe this problem is caused by `numpy.array([mat1, mat2])` and not by `numpy.save`. I know that such an array is possible:\n\n```python\n>>> numpy.array([[[1, 2]], [[1, 2], [3, 4]]])\n    array([[[1, 2]], [[1, 2], [3, 4]]], dtype=object)\n```\n\nTherefore, I want to save two arrays like `mat1` and `mat2` at once. How can I achieve this?"
    },
    {
        "role": "assistant",
        "content": "The issue you're encountering is due to trying to create a regular NumPy array from matrices of different shapes. NumPy arrays require all elements to have the same shape, and when they don't, you need to use arrays with `dtype=object` to hold them.\n\nHere's how you can save multiple arrays of different shapes using `numpy.save`:\n\n1. You can save each array individually using `numpy.save` or `numpy.savez` for multiple arrays.\n2. Use `numpy.savez` or `numpy.savez_compressed` to save multiple arrays in a single file.\n\nHere's an example using `numpy.savez`:\n\n```python\nimport numpy as np\n\nmat1 = np.arange(8).reshape(2, 4)\nmat2 = np.arange(10).reshape(2, 5)\n\n# Save multiple arrays into a single .npz file\nnp.savez('matrices.npz', mat1=mat1, mat2=mat2)\n```\n\nTo load the arrays back, you can do the following:\n\n```python\n# Load the arrays from the .npz file\nloaded_data = np.load('matrices.npz')\n\n# Access individual arrays\nloaded_mat1 = loaded_data['mat1']\nloaded_mat2 = loaded_data['mat2']\n\nprint(\"Loaded mat1:\")\nprint(loaded_mat1)\n\nprint(\"\\nLoaded mat2:\")\nprint(loaded_mat2)\n```\n\nUsing `numpy.savez` allows you to store multiple arrays with different shapes in a single file, and you can easily retrieve them by their assigned names."
    }
]