[
    {
        "role": "user",
        "content": "How can I send an email through Gmail using Python's smtplib without enabling 'insecure access'? I am trying to improve the security of script access to Gmail's SMTP servers as suggested by Google. My current code looks like this:\n\n```python\nserver = smtplib.SMTP(\"smtp.gmail.com\", 587)\nserver.ehlo()\nserver.starttls()\nserver.login(GMAIL_USER, GMAIL_PASSWORD)\nserver.sendmail(FROM, TO, MESSAGE)\nserver.close()\n```\n\nHowever, Google suggests that we \"Upgrade to a more secure app that uses the most up to date security measures\". I'm not clear on how to upgrade my existing code to meet this requirement. I could enable \"Access for less secure apps\", but I'd prefer not to. Can anyone suggest a more secure alternative?"
    },
    {
        "role": "assistant",
        "content": "To send emails securely using Python without enabling \"Less secure apps\" in Gmail, you can use the OAuth2 authentication method. This approach aligns with Google's security recommendations by using tokens rather than storing and sending your password directly. Here's a step-by-step guide on how to implement this using the `google-auth` and `google-auth-oauthlib` libraries:\n\n### Prerequisites\n\n1. **Google Account Configuration:**\n   - Go to the [Google Cloud Console](https://console.developers.google.com/).\n   - Create a new project or select an existing one.\n   - Enable the Gmail API for the project.\n   - Go to \"Credentials\" and click \"Create credentials\". Choose \"OAuth 2.0 Client IDs\".\n   - Configure your consent screen if prompted.\n   - Download your `credentials.json` file.\n\n2. **Python Libraries:**\n   - Install the required libraries if you haven't already:\n\n     ```bash\n     pip install --upgrade google-auth google-auth-oauthlib google-auth-httplib2\n     ```\n\n### Code Implementation\n\nHere's how you can modify your code to use OAuth2:\n\n```python\nimport base64\nimport os\nimport pickle\nimport google.auth\nfrom google.auth.transport.requests import Request\nfrom google_auth_oauthlib.flow import InstalledAppFlow\nfrom google.auth.transport.requests import AuthorizedSession\nfrom email.mime.text import MIMEText\nfrom googleapiclient.discovery import build\n\n# Define the scopes for the Gmail API\nSCOPES = ['https://www.googleapis.com/auth/gmail.send']\n\ndef authenticate_gmail():\n    creds = None\n    # The file token.pickle stores the user's access and refresh tokens, and is created\n    # automatically when the authorization flow completes for the first time.\n    if os.path.exists('token.pickle'):\n        with open('token.pickle', 'rb') as token:\n            creds = pickle.load(token)\n    # If there are no (valid) credentials available, let the user log in.\n    if not creds or not creds.valid:\n        if creds and creds.expired and creds.refresh_token:\n            creds.refresh(Request())\n        else:\n            flow = InstalledAppFlow.from_client_secrets_file(\n                'credentials.json', SCOPES)\n            creds = flow.run_local_server(port=0)\n        # Save the credentials for the next run\n        with open('token.pickle', 'wb') as token:\n            pickle.dump(creds, token)\n    return creds\n\ndef create_message(sender, to, subject, message_text):\n    \"\"\"Create a message for an email.\"\"\"\n    message = MIMEText(message_text)\n    message['to'] = to\n    message['from'] = sender\n    message['subject'] = subject\n    return {'raw': base64.urlsafe_b64encode(message.as_bytes()).decode()}\n\ndef send_message(service, user_id, message):\n    \"\"\"Send an email message.\"\"\"\n    try:\n        message = service.users().messages().send(userId=user_id, body=message).execute()\n        print('Message Id: %s' % message['id'])\n        return message\n    except Exception as error:\n        print(f'An error occurred: {error}')\n        return None\n\ndef main():\n    creds = authenticate_gmail()\n    service = build('gmail', 'v1', credentials=creds)\n    \n    sender = \"your-email@gmail.com\"\n    to = \"recipient-email@gmail.com\"\n    subject = \"Subject\"\n    message_text = \"This is a test email.\"\n\n    message = create_message(sender, to, subject, message_text)\n    send_message(service, 'me', message)\n\nif __name__ == '__main__':\n    main()\n```\n\n### Explanation\n\n- **Authentication:** This code uses OAuth2 for authentication. It will prompt you to authenticate via a web browser the first time it runs.\n- **Token Storage:** The `token.pickle` file stores the access and refresh tokens, so you don\u2019t need to authenticate every time.\n- **Email Message:** The email message is created using the `MIMEText` class and encoded in base64.\n- **Gmail API:** The `googleapiclient` library is used to interact with the Gmail API to send the email.\n\nThis method ensures secure access to your Gmail account without needing to enable \"Less secure apps\"."
    }
]