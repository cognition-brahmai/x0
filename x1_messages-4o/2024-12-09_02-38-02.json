[
    {
        "role": "user",
        "content": "How can I modify a global variable from within a function in Python? I have a global variable 'a' set to 15. I am trying to add 10 to it within a function named 'test'. However, I am getting an UnboundLocalError. Here is my code and the error message:\n\n```python\na = 15\n\ndef test():\n    a = a + 10\n    print(a)\n\ntest()\n```\n\nError message:\n\n```python\nTraceback (most recent call last):\n  File \"test.py\", line 7, in <module>\n    test()\n  File \"test.py\", line 4, in test\n    a = a +10\nUnboundLocalError: local variable 'a' referenced before assignment\n```\n\nHow can I fix this error and correctly modify the global variable?"
    },
    {
        "role": "assistant",
        "content": "To modify a global variable within a function in Python, you need to explicitly declare that you are using the global variable by using the `global` keyword. This tells Python that you intend to use the global variable, rather than creating a new local one.\n\nHere's how you can fix the error in your code:\n\n```python\na = 15\n\ndef test():\n    global a  # Declare that you are using the global variable 'a'\n    a = a + 10\n    print(a)\n\ntest()\n```\n\nBy adding `global a` inside the `test` function, you inform Python that `a` refers to the global variable `a`, so when you modify `a`, you are modifying the global variable. This will fix the `UnboundLocalError` and produce the expected output of `25`."
    }
]