[
    {
        "role": "user",
        "content": "How can I get the first index of a list in Python that contains a sub-string? For instance, using the `list.index(x)` method returns the index in the list of the first item whose value is `x`. But how can I search inside the list items, and not just at the whole items? To illustrate, consider the following list:\n\n```python\nl = ['the cat ate the mouse',\n     'the tiger ate the chicken',\n     'the horse ate the straw']\n```\n\nGiven this list, how can I get the function to return `1` when provided with the argument `tiger`?"
    },
    {
        "role": "assistant",
        "content": "To find the first index of a list item that contains a given substring, you can use a loop to iterate through the list and check if the substring exists within each item. One way to do this is by using a `for` loop with the `enumerate` function, which allows you to access both the index and the value of each item in the list. Here's how you can achieve this:\n\n```python\ndef find_first_index_with_substring(lst, substring):\n    for index, item in enumerate(lst):\n        if substring in item:\n            return index\n    return -1  # Return -1 if the substring is not found in any of the list items\n\nl = ['the cat ate the mouse',\n     'the tiger ate the chicken',\n     'the horse ate the straw']\n\nresult = find_first_index_with_substring(l, 'tiger')\nprint(result)  # Output: 1\n```\n\nIn this function, `enumerate(lst)` provides both the index and the item from the list `lst`. The `if substring in item` condition checks if the `substring` is present in the `item`. If it is found, the function returns the current `index`. If the loop completes without finding the substring, the function returns `-1`, indicating that the substring was not found in any list item."
    }
]