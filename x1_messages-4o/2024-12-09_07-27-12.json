[
    {
        "role": "user",
        "content": "How can I extract all unique keys from a list of dictionaries? I am working with a list of dictionaries where some dictionaries have more key-value pairs than others. The new keys are added dynamically based on information coming from an API, so they may or may not occur in each dictionary and I do not know in advance how many new keys there will be. For example, my list might look like this:\n\n```python\n[\n{\"name\": \"Tom\", \"age\": 10},\n{\"name\": \"Mark\", \"age\": 5, \"height\":4},\n{\"name\": \"Pam\", \"age\": 7, \"weight\":90}\n]\n```\n\nIn this case, both the second and third dictionary have 3 keys but the end result should really be the list `[\"name\", \"age\", \"height\", \"weight\"]`. Previously, I was using `fieldnames = list[0].keys()` to take the first dictionary in the list and extract its keys. But now, I can't just use `fieldnames = list[1].keys()` since it isn't necessarily the second element that will have extra keys. How can I solve this problem?"
    },
    {
        "role": "assistant",
        "content": "To extract all unique keys from a list of dictionaries, you can iterate over each dictionary and collect the keys in a set, which automatically ensures that all keys are unique. Here's a simple and efficient way to achieve this:\n\n```python\ndata = [\n    {\"name\": \"Tom\", \"age\": 10},\n    {\"name\": \"Mark\", \"age\": 5, \"height\": 4},\n    {\"name\": \"Pam\", \"age\": 7, \"weight\": 90}\n]\n\n# Initialize an empty set to store unique keys\nunique_keys = set()\n\n# Iterate over each dictionary in the list\nfor dictionary in data:\n    # Update the set with keys from the current dictionary\n    unique_keys.update(dictionary.keys())\n\n# Convert the set back to a list if needed\nunique_key_list = list(unique_keys)\n\n# Print the result\nprint(unique_key_list)\n```\n\nThis code will give you the desired output:\n\n```\n['name', 'age', 'height', 'weight']\n```\n\nNote that sets do not maintain order, so if the order of the keys is important, you might need to sort the list of unique keys. You can do this by:\n\n```python\nunique_key_list.sort()\n```\n\nThis will sort the keys alphabetically. If you need a specific order, you may need to define it manually."
    }
]