[
    {
        "role": "user",
        "content": "How can I pass a precomputed distance matrix to the seaborn.clustermap function instead of a rectangular data matrix? I have been using distance matrices with SciPy for dendrograms and heatmaps but I want to use seaborn as the backend to compute my dendrogram and add it to my heatmap. Is this possible? If not, is there a workaround or a possible feature for this in the future? Here's my code:\n\n```python\nfrom sklearn.datasets import load_iris\niris = load_iris()\nX, y = iris.data, iris.target\nDF = pd.DataFrame(X, index = [\"iris_%d\" % (i) for i in range(X.shape[0])], columns = iris.feature_names)\n\nDF_corr = DF.T.corr()\nDF_dism = 1 - DF_corr\nsns.clustermap(DF_dism)\n```"
    },
    {
        "role": "assistant",
        "content": "The `seaborn.clustermap` function, by default, expects a data matrix from which it computes the distances internally using a specified metric. However, if you already have a precomputed distance matrix, you can still use `seaborn.clustermap` by providing the linkage matrix directly to the function. Here's how you can do it using SciPy to compute the linkage from your precomputed distance matrix:\n\n1. Compute the linkage matrix using `scipy.cluster.hierarchy.linkage` with the precomputed distance matrix.\n2. Pass this linkage matrix to `seaborn.clustermap` using the `row_linkage` and/or `col_linkage` parameters.\n\nHere's how you can modify your code to achieve this:\n\n```python\nimport pandas as pd\nimport seaborn as sns\nfrom scipy.spatial.distance import squareform\nfrom scipy.cluster.hierarchy import linkage\nfrom sklearn.datasets import load_iris\n\n# Load data\niris = load_iris()\nX, y = iris.data, iris.target\nDF = pd.DataFrame(X, index=[\"iris_%d\" % (i) for i in range(X.shape[0])], columns=iris.feature_names)\n\n# Compute the correlation and distance matrix\nDF_corr = DF.T.corr()\nDF_dism = 1 - DF_corr\n\n# Convert the distance matrix to a condensed form\ndism_condensed = squareform(DF_dism)\n\n# Compute the linkage matrix\nlinkage_matrix = linkage(dism_condensed, method='average')  # You can use other methods like 'single', 'complete', etc.\n\n# Create a clustermap with the precomputed linkage\nsns.clustermap(DF_dism, row_linkage=linkage_matrix, col_linkage=linkage_matrix)\n```\n\nIn this code:\n- `squareform` is used to convert the square distance matrix into a condensed distance matrix, which is required by `linkage`.\n- The `linkage` function computes the hierarchical clustering, and you can specify the method you want to use for clustering.\n- Finally, you pass the linkage matrix to `clustermap` for both rows and columns.\n\nThis should allow you to use your precomputed distance matrix with `seaborn.clustermap`."
    }
]