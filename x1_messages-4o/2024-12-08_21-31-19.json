[
    {
        "role": "user",
        "content": "What C# code can I use to fetch JSON data of stores selling tapioca pearls for bubble tea and desserts in a specific location, and display it in a table view with columns for store name, address, and contact information?\nHere is some example code:\nvar client = new HttpClient();\nvar response = await client.GetAsync(\"https://example.com/stores?location=LosAngeles\");\nvar content = await response.Content.ReadAsStringAsync();\nvar stores = JsonConvert.DeserializeObject<List<Store>>(content);\nforeach(var store in stores) {\n    Console.WriteLine(store.Name);\n    Console.WriteLine(store.Address);\n    Console.WriteLine(store.ContactInfo);\n}\nclass Store {\n    public string Name { get; set; }\n    public string Address { get; set; }\n    public string ContactInfo { get; set; }\n}"
    },
    {
        "role": "assistant",
        "content": "To fetch JSON data for stores selling tapioca pearls and display it in a table view using C#, you can use a combination of `HttpClient` for fetching data, `JsonConvert` for deserializing JSON, and a simple console table for displaying the data. Below is an example code that achieves this:\n\n```csharp\nusing System;\nusing System.Collections.Generic;\nusing System.Net.Http;\nusing System.Threading.Tasks;\nusing Newtonsoft.Json;\n\nclass Program\n{\n    static async Task Main(string[] args)\n    {\n        var client = new HttpClient();\n        var response = await client.GetAsync(\"https://example.com/stores?location=LosAngeles\");\n        \n        if (response.IsSuccessStatusCode)\n        {\n            var content = await response.Content.ReadAsStringAsync();\n            var stores = JsonConvert.DeserializeObject<List<Store>>(content);\n            \n            // Print table header\n            Console.WriteLine(\"{0,-20} {1,-30} {2,-20}\", \"Store Name\", \"Address\", \"Contact Info\");\n            Console.WriteLine(new string('-', 70));\n\n            // Print each store's information in a tabular format\n            foreach (var store in stores)\n            {\n                Console.WriteLine(\"{0,-20} {1,-30} {2,-20}\", store.Name, store.Address, store.ContactInfo);\n            }\n        }\n        else\n        {\n            Console.WriteLine(\"Failed to fetch data. Status Code: \" + response.StatusCode);\n        }\n    }\n}\n\nclass Store\n{\n    public string Name { get; set; }\n    public string Address { get; set; }\n    public string ContactInfo { get; set; }\n}\n```\n\n### Explanation:\n\n- **HttpClient**: This is used to send an HTTP request to the specified URL to fetch JSON data.\n  \n- **JsonConvert.DeserializeObject**: This method from the Newtonsoft.Json library is used to convert JSON data into a list of `Store` objects.\n\n- **Console Table**: The stores' data is printed in a formatted table using `Console.WriteLine` with specific column widths.\n\n- **Error Handling**: The code checks if the HTTP request was successful by verifying `response.IsSuccessStatusCode`.\n\nMake sure to install the Newtonsoft.Json package via NuGet Package Manager, as it is used to handle JSON deserialization:\n\n```shell\nInstall-Package Newtonsoft.Json\n```\n\nThis code can be run in a simple console application and will display the list of stores in a formatted table view in the console. Make sure to replace the URL with the actual API endpoint that provides the data."
    }
]