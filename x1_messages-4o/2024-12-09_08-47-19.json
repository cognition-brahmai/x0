[
    {
        "role": "user",
        "content": "Is there a way to write a function that takes in a list and a number as parameters and returns a new list where each element is the result of adding the given number to the corresponding element in the original list?"
    },
    {
        "role": "assistant",
        "content": "Yes, you can accomplish this by writing a simple function in Python. The function will take a list and a number as parameters, and it will return a new list with each element being the sum of the corresponding element in the original list and the given number. Here's a sample implementation:\n\n```python\ndef add_to_each_element(input_list, number):\n    # Use list comprehension to create a new list\n    return [element + number for element in input_list]\n\n# Example usage\noriginal_list = [1, 2, 3, 4, 5]\nnumber_to_add = 3\nnew_list = add_to_each_element(original_list, number_to_add)\nprint(new_list)  # Output: [4, 5, 6, 7, 8]\n```\n\nIn this function, `add_to_each_element`, we've used a list comprehension to iterate over each element of the `input_list`, add the `number` to it, and store the result in a new list, which is then returned."
    }
]