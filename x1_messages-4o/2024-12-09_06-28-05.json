[
    {
        "role": "user",
        "content": "How can I write a pandas DataFrame containing unicode to JSON without having the unicode characters escaped? When I use the `.to_json` function, it escapes the characters and gives a different result from what I want. I also tried adding the `force_ascii=False` argument but it throws a `UnicodeEncodeError`. Here is my code and the error:\n\n```python\nimport pandas as pd\ndf = pd.DataFrame([['\u03c4', 'a', 1], ['\u03c0', 'b', 2]])\ndf.to_json('df.json')\n```\n\nThis gives:\n\n```python\n{\"0\":{\"0\":\"\\u03c4\",\"1\":\"\\u03c0\"},\"1\":{\"0\":\"a\",\"1\":\"b\"},\"2\":{\"0\":1,\"1\":2}}\n```\n\nWhich differs from the desired result:\n\n```python\n{\"0\":{\"0\":\"\u03c4\",\"1\":\"\u03c0\"},\"1\":{\"0\":\"a\",\"1\":\"b\"},\"2\":{\"0\":1,\"1\":2}}\n```\n\nWhen I added `force_ascii=False`:\n\n```python\nimport pandas as pd\ndf = pd.DataFrame([['\u03c4', 'a', 1], ['\u03c0', 'b', 2]])\ndf.to_json('df.json', force_ascii=False)\n```\n\nIt throws this error:\n\n```python\nUnicodeEncodeError: 'charmap' codec can't encode character '\\u03c4' in position 11: character maps to <undefined>\n```\n\nI am using WinPython 3.4.4.2 64bit with pandas 0.18.0."
    },
    {
        "role": "assistant",
        "content": "The issue you're encountering is related to how Python handles Unicode and the default encoding used when writing files on Windows. By default, Windows uses a different encoding than UTF-8, which can cause issues with non-ASCII characters.\n\nTo write a JSON file with Unicode characters without escaping them, you should explicitly specify the UTF-8 encoding when opening the file. Here's how you can do it:\n\n```python\nimport pandas as pd\nimport json\n\n# Create the DataFrame\ndf = pd.DataFrame([['\u03c4', 'a', 1], ['\u03c0', 'b', 2]])\n\n# Convert the DataFrame to a JSON string with force_ascii set to False\njson_str = df.to_json(force_ascii=False)\n\n# Write the JSON string to a file using UTF-8 encoding\nwith open('df.json', 'w', encoding='utf-8') as f:\n    f.write(json_str)\n```\n\nThis should write the JSON file with the desired Unicode characters without escaping them. By specifying `encoding='utf-8'` when opening the file, you ensure that Python writes the file using UTF-8 encoding, which properly handles Unicode characters."
    }
]