[
    {
        "role": "user",
        "content": "How can I create a stacked line graph using Python, preferably with matplotlib or any other library? I want to produce a graph similar to this [example](https://web.archive.org/web/20090901073911/http://www.whitehouse.gov/omb/budget/fy2003/images/bud20c.jpg). I found a stacked bar graph example on the matplotlib website, but I want the top of the bar to be connected with a line segment and the area underneath to be filled. I thought about decreasing the gaps between bars and using lots of bars, but I'm not sure if this is even possible and it seems like a workaround. Could you help me find a proper solution for this?"
    },
    {
        "role": "assistant",
        "content": "Creating a stacked line graph, often referred to as an \"area chart\" or \"stacked area chart,\" is straightforward using the `matplotlib` library in Python. This type of chart is useful for visualizing the cumulative contribution of different categories over time. Here's how you can create a stacked area chart using `matplotlib`:\n\n```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Sample data\ncategories = ['Category 1', 'Category 2', 'Category 3']\ntime = np.arange(1, 11)  # Time points\ndata = np.random.rand(3, 10)  # Random data for demonstration\n\n# Stacking the data\nstacked_data = np.cumsum(data, axis=0)\n\n# Plot\nfig, ax = plt.subplots()\n\n# Create a stacked area plot\nax.stackplot(time, stacked_data, labels=categories)\n\n# Add labels and title\nax.set_xlabel('Time')\nax.set_ylabel('Values')\nax.set_title('Stacked Area Chart Example')\nax.legend(loc='upper left')\n\n# Show the plot\nplt.show()\n```\n\n### Explanation:\n\n1. **Data Preparation**: We generate some random data for demonstration purposes. Replace `data` with your actual dataset. Each row represents a category, and each column represents a time point.\n\n2. **Stacking the Data**: We use `np.cumsum()` to compute the cumulative sum of the data along the specified axis (in this case, axis=0, stacking along columns). This allows us to stack the categories on top of each other.\n\n3. **Creating the Plot**: The `ax.stackplot()` function is used to create the stacked area chart. It fills the area under the line connecting the data points for each category.\n\n4. **Customization**: Customize the plot by setting titles, labels, and legends as needed.\n\n5. **Display**: Finally, `plt.show()` is called to display the plot.\n\nThis example provides a basic structure for creating a stacked area chart. You can further customize it by adjusting colors, adding grid lines, or formatting the axes to suit your specific needs. If you need more advanced visualization options, consider using libraries like `seaborn` or `plotly`, which offer additional features and styling capabilities."
    }
]