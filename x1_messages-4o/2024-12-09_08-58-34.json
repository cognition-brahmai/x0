[
    {
        "role": "user",
        "content": "How can I create a JavaScript code that links two dropdown menus and updates the data of the second dropdown based on the selection of the first?"
    },
    {
        "role": "assistant",
        "content": "Creating linked dropdown menus in JavaScript involves updating the options of the second dropdown based on the selection made in the first. Here's a step-by-step guide on how to achieve this:\n\n1. **HTML Setup**: First, you'll need two dropdown menus. Each menu is represented by a `<select>` element. The options inside each dropdown are represented by `<option>` elements.\n\n2. **JavaScript Logic**: Use JavaScript to listen for changes in the first dropdown. When a change occurs, update the second dropdown with the relevant options.\n\nHere's a simple example to illustrate this:\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Linked Dropdown Menus</title>\n</head>\n<body>\n\n    <h2>Linked Dropdown Example</h2>\n\n    <label for=\"firstDropdown\">Choose a category:</label>\n    <select id=\"firstDropdown\" name=\"category\">\n        <option value=\"\">--Select--</option>\n        <option value=\"fruits\">Fruits</option>\n        <option value=\"vegetables\">Vegetables</option>\n    </select>\n\n    <label for=\"secondDropdown\">Choose an item:</label>\n    <select id=\"secondDropdown\" name=\"item\">\n        <option value=\"\">--Select--</option>\n    </select>\n\n    <script>\n        // Data to populate the dropdowns\n        const dropdownData = {\n            'fruits': ['Apple', 'Banana', 'Orange'],\n            'vegetables': ['Carrot', 'Broccoli', 'Spinach']\n        };\n\n        // Get references to the dropdowns\n        const firstDropdown = document.getElementById('firstDropdown');\n        const secondDropdown = document.getElementById('secondDropdown');\n\n        // Event listener for the first dropdown\n        firstDropdown.addEventListener('change', function() {\n            // Get selected value\n            const selectedCategory = this.value;\n\n            // Clear the second dropdown\n            secondDropdown.innerHTML = '<option value=\"\">--Select--</option>';\n\n            // Check if a valid category is selected\n            if (dropdownData[selectedCategory]) {\n                // Populate the second dropdown with appropriate options\n                dropdownData[selectedCategory].forEach(item => {\n                    const option = document.createElement('option');\n                    option.value = item.toLowerCase();\n                    option.textContent = item;\n                    secondDropdown.appendChild(option);\n                });\n            }\n        });\n    </script>\n\n</body>\n</html>\n```\n\n### Explanation:\n\n- **HTML Elements**: Two dropdowns are created with `<select>` tags. The first dropdown has options for \"Fruits\" and \"Vegetables.\"\n\n- **JavaScript**:\n  - A `dropdownData` object holds the items corresponding to each category.\n  - An event listener is added to the first dropdown which triggers whenever the selection changes (`change` event).\n  - Inside the event listener, the second dropdown is first cleared and then repopulated based on the selected category from the first dropdown.\n\nThis code provides a basic setup. You can expand it with more categories and items, improve styling, and enhance user interaction as needed."
    }
]