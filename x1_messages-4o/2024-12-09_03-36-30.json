[
    {
        "role": "user",
        "content": "How can I import a CSV file into a sqlite3 database table using Python on a Windows system? I tried using the \".import\" command but it does not seem to be working. Can anyone provide an example of how to do this in sqlite3?"
    },
    {
        "role": "assistant",
        "content": "To import a CSV file into a SQLite database table using Python, you can use the `sqlite3` module in conjunction with Python's built-in `csv` module. Below is an example of how you can achieve this:\n\n```python\nimport sqlite3\nimport csv\n\n# Connect to SQLite database (or create it if it doesn't exist)\nconn = sqlite3.connect('your_database.db')\ncursor = conn.cursor()\n\n# Create a table (replace 'your_table' with the table name and define your columns and data types)\ncursor.execute('''\n    CREATE TABLE IF NOT EXISTS your_table (\n        column1 TEXT,\n        column2 INTEGER,\n        column3 REAL\n        -- Add more columns as needed\n    )\n''')\n\n# Open the CSV file\nwith open('your_file.csv', 'r', newline='', encoding='utf-8') as csv_file:\n    csv_reader = csv.reader(csv_file)\n    \n    # Skip the header row if your CSV file has headers\n    next(csv_reader)\n    \n    # Insert rows into the table\n    for row in csv_reader:\n        cursor.execute('''\n            INSERT INTO your_table (column1, column2, column3)\n            VALUES (?, ?, ?)\n        ''', row)\n\n# Commit the transaction and close the connection\nconn.commit()\nconn.close()\n```\n\n### Steps to Follow:\n1. **Connect to the Database**: Establish a connection to your SQLite database. If the database does not exist, it will be created.\n2. **Create the Table**: Define the table structure. Ensure it matches the structure of your CSV data. Adjust column names and data types as necessary.\n3. **Read the CSV File**: Use Python's `csv` module to open and read the CSV file.\n4. **Insert Data**: Iterate over the rows in the CSV file and insert them into the SQLite table using `INSERT INTO` queries.\n5. **Commit and Close**: Commit the transaction to save changes and close the database connection.\n\nMake sure to replace `'your_database.db'`, `'your_table'`, `'your_file.csv'`, and column names with your specific database, table, and CSV file details. This script assumes that the data types in the table and CSV file match appropriately. Adjust the data types in the `CREATE TABLE` statement as needed."
    }
]