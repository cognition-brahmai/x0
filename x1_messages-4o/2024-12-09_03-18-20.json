[
    {
        "role": "user",
        "content": "How can I unnest or explode a column in a pandas DataFrame into multiple rows? I have a DataFrame where one of the columns is an object (list type cell). Here is the DataFrame:\n\n```python\ndf=pd.DataFrame({'A':[1,2],'B':[[1,2],[1,2]]})\ndf\nOut[458]: \n   A       B\n0  1  [1, 2]\n1  2  [1, 2]\n```\n\nMy expected output is:\n\n```python\n   A  B\n0  1  1\n1  1  2\n3  2  1\n4  2  2\n```\n\nWhat should I do to achieve this? I have seen the related question \"pandas: When cell contents are lists, create a row for each element in the list\", but it only handles one column with a list. I need a solution that can work for multiple columns."
    },
    {
        "role": "assistant",
        "content": "To unnest or explode a column in a pandas DataFrame where the column contains lists, you can use the `explode()` method in pandas. This method is specifically designed to transform each element of a list-like column into a separate row, replicating the index values for the other columns.\n\nHere's how you can achieve the desired output for your example DataFrame:\n\n```python\nimport pandas as pd\n\n# Create the DataFrame\ndf = pd.DataFrame({'A': [1, 2], 'B': [[1, 2], [1, 2]]})\n\n# Use the explode() method on the column 'B'\ndf_exploded = df.explode('B')\n\n# Display the result\nprint(df_exploded)\n```\n\nThis will output:\n\n```\n   A  B\n0  1  1\n0  1  2\n1  2  1\n1  2  2\n```\n\nNote that the index is repeated for the original rows. If you want to reset the index, you can add `.reset_index(drop=True)` to the chain:\n\n```python\ndf_exploded = df.explode('B').reset_index(drop=True)\n```\n\nThis will give you:\n\n```\n   A  B\n0  1  1\n1  1  2\n2  2  1\n3  2  2\n```\n\nThe `explode()` method can be applied to any column that contains list-like objects. If you have more than one such column, you can call `explode()` on each of those columns individually."
    }
]