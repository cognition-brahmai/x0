[
    {
        "role": "user",
        "content": "How can I set a default skip for a specific long-running test in py.test unless a command line parameter is present? I have a test, which I've tried renaming from `test_longrun` to `longrun` and then using the command `py.test mytests.py::longrun`, but this approach doesn't seem to work. I'd like to find a way to not include this particular test in my usual test run, without having to manually deselect it and other tests every time."
    },
    {
        "role": "assistant",
        "content": "To conditionally skip a long-running test in `pytest` unless a specific command-line parameter is present, you can use the `pytest` markers and hooks. Here's a strategy to achieve this:\n\n1. **Define a custom marker** for your long-running tests.\n2. **Use a command-line option** to include them when desired.\n3. **Set up a hook** to skip the tests with this marker unless the option is specified.\n\nHere's how you can implement this:\n\n1. **Create a pytest plugin file** (usually named `conftest.py`) in your test directory and add the following code:\n\n```python\nimport pytest\n\ndef pytest_addoption(parser):\n    parser.addoption(\n        \"--run-long\", action=\"store_true\", default=False, help=\"Run long-running tests\"\n    )\n\ndef pytest_configure(config):\n    config.addinivalue_line(\"markers\", \"longrun: mark test as long-running.\")\n\ndef pytest_collection_modifyitems(config, items):\n    if config.getoption(\"--run-long\"):\n        # If --run-long is specified, do not skip long-running tests\n        return\n    skip_longrun = pytest.mark.skip(reason=\"Need --run-long option to run\")\n    for item in items:\n        if \"longrun\" in item.keywords:\n            item.add_marker(skip_longrun)\n```\n\n2. **Mark your long-running test** with the `@pytest.mark.longrun` decorator:\n\n```python\nimport pytest\n\n@pytest.mark.longrun\ndef test_long_running_function():\n    # Your long-running test code\n    assert True\n```\n\n3. **Run your tests**:\n\n- By default, without the `--run-long` option, the long-running tests will be skipped:\n\n```sh\npytest\n```\n\n- To include the long-running tests, use the `--run-long` option:\n\n```sh\npytest --run-long\n```\n\nWith this setup, your long-running tests will be skipped by default unless you explicitly include them with the `--run-long` command-line option. This approach provides a clean and flexible way to manage the execution of long-running tests in your test suite."
    }
]