[
    {
        "role": "user",
        "content": "Is there a standard method to retrieve the name of an Enumeration member by its value? For instance, given an enumeration class Example with members 'one' and 'two' having values 1 and 2 respectively, and a variable ex_variable with value 1, how can I obtain the string contained in Example.one.name using the value in ex_variable?\n\n```python\nclass Example(enum.Enum):\n    one = 1\n    two = 2\n\nex_variable = 1\n```"
    },
    {
        "role": "assistant",
        "content": "Yes, you can retrieve the name of an enumeration member by its value using the `Example` enumeration class you have defined. Here's how you can do it:\n\n```python\nfrom enum import Enum\n\nclass Example(Enum):\n    one = 1\n    two = 2\n\nex_variable = 1\n\n# Retrieve the name of the enumeration member\nmember_name = Example(ex_variable).name\nprint(member_name)  # Output: 'one'\n```\n\nIn this snippet, `Example(ex_variable)` constructs an enumeration member from the value `ex_variable`, and the `.name` attribute retrieves the name of the enumeration member. If the value does not correspond to any member of the enumeration, a `ValueError` will be raised."
    }
]