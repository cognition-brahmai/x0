[
    {
        "role": "user",
        "content": "How can I use Ruby to extract data from a JSON dataset of stock prices similar to this format:\n{\n  \"stocks\": [\n    {\n      \"symbol\": \"AAPL\",\n      \"open\": 116.55,\n      \"close\": 117.51,\n      \"high\": 118.41,\n      \"low\": 116.05,\n      \"volume\": 100000\n    },\n    {\n      \"symbol\": \"GOOG\",\n      \"open\": 1705.5,\n      \"close\": 1725.45,\n      \"high\": 1732.65,\n      \"low\": 1690.25,\n      \"volume\": 200000\n    },\n    ...\n  ]\n}\nAnd then, using Ruby, what SQL query can I write to calculate the average percentage change in stock prices from opening to closing price for each day in the dataset? Additionally, what Ruby code can I use to determine the top 5 stocks with the highest average daily percentage change over the entire time period, utilizing subqueries and aggregate functions?"
    },
    {
        "role": "assistant",
        "content": "To extract data from a JSON dataset and calculate stock price changes using Ruby, follow these steps. First, you'll need to parse the JSON data and then perform calculations. Finally, you can simulate SQL-like queries using Ruby's Enumerable methods or use a database with ActiveRecord if you prefer.\n\n### Step 1: Parse the JSON Data\n\nYou can use the `json` library in Ruby to parse JSON data:\n\n```ruby\nrequire 'json'\n\njson_data = '{\n  \"stocks\": [\n    {\n      \"symbol\": \"AAPL\",\n      \"open\": 116.55,\n      \"close\": 117.51,\n      \"high\": 118.41,\n      \"low\": 116.05,\n      \"volume\": 100000\n    },\n    {\n      \"symbol\": \"GOOG\",\n      \"open\": 1705.5,\n      \"close\": 1725.45,\n      \"high\": 1732.65,\n      \"low\": 1690.25,\n      \"volume\": 200000\n    }\n  ]\n}'\n\ndata = JSON.parse(json_data)\n```\n\n### Step 2: Calculate Percentage Change\n\nCalculate the percentage change from the opening to closing price for each stock.\n\n```ruby\nstock_changes = data['stocks'].map do |stock|\n  symbol = stock['symbol']\n  open_price = stock['open']\n  close_price = stock['close']\n  percentage_change = ((close_price - open_price) / open_price) * 100\n  { symbol: symbol, percentage_change: percentage_change }\nend\n```\n\n### Step 3: SQL-Like Query in Ruby\n\nIf you were to write an SQL query to calculate the average percentage change, it would look something like this:\n\n```sql\nSELECT symbol, AVG((close - open) / open * 100) AS average_percentage_change\nFROM stocks\nGROUP BY symbol\nORDER BY average_percentage_change DESC\nLIMIT 5;\n```\n\nTo achieve this in Ruby, you can use Enumerable methods:\n\n```ruby\n# Calculate average percentage change for each stock symbol\naverage_changes = stock_changes.group_by { |stock| stock[:symbol] }.map do |symbol, changes|\n  average_change = changes.map { |c| c[:percentage_change] }.sum / changes.size\n  { symbol: symbol, average_percentage_change: average_change }\nend\n\n# Sort and get top 5 stocks with the highest average daily percentage change\ntop_5_stocks = average_changes.sort_by { |stock| -stock[:average_percentage_change] }.first(5)\n\n# Output the result\ntop_5_stocks.each do |stock|\n  puts \"Symbol: #{stock[:symbol]}, Average Percentage Change: #{stock[:average_percentage_change]}%\"\nend\n```\n\n### Explanation:\n\n1. **JSON Parsing:** Use `JSON.parse` to convert the JSON string into a Ruby hash.\n2. **Percentage Change Calculation:** Iterate over each stock to calculate the daily percentage change.\n3. **Grouping and Averaging:** Group the changes by stock symbol and calculate the average using Ruby's `Enumerable` methods.\n4. **Sorting and Limiting:** Sort the results by average percentage change in descending order and select the top 5.\n\nThis approach allows you to manipulate and analyze the data without needing a database, using Ruby's built-in capabilities. If you prefer, you can load the data into a database and use ActiveRecord or another ORM to execute SQL queries directly."
    }
]