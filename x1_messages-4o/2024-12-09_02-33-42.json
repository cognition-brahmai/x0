[
    {
        "role": "user",
        "content": "I am running tests in Django using the `manage.py test` command. After the tests are executed, only the number of passed tests is printed to the console. Is there a way for me to see which tests were actually executed, from what module, and in what order? The current output is as follows:\n\n```\n(virtualenv) G:\\Project\\>python manage.py test\nCreating test database for alias 'default'...\nTrue\n..\n----------------------------------------------------------------------\nRan 2 tests in 0.017s\n\nOK\nDestroying test database for alias 'default'...\n```\n\nI haven't found any solution in the Django documentation to achieve this yet."
    },
    {
        "role": "assistant",
        "content": "To see more detailed output about which tests are executed, you can increase the verbosity level of the `manage.py test` command in Django. By default, the verbosity level is set to 1, which gives minimal output. You can increase it to 2 or 3 to get more detailed information about the tests that are being run.\n\nHere's how you can do it:\n\n1. **Increase verbosity level**: Use the `-v` option followed by a number to set the verbosity level. For example, to set the verbosity to level 2, you would use:\n\n   ```bash\n   python manage.py test -v 2\n   ```\n\n   This will show detailed information about each test that is run, including the module and class names.\n\n2. **Use a test runner with more detailed output**: You might consider using a different test runner that provides more detailed output. For example, `pytest` is a popular testing framework that can be used with Django. It provides more detailed output by default.\n\n3. **Custom Test Runner**: If you need even more customization, you can create a custom test runner by subclassing Django's `DiscoverRunner` and overriding methods to include additional logging.\n\nHere's an example of how to increase verbosity using the `-v` option:\n\n```bash\npython manage.py test -v 2\n```\n\nBy doing this, you should be able to see which tests are being executed, from which modules, and in what order they are run."
    }
]