[
    {
        "role": "user",
        "content": "How can I filter a JSON array in Python to only include objects where the type is 1? \n\nHere's the current JSON array I'm working with:\n```json\n[ \n    {\n        \"type\": 1,\n        \"name\" : \"name 1\"\n    }, \n    {\n        \"type\": 2,\n        \"name\" : \"name 2\"\n    }, \n    {\n        \"type\": 1,\n        \"name\" : \"name 3\"\n    }, \n]\n```\nI want to retrieve all JSON objects that have `type=1`, so the result would look like this:\n```json\n[ \n    {\n        \"type\": 1,\n        \"name\" : \"name 1\"\n    }, \n    {\n        \"type\": 1,\n        \"name\" : \"name 3\"\n    }, \n]\n```"
    },
    {
        "role": "assistant",
        "content": "You can filter a JSON array in Python using a list comprehension. Here's how you can do it for the given JSON array to include only objects where `type` is 1:\n\n```python\nimport json\n\n# Your JSON array\njson_data = '''[\n    {\n        \"type\": 1,\n        \"name\" : \"name 1\"\n    }, \n    {\n        \"type\": 2,\n        \"name\" : \"name 2\"\n    }, \n    {\n        \"type\": 1,\n        \"name\" : \"name 3\"\n    }\n]'''\n\n# Parse the JSON data\ndata = json.loads(json_data)\n\n# Filter the array\nfiltered_data = [item for item in data if item[\"type\"] == 1]\n\n# Print the result\nprint(json.dumps(filtered_data, indent=4))\n```\n\nThis code snippet will output:\n\n```json\n[\n    {\n        \"type\": 1,\n        \"name\": \"name 1\"\n    },\n    {\n        \"type\": 1,\n        \"name\": \"name 3\"\n    }\n]\n```\n\nHere's a brief explanation of what happens in the code:\n\n1. The JSON string is parsed into a Python list of dictionaries using `json.loads`.\n2. A list comprehension is used to iterate through the list and select only those dictionaries where the `type` is 1.\n3. The filtered list is then converted back to a JSON-formatted string using `json.dumps` with an indentation of 4 spaces for pretty-printing."
    }
]