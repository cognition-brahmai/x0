[
    {
        "role": "user",
        "content": "I am having an issue while running a cell in IPython Notebook. My cell consists of two commands: `salaries.head()` and `teams.head()`, where `salaries` and `teams` are both Pandas dataframes. When I run the cell, I should be getting the outputs of both commands, but I am only seeing the output of the `teams` dataframe. However, if I run `salaries.head()` separately, I can see the result for the `salaries` dataframe. How can I modify my code so that I can see the outputs of both the dataframe?"
    },
    {
        "role": "assistant",
        "content": "In IPython Notebook (or Jupyter Notebook), by default, only the output of the last expression in a cell is displayed. To display the outputs of both commands within the same cell, you can use one of the following methods:\n\n1. **Using `display()` Function:**\n\n   The `display()` function from the IPython.display module can be used to explicitly display multiple outputs in a single cell. Here's how you can modify your code:\n\n   ```python\n   from IPython.display import display\n\n   display(salaries.head())\n   display(teams.head())\n   ```\n\n   By using `display()`, you ensure that the outputs of both `salaries.head()` and `teams.head()` are shown.\n\n2. **Using Print Statements:**\n\n   You can also use print statements to display the outputs, although it might not be as visually appealing as using `display()`:\n\n   ```python\n   print(salaries.head())\n   print(teams.head())\n   ```\n\n3. **Assigning Outputs to Variables:**\n\n   Assign the outputs to variables and then evaluate those variables to display both outputs:\n\n   ```python\n   head_salaries = salaries.head()\n   head_teams = teams.head()\n\n   head_salaries, head_teams\n   ```\n\n   This will display the tuple containing both dataframes. However, for better formatting, using `display()` is recommended.\n\n4. **Use Pandas Options for Display:**\n\n   If you frequently need to show multiple outputs, you can adjust the notebook settings, though this is more of a workaround and not specific to displaying multiple DataFrames:\n\n   ```python\n   pd.set_option('display.expand_frame_repr', False)  # This keeps DataFrames from being truncated in the notebook.\n   ```\n\nUsing any of these methods should allow you to display both DataFrame outputs in a single cell."
    }
]