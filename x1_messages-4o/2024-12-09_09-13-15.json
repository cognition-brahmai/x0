[
    {
        "role": "user",
        "content": "Can you provide a function that can flatten a nested list in Python?"
    },
    {
        "role": "assistant",
        "content": "Certainly! Here's a Python function that can flatten a nested list using recursion:\n\n```python\ndef flatten_list(nested_list):\n    flat_list = []\n    for item in nested_list:\n        if isinstance(item, list):\n            flat_list.extend(flatten_list(item))\n        else:\n            flat_list.append(item)\n    return flat_list\n\n# Example usage:\nnested_list = [1, [2, [3, 4], 5], 6, [7, 8]]\nflat_list = flatten_list(nested_list)\nprint(flat_list)\n```\n\nThis function checks each item in the list to see if it is a list itself. If it is, the function calls itself recursively to flatten that sublist. If it is not a list, the item is added to the flat list. The result is a single, flattened list."
    }
]