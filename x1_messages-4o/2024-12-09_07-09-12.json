[
    {
        "role": "user",
        "content": "How do I use a GitHub API token in Python to make requests such as POST, DELETE, or PATCH? I have been able to obtain the API token using username and password, but when I attempt to use it in my request headers to create a gist, I receive a 401 error with a \"Bad Credentials\" message. In my request, I'm providing username and API-Token in headers as shown below:\n\n```python\nself.header = {'X-Github-Username': self.username,\n               'X-Github-API-Token': self.api_token                  \n              }\n#then requesting(post) to create a gist\nr = requests.post(url, headers=headers)\n```\nWhat is the proper way to use API-Tokens without inputting the password?"
    },
    {
        "role": "assistant",
        "content": "When using a GitHub API token to authenticate requests, you should use the token in the `Authorization` header rather than using custom headers like `X-Github-Username` or `X-Github-API-Token`. The token should be included in the `Authorization` header in the format `token <your_token>`. Here's how you can modify your code to use the token correctly:\n\n```python\nimport requests\n\n# Your GitHub API token\napi_token = 'your_api_token_here'\n\n# GitHub API endpoint for creating a gist\nurl = 'https://api.github.com/gists'\n\n# Headers with the proper Authorization header\nheaders = {\n    'Authorization': f'token {api_token}',\n    'Accept': 'application/vnd.github.v3+json'\n}\n\n# Example payload for creating a gist\npayload = {\n    \"description\": \"Example Gist\",\n    \"public\": True,\n    \"files\": {\n        \"example.txt\": {\n            \"content\": \"Hello, world!\"\n        }\n    }\n}\n\n# Make the POST request to create a gist\nresponse = requests.post(url, headers=headers, json=payload)\n\n# Check the response\nif response.status_code == 201:\n    print(\"Gist created successfully!\")\n    print(\"Gist URL:\", response.json().get('html_url'))\nelse:\n    print(\"Failed to create gist. Status code:\", response.status_code)\n    print(\"Response:\", response.json())\n```\n\n### Key Points:\n1. **Authorization Header**: Use the `Authorization` header with the value `token <your_token>`.\n2. **JSON Payload**: Make sure to send the payload as JSON by using the `json` parameter in `requests.post`.\n3. **Accept Header**: It's a good practice to include the `Accept` header specifying the version of the API you are targeting, like `'application/vnd.github.v3+json'`.\n\nThis should resolve the \"Bad Credentials\" error, assuming your token is valid and has the necessary permissions for the action you are attempting. Make sure your token has the scopes required for the operations you are performing."
    }
]