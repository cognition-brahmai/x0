[
    {
        "role": "user",
        "content": "How can I run uwsgi with virtualenv for my python flask project? I have set up a startup script where I start the application using uwsgi. I have also started using virtualenv and hence, the packages are installed under the 'projectname\\flask\\Lib\\site-packages'. I'm using nginx as the web server and the config looks like this:\n\n```python\nlocation / { try_files $uri @graderbuild; }\nlocation @graderbuild {\n    include uwsgi_params;\n    uwsgi_param UWSGI_CHDIR /usr/local/grader/build;\n    uwsgi_param UWSGI_PYHOME /usr/local/grader/build;\n    uwsgi_pass 127.0.0.1:3031;\n}\n```\n\nI'm starting uwsgi using this:\n\n```python\nexec /usr/local/bin/uwsgi --master --socket 127.0.0.1:3031\n    --wsgi-file restserver.py --callable app --processes 4 --die-on-term\n    --threads 2 >> /var/log/grader-build.log 2>&1\n```\n\nHowever, I am encountering an error 'ImportError: No module named flask_wtf'. How can I configure the setup to use the virtualenv site-packages? I would prefer the location to be in the startup script and not in the nginx config."
    },
    {
        "role": "assistant",
        "content": "To run `uWSGI` with `virtualenv` for your Flask project and resolve the `ImportError` for `flask_wtf`, you need to ensure that `uWSGI` is aware of your virtual environment and its site-packages directory. Here's how you can modify your startup script to include the virtual environment:\n\n1. **Activate the Virtual Environment in the Script**: You need to activate your virtual environment in the script where you start `uWSGI`. This can be done by specifying the virtual environment's Python home and path.\n\n2. **Modify the `uWSGI` Command**: Use the `--virtualenv` option in your `uWSGI` command to specify the path to your virtual environment. This ensures that `uWSGI` uses the correct Python environment and its packages.\n\nHere's an example of how you can modify your startup script:\n\n```bash\n#!/bin/bash\n\n# Path to your virtual environment\nVIRTUALENV_PATH=\"/path/to/your/virtualenv\"\n\n# Activate the virtual environment\nsource $VIRTUALENV_PATH/bin/activate\n\n# Start uWSGI using the virtual environment\nexec /usr/local/bin/uwsgi --master --socket 127.0.0.1:3031 \\\n    --wsgi-file restserver.py --callable app --processes 4 --die-on-term \\\n    --threads 2 --virtualenv $VIRTUALENV_PATH \\\n    >> /var/log/grader-build.log 2>&1\n```\n\nMake sure to replace `/path/to/your/virtualenv` with the actual path to your virtual environment. This will ensure that `uWSGI` uses the packages installed in your virtual environment, including `flask_wtf`.\n\nAdditionally, ensure your Flask app and all other necessary packages are installed in the virtual environment. You can install them using:\n\n```bash\nsource /path/to/your/virtualenv/bin/activate\npip install flask flask_wtf\n```\n\nBy following these steps, your `uWSGI` should use the virtual environment correctly, and your Flask application should run without the `ImportError`."
    }
]