[
    {
        "role": "user",
        "content": "What is the best way to locally develop a Python package? I have cloned the GitHub module and made necessary changes to an existing Python module, but I'm unsure how to import the local package instead of the one that is already installed."
    },
    {
        "role": "assistant",
        "content": "To develop a Python package locally and use your modified version instead of the installed one, you can follow these steps:\n\n1. **Create a Virtual Environment:**\n   It's a good practice to work within a virtual environment to avoid conflicts with other packages and system-level installations.\n\n   ```bash\n   python -m venv myenv\n   ```\n\n   Activate the virtual environment:\n\n   - On Windows:\n     ```bash\n     myenv\\Scripts\\activate\n     ```\n\n   - On macOS/Linux:\n     ```bash\n     source myenv/bin/activate\n     ```\n\n2. **Uninstall the Installed Package:**\n   Ensure that the global or previously installed version of the package is removed so that your local version is used.\n\n   ```bash\n   pip uninstall <package-name>\n   ```\n\n3. **Develop Mode Installation:**\n   Navigate to the directory where you cloned the GitHub module (where the `setup.py` or `pyproject.toml` file is located) and install it in \"editable\" or \"develop\" mode.\n\n   ```bash\n   pip install -e .\n   ```\n\n   This command tells pip to install the package in such a way that changes made to the source code reflect immediately without needing to reinstall.\n\n4. **Verify the Installation:**\n   You can verify that the package is installed correctly by checking the list of installed packages.\n\n   ```bash\n   pip list\n   ```\n\n   Your package should appear in the list, and it should indicate that it's in editable mode.\n\n5. **Run Your Code:**\n   Now, you can import the package in your Python scripts as usual, and it will use the version you've modified locally.\n\n6. **Testing Changes:**\n   As you make changes to your local package, you can immediately test them by running your Python scripts or tests. Since the package is installed in editable mode, there's no need to reinstall it after each change.\n\nBy following these steps, you can effectively develop and test your local Python package modifications before pushing them back to the repository or deploying them."
    }
]