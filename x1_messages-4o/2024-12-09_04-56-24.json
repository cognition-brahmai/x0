[
    {
        "role": "user",
        "content": "How can I round off floating point numbers to the nearest 0.5 in Python? For example, I want to round off 1.3 to 1.5, 2.6 to 2.5, 3.0 to 3.0, and 4.1 to 4.0. Currently, I'm using the following function:\n\n```python\ndef round_of_rating(number):\n    return round((number * 2) / 2)\n```\nHowever, this function only rounds off to the closest integer. What would be the correct way to round off to the nearest 0.5?"
    },
    {
        "role": "assistant",
        "content": "To round off floating-point numbers to the nearest 0.5 in Python, you can modify your function to multiply the number by 2, round it to the nearest integer, and then divide it by 2 again. Here's how you can do it:\n\n```python\ndef round_to_nearest_half(number):\n    return round(number * 2) / 2\n\n# Test cases\nprint(round_to_nearest_half(1.3))  # Output: 1.5\nprint(round_to_nearest_half(2.6))  # Output: 2.5\nprint(round_to_nearest_half(3.0))  # Output: 3.0\nprint(round_to_nearest_half(4.1))  # Output: 4.0\n```\n\nThis function works by first scaling the number so that the 0.5 intervals become 1.0 intervals, then rounding to the nearest integer, and finally scaling back to the original range by dividing by 2. This ensures that you get the nearest 0.5 value."
    }
]