[
    {
        "role": "user",
        "content": "How can I rotate a specific subplot in a matplotlib figure by 90 degrees counterclockwise? I have a figure with three subplots: one in the top left quadrant, one in the top right quadrant, and one in the bottom right quadrant. The top right figure contains a two-dimensional image, and the other two plots are the projection onto the Y and X axis respectively. I want to rotate the top left quadrant subplot such that the x-axis of that plot aligns with the y-axis of the 2-d plot. I understand that I could manually swap the x and y data, rotate the axis labels, and create a plot title on the left hand side. However, I am looking for a simpler way to achieve this, preferably with a single function call that would rotate the entire finished plot by 90 degrees. Is there a straightforward way to do this in matplotlib?"
    },
    {
        "role": "assistant",
        "content": "In Matplotlib, there isn't a built-in single function to rotate an entire subplot by 90 degrees. However, you can achieve the desired effect by manually adjusting the data and the axes. Here\u2019s how you can rotate a specific subplot, such as the top left quadrant, by 90 degrees counterclockwise:\n\n1. **Swap the data**: Swap the x and y data for the subplot you want to rotate.\n\n2. **Adjust the axes**: You need to adjust the tick positions and labels accordingly to give the appearance of rotation.\n\n3. **Rotate the labels and title**: You may also need to rotate the axis labels and adjust the title position.\n\nHere is a simple example demonstrating how to rotate the top left subplot:\n\n```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Sample data\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\n\n# Create a figure with three subplots\nfig, axs = plt.subplots(2, 2, figsize=(10, 8))\naxs[1, 0].axis('off')  # Hide the bottom left subplot as it's not used\n\n# Original 2D image plot in the top right\naxs[0, 1].imshow(np.random.rand(10, 10), cmap='viridis')\naxs[0, 1].set_title('2D Image')\n\n# Rotate the top left plot by swapping x and y\naxs[0, 0].plot(y, x)\naxs[0, 0].invert_xaxis()  # Invert x-axis to simulate 90-degree CCW rotation\naxs[0, 0].set_title('Rotated Projection')\naxs[0, 0].set_xlabel('Projection Y')\naxs[0, 0].set_ylabel('Projection X')\n\n# Bottom right projection onto X\naxs[1, 1].plot(x, y)\naxs[1, 1].set_title('Projection X')\n\nplt.tight_layout()\nplt.show()\n```\n\n### Key Adjustments:\n- **Data Swap**: The data for the plot in the top left quadrant is swapped (i.e., `y` becomes `x` and vice versa).\n- **Axis Inversion**: The x-axis is inverted using `invert_xaxis()` to simulate the 90-degree counterclockwise rotation.\n- **Label Adjustments**: Axis labels and titles are adjusted to reflect the new orientation.\n\nThis approach effectively rotates the plot in terms of visualization, though it does not physically rotate the axes themselves. By carefully adjusting the data and axes properties, you can achieve the appearance of a subplot being rotated."
    }
]