[
    {
        "role": "user",
        "content": "What is the code to find the sum of two numbers in Haskell?"
    },
    {
        "role": "assistant",
        "content": "In Haskell, you can define a simple function to find the sum of two numbers. Here's a basic example:\n\n```haskell\n-- Define a function to sum two numbers\nsumTwoNumbers :: Num a => a -> a -> a\nsumTwoNumbers x y = x + y\n\n-- Example usage\nmain :: IO ()\nmain = do\n    let number1 = 5\n    let number2 = 7\n    let result = sumTwoNumbers number1 number2\n    putStrLn (\"The sum is: \" ++ show result)\n```\n\nIn this code:\n\n- `sumTwoNumbers` is a function that takes two arguments `x` and `y` and returns their sum.\n- `Num a => a -> a -> a` is a type signature that specifies the function works with any numeric type `a`.\n- `main` is the entry point of the program where we define two numbers, calculate their sum using `sumTwoNumbers`, and print the result."
    }
]