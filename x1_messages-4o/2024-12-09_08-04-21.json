[
    {
        "role": "user",
        "content": "How can I draw multiple charts in the same IPython Notebook cell? Currently, my code draws two lines on the same chart. Instead, I want each line to be drawn on a separate chart and ideally, these charts should be placed next to each other, not one after the other. Here is my current code:\n\n```python\nipython notebook --pylab inline\n\ndf['korisnika'].plot()\ndf['osiguranika'].plot()\n```\nI am aware that I could draw the second line in the next cell to get two separate charts, but I want the charts to be close to each other as they represent the same logical unit. How can I achieve this?"
    },
    {
        "role": "assistant",
        "content": "To display multiple charts next to each other in the same IPython Notebook cell, you can use the `matplotlib` library to create subplots. By creating subplots, you can control the layout of your charts and place them side by side. Here's how you can modify your code to achieve this:\n\n```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and a set of subplots with 1 row and 2 columns\nfig, axes = plt.subplots(nrows=1, ncols=2, figsize=(12, 6))\n\n# Plot the data on the first subplot\ndf['korisnika'].plot(ax=axes[0], title='Korisnika')\n\n# Plot the data on the second subplot\ndf['osiguranika'].plot(ax=axes[1], title='Osiguranika')\n\n# Adjust the layout to prevent overlap\nplt.tight_layout()\n\n# Display the plots\nplt.show()\n```\n\nIn this code:\n\n- We use `plt.subplots()` to create a figure and a set of subplots with 1 row and 2 columns.\n- We specify the `ax` parameter in the `plot()` method to direct each plot to a specific subplot.\n- We use `plt.tight_layout()` to automatically adjust the subplot parameters to give specified padding and prevent overlap.\n- The `figsize` parameter in `plt.subplots()` controls the size of the entire figure, allowing you to adjust the size of the charts.\n\nThis will result in two charts being displayed side by side, each with its own separate plot."
    }
]