[
    {
        "role": "user",
        "content": "How can I have different fields for add and change pages in Django admin? I have a Django application with the following class in my admin.py:\n\n```python\nclass SoftwareVersionAdmin(ModelAdmin):\n    fields = (\"product\", \"version_number\", \"description\", \"media\", \"relative_url\", \"current_version\")\n    list_display = [\"product\", \"version_number\", \"size\", \"current_version\", \"number_of_clients\", \"percent_of_clients\"]\n    list_display_links = (\"version_number\",)\n    list_filter = ['product',]\n```\nI would like to maintain the current fields for the add page, but I want to display different fields for the change page. How can I achieve this?"
    },
    {
        "role": "assistant",
        "content": "To have different fields for the add and change pages in the Django admin, you can override the `get_fields` method in your `ModelAdmin` class. This allows you to customize the fields displayed depending on whether you're adding a new object or changing an existing one.\n\nHere's how you can modify your `SoftwareVersionAdmin` class to achieve this:\n\n```python\nfrom django.contrib import admin\n\nclass SoftwareVersionAdmin(admin.ModelAdmin):\n    list_display = [\"product\", \"version_number\", \"size\", \"current_version\", \"number_of_clients\", \"percent_of_clients\"]\n    list_display_links = (\"version_number\",)\n    list_filter = ['product',]\n\n    def get_fields(self, request, obj=None):\n        if obj:  # obj is not None, so this is a change page\n            return (\"product\", \"version_number\", \"description\", \"current_version\")\n        else:  # obj is None, so this is an add page\n            return (\"product\", \"version_number\", \"description\", \"media\", \"relative_url\", \"current_version\")\n\nadmin.site.register(YourModel, SoftwareVersionAdmin)\n```\n\nIn this setup:\n\n- The `get_fields` method checks if `obj` is `None` to determine if it's the add page. If `obj` is `None`, it means you're adding a new instance, so it returns the fields you want on the add page.\n- If `obj` is not `None`, it means you're on the change page, so it returns a different set of fields for that page.\n\nRemember to replace `YourModel` with the actual name of your model class. This way, you can customize the fields shown on the add and change pages separately."
    }
]