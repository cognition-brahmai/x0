[
    {
        "role": "user",
        "content": "I have a list of numbers and I am trying to calculate the difference between each pair of consecutive elements. I can achieve this using a \"for\" loop, but I'm looking for a simpler and more elegant one-liner solution. Can anyone help me code this function? For example, given the list `[0, 4, 10, 100]`, the output should be `[4, 6, 90]`."
    },
    {
        "role": "assistant",
        "content": "Certainly! You can achieve this using a list comprehension in Python. Here's a one-liner solution to calculate the difference between each pair of consecutive elements in a list:\n\n```python\nnumbers = [0, 4, 10, 100]\ndifferences = [numbers[i+1] - numbers[i] for i in range(len(numbers) - 1)]\nprint(differences)\n```\n\nThis will output `[4, 6, 90]` as expected. The list comprehension iterates over the indices of the list (except the last index), calculating the difference between each consecutive pair of elements."
    }
]