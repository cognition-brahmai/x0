[
    {
        "role": "user",
        "content": "In Python 2.6, I used to format my nested context manager like this:\n\n```python\nwith nested(\n    context1,\n    context2\n) as a, b:\n    pass\n```\n\nHowever, from Python 2.7 `nested` is deprecated. I have seen many examples of multiple context managers on a single line, but I can't find a syntax that allows them on multiple lines. How can I do this? The following formats are not working:\n\n```python\n# Not working\nwith (\n    context1,\n    context2\n) as a, b:\n    pass\n\nwith context1 as a,\n    context2 as b:\n    pass\n```"
    },
    {
        "role": "assistant",
        "content": "In Python 2.7 and later versions, the `nested()` function is deprecated, and instead, you can use multiple context managers in a `with` statement. However, Python does not support breaking a `with` statement into multiple lines as you might with parentheses for other constructs. Instead, you can use a backslash (`\\`) to break the line at appropriate places, or simply use separate lines for each context manager. Here's how you can do it:\n\n1. Using Backslashes for Line Continuation:\n\n```python\nwith context1 as a, \\\n     context2 as b:\n    pass\n```\n\n2. Using Separate `with` Statements:\n\n```python\nwith context1 as a:\n    with context2 as b:\n        pass\n```\n\nThese methods allow you to handle multiple context managers cleanly and follow the PEP 8 style guide for Python code. Choose the one that best fits your readability and style preferences."
    }
]