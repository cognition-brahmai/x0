[
    {
        "role": "user",
        "content": "How can I write a C program that generates 10 random numbers from a uniform distribution between -2 and 3?"
    },
    {
        "role": "assistant",
        "content": "To generate random numbers in C, you can use the `rand()` function from the standard library. The `rand()` function generates pseudo-random numbers. To get numbers in a specific range, you need to scale and shift the output of `rand()`. Here's a simple program that generates 10 random numbers uniformly distributed between -2 and 3:\n\n```c\n#include <stdio.h>\n#include <stdlib.h>\n#include <time.h>\n\nint main() {\n    // Seed the random number generator with the current time\n    srand(time(NULL));\n\n    // Generate and print 10 random numbers between -2 and 3\n    for (int i = 0; i < 10; i++) {\n        // Generate a random number between 0 and 1\n        double random = (double)rand() / RAND_MAX;\n\n        // Scale and shift to get a number between -2 and 3\n        double scaled_random = -2 + random * (3 - (-2));\n\n        printf(\"%f\\n\", scaled_random);\n    }\n\n    return 0;\n}\n```\n\n### Explanation:\n- **Seeding the RNG**: `srand(time(NULL));` seeds the random number generator with the current time to ensure a different sequence of random numbers each time the program runs.\n- **Generating Random Numbers**: `(double)rand() / RAND_MAX` generates a random floating-point number between 0 and 1.\n- **Scaling and Shifting**: `-2 + random * (3 - (-2))` scales the number to the desired range, from -2 to 3.\n\nCompile and run this program to see 10 random numbers between -2 and 3. Note that for more advanced random number generation, especially for scientific purposes, you might want to look into libraries like the GNU Scientific Library (GSL) or use the `random()` function if available."
    }
]