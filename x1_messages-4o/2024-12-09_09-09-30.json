[
    {
        "role": "user",
        "content": "Can you design a function that calculates the hamming distance between two strings?"
    },
    {
        "role": "assistant",
        "content": "Certainly! The Hamming distance between two strings of equal length is the number of positions at which the corresponding symbols are different. Here's a Python function to calculate the Hamming distance:\n\n```python\ndef hamming_distance(str1, str2):\n    if len(str1) != len(str2):\n        raise ValueError(\"Strings must be of the same length to calculate Hamming distance.\")\n    \n    distance = 0\n    for ch1, ch2 in zip(str1, str2):\n        if ch1 != ch2:\n            distance += 1\n            \n    return distance\n\n# Example usage:\nstr1 = \"karolin\"\nstr2 = \"kathrin\"\nprint(\"Hamming Distance:\", hamming_distance(str1, str2))\n```\n\nThis function first checks if the two strings are of equal length, and if not, it raises a `ValueError`. Then, it iterates over each pair of characters from the strings, incrementing the distance every time the characters differ. The final distance is returned."
    }
]