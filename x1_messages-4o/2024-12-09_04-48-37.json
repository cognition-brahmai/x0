[
    {
        "role": "user",
        "content": "I have a list in Python that looks like this:\n\n```\n[[12, 6], [12, 0], [0, 6], [12, 0], [12, 0], [6, 0], [12, 6], [0, 6], [12, 0], [0, 6], [0, 6], [12, 0], [0, 6], [6, 0], [6, 0], [12, 0], [6, 0], [12, 0], [12, 0], [0, 6], [0, 6], [12, 6], [6, 0], [6, 0], [12, 6], [12, 0], [12, 0], [0, 6], [6, 0], [12, 6], [12, 6], [12, 6], [12, 0], [12, 0], [12, 0], [12, 0], [12, 6], [12, 0], [12, 0], [12, 6], [0, 6], [0, 6], [6, 0], [12, 6], [12, 6], [12, 6], [12, 6], [12, 6], [12, 0], [0, 6], [6, 0], [12, 0], [0, 6], [12, 6], [12, 6], [0, 6], [12, 0], [6, 0], [6, 0], [12, 6], [12, 0], [0, 6], [12, 0], [12, 0], [12, 0], [6, 0], [12, 6], [12, 6], [12, 6], [12, 6], [0, 6], [12, 0], [12, 6], [0, 6], [0, 6], [12, 0], [0, 6], [12, 6], [6, 0], [12, 6], [12, 6], [12, 0], [12, 0], [12, 6], [0, 6], [6, 0], [12, 0], [6, 0], [12, 0], [12, 0], [12, 6], [12, 0], [6, 0], [12, 6], [6, 0], [12, 0], [6, 0], [12, 0], [6, 0], [6, 0]]\n```\n\nI am looking to count the frequency of each element in this list, similar to the `table` function in R. For example, I want to get something like `freq[[12,6]] = 40`. Is there an equivalent method in Python 3 to achieve this?"
    },
    {
        "role": "assistant",
        "content": "In Python, you can use the `collections` module, specifically the `Counter` class, to count the frequency of elements in a list. To count the frequency of sublists (like pairs of numbers in your case), you can convert each sublist into a tuple (since lists aren't hashable and can't be used as dictionary keys directly). Here's how you can do it:\n\n```python\nfrom collections import Counter\n\n# Your list of lists\ndata = [\n    [12, 6], [12, 0], [0, 6], [12, 0], [12, 0], [6, 0], [12, 6], [0, 6], \n    [12, 0], [0, 6], [0, 6], [12, 0], [0, 6], [6, 0], [6, 0], [12, 0], \n    [6, 0], [12, 0], [12, 0], [0, 6], [0, 6], [12, 6], [6, 0], [6, 0], \n    [12, 6], [12, 0], [12, 0], [0, 6], [6, 0], [12, 6], [12, 6], [12, 6], \n    [12, 0], [12, 0], [12, 0], [12, 0], [12, 6], [12, 0], [12, 0], [12, 6], \n    [0, 6], [0, 6], [6, 0], [12, 6], [12, 6], [12, 6], [12, 6], [12, 6], \n    [12, 0], [0, 6], [6, 0], [12, 0], [0, 6], [12, 6], [12, 6], [0, 6], \n    [12, 0], [6, 0], [6, 0], [12, 6], [12, 0], [0, 6], [12, 0], [12, 0], \n    [12, 0], [6, 0], [12, 6], [12, 6], [12, 6], [12, 6], [0, 6], [12, 0], \n    [12, 6], [0, 6], [0, 6], [12, 0], [0, 6], [12, 6], [6, 0], [12, 6], \n    [12, 6], [12, 0], [12, 0], [12, 6], [0, 6], [6, 0], [12, 0], [6, 0], \n    [12, 0], [12, 0], [12, 6], [12, 0], [6, 0], [12, 6], [6, 0], [12, 0], \n    [6, 0], [12, 0], [6, 0], [6, 0]\n]\n\n# Convert lists to tuples to make them hashable\ndata_tuples = [tuple(sublist) for sublist in data]\n\n# Use Counter to count frequencies\nfrequency = Counter(data_tuples)\n\n# Print the frequencies\nfor pair, count in frequency.items():\n    print(f\"freq{pair} = {count}\")\n```\n\nThis will output the frequency of each unique pair in your list. The `Counter` automatically creates a dictionary-like object where each key is a tuple from your list and the value is the frequency of that tuple."
    }
]