[
    {
        "role": "user",
        "content": "I am looking for a solution in Python to check if a directory contains any data before deleting it. I am currently using wget to browse through several pages for pictures and creating a directory for each page. Not all pages have images, but the directory gets created regardless. After creating the directory, I need to check if any files were dropped into it. If the directory is empty, I want to delete it. Here is my current code:\n\n```python\ndir = 'Files\\\\%s' % (directory)\nos.mkdir(dir)\ncmd = 'wget -r -l1 -nd -np -A.jpg,.png,.gif -P %s %s' %(dir,  i[1])\nos.system(cmd)\nif not os.path.isdir(dir):\n    os.rmdir(dir)\n```\n\nWhat is the best way to validate the presence of data in a directory before deleting it?"
    },
    {
        "role": "assistant",
        "content": "To check if a directory contains any files before deciding to delete it, you can use the `os.listdir()` function, which returns a list of entries in the directory. If the list is empty, then the directory is empty. Here's how you can modify your code to include this check:\n\n```python\nimport os\n\ndir = 'Files\\\\%s' % (directory)\nos.mkdir(dir)\ncmd = 'wget -r -l1 -nd -np -A.jpg,.png,.gif -P %s %s' % (dir, i[1])\nos.system(cmd)\n\n# Check if the directory is empty\nif not os.listdir(dir):\n    os.rmdir(dir)\n```\n\n### Explanation:\n1. **os.listdir(dir)**: This function returns a list of the names of the entries in the directory given by `dir`. If the list is empty, the directory is empty.\n2. **os.rmdir(dir)**: This function removes the directory, but it will only succeed if the directory is empty.\n\nThis solution ensures that you only attempt to remove directories that are empty after the download operation. If there are any files (images in your case), the directory will not be deleted."
    }
]