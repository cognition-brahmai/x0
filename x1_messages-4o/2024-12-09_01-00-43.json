[
    {
        "role": "user",
        "content": "I am using GridSearchCV for training my model and I am curious to know if GridSearchCV stores all scores for each parameter combinations. If it does, could you provide an example on how I can retrieve these scores? Below is an example code of how I implemented GridSearchCV.\n\n```python\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.feature_extraction.text import TfidfTransformer\nfrom sklearn.grid_search import GridSearchCV\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.naive_bayes import MultinomialNB\n\nX_train = ['qwe rtyuiop', 'asd fghj kl', 'zx cv bnm', 'qw erty ui op', 'as df ghj kl', 'zxc vb nm', 'qwe rt yu iop', 'asdfg hj kl', 'zx cvb nm',\n          'qwe rt yui op', 'asd fghj kl', 'zx cvb nm', 'qwer tyui op', 'asd fg hjk l', 'zx cv b nm', 'qw ert yu iop', 'as df gh jkl', 'zx cvb nm',\n           'qwe rty uiop', 'asd fghj kl', 'zx cvbnm', 'qw erty ui op', 'as df ghj kl', 'zxc vb nm', 'qwe rtyu iop', 'as dfg hj kl', 'zx cvb nm',\n          'qwe rt yui op', 'asd fg hj kl', 'zx cvb nm', 'qwer tyuiop', 'asd fghjk l', 'zx cv b nm', 'qw ert yu iop', 'as df gh jkl', 'zx cvb nm']    \n\ny_train = ['1', '2', '3', '1', '1', '3', '1', '2', '3',\n          '1', '2', '3', '1', '4', '1', '2', '2', '4', \n          '1', '2', '3', '1', '1', '3', '1', '2', '3',\n          '1', '2', '3', '1', '4', '1', '2', '2', '4']    \n\nparameters = {  \n                'clf__alpha': (1e-1, 1e-2),\n                 'vect__ngram_range': [(1,2),(1,3)],\n                 'vect__max_df': (0.9, 0.98)\n            }\n\ntext_clf_Pipline_MultinomialNB = Pipeline([('vect', CountVectorizer()),\n                                           ('tfidf', TfidfTransformer()),\n                                           ('clf', MultinomialNB()),                     \n                                          ])\ngs_clf = GridSearchCV(text_clf_Pipline_MultinomialNB, parameters, n_jobs=-1)   \n\ngs_classifier = gs_clf.fit(X_train, y_train)\n```"
    },
    {
        "role": "assistant",
        "content": "Yes, `GridSearchCV` in scikit-learn stores all scores for each parameter combination that it evaluates. You can access these scores using the `cv_results_` attribute of the `GridSearchCV` object after fitting it to your data. The `cv_results_` attribute is a dictionary that contains a lot of useful information.\n\nHere's an example of how you can retrieve and display the scores for each parameter combination:\n\n```python\nimport pandas as pd\n\n# Access the cv_results_ attribute\nresults = gs_clf.cv_results_\n\n# Create a DataFrame from cv_results_\nresults_df = pd.DataFrame(results)\n\n# Display the mean test scores for each parameter combination\nprint(\"Mean test scores for each parameter combination:\")\nprint(results_df[['params', 'mean_test_score']])\n\n# If you want to see more details, you can check other columns in results_df\n# For example, std_test_score, mean_fit_time, etc.\nprint(\"\\nFull cv_results_ DataFrame:\")\nprint(results_df)\n```\n\nIn this example, `results_df` is a DataFrame that contains the scores and other relevant information for each parameter combination. By checking the `params` and `mean_test_score` columns, you can see the performance of each combination. If you want to delve deeper, you can explore other columns such as `std_test_score`, `mean_fit_time`, `std_fit_time`, etc., to gain more insights into the grid search process."
    }
]