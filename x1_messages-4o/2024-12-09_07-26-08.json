[
    {
        "role": "user",
        "content": "How can I make multiple GET requests using Python over Tor and use a different IP address for each request?\n\nI have made one request using the following code:\n\n```python\nimport socks\nimport socket\nsocks.set_default_proxy(socks.SOCKS5, \"127.0.0.1\", 9150)\nsocket.socket = socks.socksocket\nimport requests\nprint (requests.get('http://icanhazip.com')).content\n```\n\nHow can I change the IP address for making another request?"
    },
    {
        "role": "assistant",
        "content": "To make multiple GET requests using Python over Tor with a different IP address for each request, you can use the `stem` library to control the Tor process and request a new identity for each request. Here's a step-by-step guide:\n\n1. **Install Required Libraries**: Make sure you have the necessary libraries installed. You can install them using pip:\n\n   ```bash\n   pip install requests[socks]\n   pip install stem\n   ```\n\n2. **Configure Tor**: Ensure that Tor is running and configured to allow control. You'll need to have the Tor service running on your machine. Typically, Tor listens on port 9050 for SOCKS connections and port 9051 for control connections. You can start Tor using the Tor Browser or by running the Tor service.\n\n3. **Control Tor Using Stem**: Use the `stem` library to interact with Tor and request a new identity.\n\nHere's a complete example code to achieve this:\n\n```python\nimport requests\nimport socks\nimport socket\nfrom stem import Signal\nfrom stem.control import Controller\nimport time\n\n# Function to change Tor identity\ndef renew_connection():\n    with Controller.from_port(port=9051) as controller:\n        controller.authenticate(password='your_control_password')  # Replace with your control password\n        controller.signal(Signal.NEWNYM)\n\n# Configure requests to use Tor's SOCKS proxy\ndef get_tor_session():\n    session = requests.Session()\n    session.proxies = {\n        'http': 'socks5h://127.0.0.1:9050',\n        'https': 'socks5h://127.0.0.1:9050'\n    }\n    return session\n\n# Loop to make multiple requests with different IPs\nfor _ in range(5):  # Change the range as needed for the number of requests\n    renew_connection()\n    time.sleep(5)  # Sleep to allow Tor to switch IPs\n    session = get_tor_session()\n    response = session.get('http://icanhazip.com')\n    print(response.text.strip())  # Print the current IP address\n```\n\n### Key Points:\n\n- **Tor Control Password**: Ensure that you have set a control password for your Tor configuration in your `torrc` file. Add the following lines to your `torrc` file and replace `your_control_password` with your desired password:\n\n  ```\n  ControlPort 9051\n  HashedControlPassword <hashed_password>\n  ```\n\n  You can generate the hashed password using the `tor --hash-password your_password` command.\n\n- **Sleep Time**: After sending the `NEWNYM` signal, it\u2019s important to wait a few seconds (`time.sleep(5)`) to ensure Tor has time to switch to a new IP address.\n\n- **Loop**: The script uses a loop to make multiple requests. Adjust the range to the number of requests you wish to make.\n\nThis setup allows you to send multiple requests through Tor, changing the exit node IP address for each request. Make sure your Tor setup is configured correctly and running."
    }
]