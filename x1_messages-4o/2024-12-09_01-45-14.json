[
    {
        "role": "user",
        "content": "I am attempting to draw a polygon using the python interface to opencv, cv2. I've created an empty image, which is a 640x480 numpy array. I have a list of polygons (four point quadrilaterals) to draw on the image, but I'm having trouble with the format to instruct cv2 where the quadrilaterals should be. I keep encountering the following error: \"OpenCV Error: Assertion failed (points.checkVector(2, CV_32S) >= 0) in fillConvexPoly\". What does the python interface to opencv2.fillPoly want as input? \n\nHere is my code: \n\n```python\nbinary_image = np.zeros(image.shape,dtype='int8')\nfor rect in expected:\n    print(np.array(rect['boundary']))\n    cv2.fillConvexPoly(binary_image, np.array(rect['boundary']), 255)\nfig = pyplot.figure(figsize=(16, 14))\nax = fig.add_subplot(111)\nax.imshow(binary_image)\npyplot.show()\n```\n\nThe 'boundary' in my list of rects in 'expected' contains a list of (x,y) points. The code prints the following points:\n\n```python\n[[ 91 233]\n [419 227]\n [410 324]\n [ 94 349]]\n```\n\nAccording to my understanding, this is the list of points for a polygon. However, it seems like the list has an invalid `points.checkvector`. I'm not sure what that is and all my attempts to find it through Google have been unsuccessful."
    },
    {
        "role": "assistant",
        "content": "The error you're encountering is related to the format of the points being passed to the `cv2.fillConvexPoly` function. The function expects the points to be in a specific format, and it seems like there's an issue with how your points are structured.\n\nThe `cv2.fillConvexPoly` function requires the input points to be a NumPy array of integers with a specific shape. The shape should be `(n, 1, 2)`, where `n` is the number of points in the polygon. Your points appear to be in the shape `(n, 2)`, which is why you're getting the error.\n\nHere's how you can modify your code to ensure the points are in the correct format:\n\n```python\nimport numpy as np\nimport cv2\nfrom matplotlib import pyplot as plt\n\n# Create an empty image\nbinary_image = np.zeros((480, 640), dtype='int8')\n\n# Example list of rectangles with their boundaries\nexpected = [\n    {'boundary': [[91, 233], [419, 227], [410, 324], [94, 349]]}\n]\n\nfor rect in expected:\n    # Convert the list of points to a NumPy array with the correct shape\n    points = np.array(rect['boundary'], dtype=np.int32)\n    points = points.reshape((-1, 1, 2))\n    \n    # Fill the polygon\n    cv2.fillConvexPoly(binary_image, points, 255)\n\n# Display the image\nfig = plt.figure(figsize=(16, 14))\nax = fig.add_subplot(111)\nax.imshow(binary_image, cmap='gray')\nplt.show()\n```\n\n### Key Points:\n- **Reshape the array**: The `reshape((-1, 1, 2))` changes the shape from `(n, 2)` to `(n, 1, 2)`, which is the expected format for `cv2.fillConvexPoly`.\n- **Data type**: Ensure the points are of integer type (`np.int32`) as required by OpenCV.\n\nThis should resolve the error, and your polygon should be drawn correctly on the image."
    }
]