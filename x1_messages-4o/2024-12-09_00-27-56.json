[
    {
        "role": "user",
        "content": "How can I add seconds to a datetime value in Python? I attempted to modify the second property like this:\n\n```python\ndatetime.now().second += 3\n```\nHowever, this approach did not work. How can I solve this issue?"
    },
    {
        "role": "assistant",
        "content": "In Python, the `datetime` objects are immutable, meaning you cannot change their properties directly. Instead, you should use the `timedelta` class from the `datetime` module to add time to a `datetime` object. Here's how you can add seconds to a `datetime` object:\n\n```python\nfrom datetime import datetime, timedelta\n\n# Get the current datetime\ncurrent_datetime = datetime.now()\n\n# Create a timedelta object representing 3 seconds\ntime_to_add = timedelta(seconds=3)\n\n# Add the timedelta to the current datetime\nnew_datetime = current_datetime + time_to_add\n\nprint(\"Original datetime:\", current_datetime)\nprint(\"New datetime:\", new_datetime)\n```\n\nThis will correctly add 3 seconds to the current datetime and provide you with a new `datetime` object reflecting that change."
    }
]