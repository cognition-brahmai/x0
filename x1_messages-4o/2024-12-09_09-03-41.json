[
    {
        "role": "user",
        "content": "What is the solution in C++ to calculate the sum of all even numbers in a given array?"
    },
    {
        "role": "assistant",
        "content": "To calculate the sum of all even numbers in a given array using C++, you can iterate through the array, check if each number is even, and add it to a running sum if it is. Here is a simple C++ program that demonstrates this:\n\n```cpp\n#include <iostream>\n#include <vector>\n\nint sumOfEvenNumbers(const std::vector<int>& numbers) {\n    int sum = 0;\n    for (int number : numbers) {\n        if (number % 2 == 0) {\n            sum += number;\n        }\n    }\n    return sum;\n}\n\nint main() {\n    // Example array\n    std::vector<int> numbers = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};\n\n    int sum = sumOfEvenNumbers(numbers);\n    std::cout << \"The sum of all even numbers in the array is: \" << sum << std::endl;\n\n    return 0;\n}\n```\n\nIn this program:\n- We define a function `sumOfEvenNumbers` that takes a vector of integers as its parameter.\n- We initialize a variable `sum` to zero, which will store the sum of even numbers.\n- We iterate through each number in the vector using a range-based for loop.\n- We check if a number is even by using the modulus operator (`%`). If the number is even, we add it to the sum.\n- Finally, we print the result. \n\nYou can modify the `numbers` vector in the `main` function to test with different input arrays."
    }
]