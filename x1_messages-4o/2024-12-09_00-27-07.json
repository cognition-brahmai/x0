[
    {
        "role": "user",
        "content": "I have a dataframe with various columns of different data types. Some columns do not contain any information. How can I use Pandas to calculate summary statistics such as max, min, and median for each column and return a dataframe in the following format:\n\n```python\ncolumnname, max, min, median\nis_martian, NA, NA, FALSE\n```\n\nHere is an example of the dataframe I have:\n\n```python\nshopper_num,is_martian,number_of_items,count_pineapples,birth_country,transportation_method\n1,FALSE,0,0,MX,\n2,FALSE,1,0,MX,\n3,FALSE,0,0,MX,\n4,FALSE,22,0,MX,\n5,FALSE,0,0,MX,\n6,FALSE,0,0,MX,\n7,FALSE,5,0,MX,\n8,FALSE,0,0,MX,\n9,FALSE,4,0,MX,\n10,FALSE,2,0,MX,\n11,FALSE,0,0,MX,\n12,FALSE,13,0,MX,\n13,FALSE,0,0,CA,\n14,FALSE,0,0,US,\n```"
    },
    {
        "role": "assistant",
        "content": "To calculate summary statistics like max, min, and median for each column in your DataFrame and return the results in the specified format, you can use Pandas along with some helper functions. Here's a step-by-step approach:\n\n1. Load the data into a Pandas DataFrame.\n2. Create a function to calculate max, min, and median, handling different data types appropriately.\n3. Apply the function to each column and store the results in a new DataFrame.\n\nHere is the Python code to achieve this:\n\n```python\nimport pandas as pd\nimport numpy as np\n\n# Sample data as a string (for demonstration purposes)\ndata = \"\"\"shopper_num,is_martian,number_of_items,count_pineapples,birth_country,transportation_method\n1,FALSE,0,0,MX,\n2,FALSE,1,0,MX,\n3,FALSE,0,0,MX,\n4,FALSE,22,0,MX,\n5,FALSE,0,0,MX,\n6,FALSE,0,0,MX,\n7,FALSE,5,0,MX,\n8,FALSE,0,0,MX,\n9,FALSE,4,0,MX,\n10,FALSE,2,0,MX,\n11,FALSE,0,0,MX,\n12,FALSE,13,0,MX,\n13,FALSE,0,0,CA,\n14,FALSE,0,0,US,\"\"\"\n\n# Read the data into a DataFrame\ndf = pd.read_csv(pd.compat.StringIO(data))\n\n# Function to calculate max, min, and median\ndef calculate_stats(column):\n    if column.dtype == 'object':  # Handle object type columns\n        if column.nunique() == 1:  # If only one unique value, return it\n            return column.iloc[0], column.iloc[0], column.iloc[0]\n        else:\n            return 'NA', 'NA', 'NA'\n    else:  # Handle numeric type columns\n        return column.max(), column.min(), column.median()\n\n# Create a new DataFrame for storing results\nsummary_df = pd.DataFrame(columns=['columnname', 'max', 'min', 'median'])\n\n# Apply the function to each column\nfor col in df.columns:\n    max_val, min_val, median_val = calculate_stats(df[col])\n    summary_df = summary_df.append({'columnname': col, 'max': max_val, 'min': min_val, 'median': median_val}, ignore_index=True)\n\n# Display the resulting DataFrame\nprint(summary_df)\n```\n\nThis code will output the summary statistics for each column in your DataFrame. For non-numeric columns with all identical values, it directly returns that value as max, min, and median. For other object columns, it returns 'NA'. Adjust this logic as needed to fit the specific requirements for your dataset."
    }
]