[
    {
        "role": "user",
        "content": "I have a dataset of temperature records spanning multiple years, with each entry formatted as \"date,time,temperature\". The dates and times of each record are not uniform across years. I want to plot the data for each year on the same graph for comparison purposes, with the X-axis representing the months from January to December and the Y-axis representing the temperature. How can I accomplish this in Python?"
    },
    {
        "role": "assistant",
        "content": "To plot your temperature data for each year on the same graph, you can use Python libraries such as Pandas for data manipulation and Matplotlib for plotting. Here\u2019s a step-by-step guide to help you accomplish this:\n\n1. **Import Necessary Libraries**:\n   Make sure you have Pandas and Matplotlib installed. You can install them using `pip` if you haven't already:\n   ```bash\n   pip install pandas matplotlib\n   ```\n\n2. **Load and Prepare Your Data**:\n   Start by loading your data into a Pandas DataFrame. You\u2019ll need to parse the date and time information to extract the year and month.\n\n3. **Plot the Data**:\n   Group the data by year and month, then plot it.\n\nHere's an example script to guide you:\n\n```python\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n# Load your dataset\n# Assuming your dataset is in a CSV file named 'temperature_data.csv'\ndata = pd.read_csv('temperature_data.csv', parse_dates=[['date', 'time']])\n\n# Extract year and month for grouping\ndata['year'] = data['date_time'].dt.year\ndata['month'] = data['date_time'].dt.month\n\n# Group by year and month, then calculate the average temperature for each month\nmonthly_avg = data.groupby(['year', 'month'])['temperature'].mean().reset_index()\n\n# Plotting\nplt.figure(figsize=(14, 8))\n\n# Iterate over each year and plot\nfor year in monthly_avg['year'].unique():\n    year_data = monthly_avg[monthly_avg['year'] == year]\n    plt.plot(year_data['month'], year_data['temperature'], marker='o', label=str(year))\n\n# Customize the plot\nplt.title('Monthly Average Temperature Comparison Across Years')\nplt.xlabel('Month')\nplt.ylabel('Average Temperature')\nplt.xticks(range(1, 13), ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'])\nplt.legend(title='Year')\nplt.grid(True)\nplt.tight_layout()\n\n# Show the plot\nplt.show()\n```\n\n### Explanation:\n- **Data Loading**: The `parse_dates` parameter combines the date and time columns into a single datetime object.\n- **Data Manipulation**: Extracts the year and month from the datetime object for further grouping.\n- **Grouping and Averaging**: The data is grouped by year and month, and the mean temperature is calculated for each group.\n- **Plotting**: Each year is plotted on the same graph with a unique line, and the graph is customized for clarity.\n\nThis script assumes your dataset file is named 'temperature_data.csv'. You may need to adjust the file path and column names according to your actual dataset."
    }
]