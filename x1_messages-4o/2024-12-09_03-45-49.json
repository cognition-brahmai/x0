[
    {
        "role": "user",
        "content": "What is the simplest way to check if a string contains a string from a list? I find myself repeatedly writing this piece of code:\n\n```python\ndef stringInList(str, list):\n    retVal = False\n    for item in list:\n        if str in item:\n            retVal = True\n    return retVal\n```\n\nI usually use it in an if statement like this:\n\n```python\nif stringInList(str, list):\n    print 'string was found!'\n```\n\nIs there a way I can write this function more simply or with less code?"
    },
    {
        "role": "assistant",
        "content": "Yes, you can simplify the function using Python's built-in any() function, which checks if any element of an iterable is true. Here's how you can rewrite your function:\n\n```python\ndef string_in_list(s, lst):\n    return any(s in item for item in lst)\n```\n\nWith this function, you can use it in an if statement just as you did before:\n\n```python\nif string_in_list(str, list):\n    print('string was found!')\n```\n\nThis version of the function is more concise and utilizes Python's expressive capabilities to achieve the same result."
    }
]