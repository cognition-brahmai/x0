[
    {
        "role": "user",
        "content": "How can I add a new element to an array in Bash without specifying the index, similar to how it's done in PHP with $array[] = 'foo';? Currently, I am doing it like this:\n\n```bash\narray[0]='foo'\narray[1]='bar'\n```"
    },
    {
        "role": "assistant",
        "content": "In Bash, you can add a new element to an array without specifying the index by using the `+=` operator. This appends the element to the end of the array, similar to how it's done in PHP. Here's an example:\n\n```bash\n# Initialize the array\narray=()\n\n# Add elements to the array\narray+=('foo')\narray+=('bar')\n\n# Print the array elements\nfor element in \"${array[@]}\"; do\n  echo \"$element\"\ndone\n```\n\nIn this example, each `+=` operation appends an element to the end of the array. When you loop through the array using `\"${array[@]}\"`, it will print each element in the order they were added."
    }
]