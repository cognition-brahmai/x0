[
    {
        "role": "user",
        "content": "Why doesn't TAB completion work in a Jupyter Notebook when it works fine in the iPython terminal? I have tried running the command `$ sudo easy_install readline`, which wrote the .egg file in `/usr/local/lib/python2.7/dist-packages/readline-6.2.4.1-py2.7-linux-x86_64.egg`, but it still doesn't work. I also tried to locate the `ipython_notebook_config.py` or `ipython_config.py` files but failed. I'm using Python 3.5 and iPython 4.0.0 installed in Ubuntu 15.10 at `/usr/share/anaconda3/bin/ipython`. Any suggestions?"
    },
    {
        "role": "assistant",
        "content": "When TAB completion doesn't work in a Jupyter Notebook but works in the IPython terminal, it's usually related to differences in how these environments handle completions and configurations. Here are some steps you can take to troubleshoot and resolve the issue:\n\n1. **Ensure Jupyter is Up-to-Date**: Sometimes, compatibility issues can arise due to outdated software. Ensure that your Jupyter Notebook and IPython are up-to-date. You can update them using pip:\n\n   ```bash\n   pip install --upgrade jupyter ipython\n   ```\n\n2. **Check Jupyter Extensions**: Sometimes, extensions or configurations might interfere with TAB completion. You can try disabling all notebook extensions to see if one of them is causing the issue.\n\n3. **Inspect Kernel**: Make sure the kernel you are using in the Jupyter Notebook is the one you expect. Sometimes, if you have multiple Python environments, the kernel might be pointing to a different Python installation.\n\n   You can check the kernel by going to the Jupyter Notebook interface and selecting `Kernel -> Change Kernel`.\n\n4. **Setup IPython and Jupyter Configurations**: Since you couldn't locate the configuration files, you might need to create them. You can generate default configuration files by running:\n\n   ```bash\n   ipython profile create\n   ```\n\n   This command should create an IPython profile with default configuration files, including `ipython_config.py`, which you can then customize.\n\n5. **Inspect Autocompletion Configuration**: Ensure that autocompletion is enabled in your Jupyter Notebook configuration. You can add the following line to your `ipython_config.py`:\n\n   ```python\n   c.Completer.use_jedi = False\n   ```\n\n   This setting can sometimes resolve issues by using the older completion system instead of Jedi.\n\n6. **Install Readline for Python 3**: Since you're using Python 3.5, ensure that the readline module is installed for Python 3, not Python 2. You can install it using:\n\n   ```bash\n   sudo apt-get install libreadline-dev\n   ```\n\n   Or, if using a virtual environment, you can install it using pip:\n\n   ```bash\n   pip install readline\n   ```\n\n7. **Check for Errors in Console**: Sometimes, the browser's JavaScript console may have errors or warnings that can help diagnose the problem. Open the developer tools in your browser and navigate to the console tab to check for any relevant messages when you try to use TAB completion.\n\nBy following these steps, you should be able to identify and resolve the issue with TAB completion in your Jupyter Notebook. If the problem persists, consider creating a new virtual environment and reinstalling Jupyter Notebook and its dependencies to ensure a clean setup."
    }
]