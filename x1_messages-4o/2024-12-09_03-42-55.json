[
    {
        "role": "user",
        "content": "I am new to Python and Docker and have created a small Flask app (test.py) with two hardcoded values:\n\n```python\nusername = \"test\"\npassword = \"12345\"\n```\n\nI can create a Docker image and run a container using the Dockerfile below:\n\n```dockerfile\nFROM python:3.6\n\nRUN mkdir /code  \nWORKDIR /code  \nADD . /code/  \nRUN pip install -r requirements.txt  \n\nEXPOSE 5000  \nCMD [\"python\", \"/code/test.py\"]`\n```\n\nI want to know how to create ENV variables for the `username` and `password`, and how to pass dynamic values to these variables when running containers."
    },
    {
        "role": "assistant",
        "content": "To use environment variables in your Flask app and pass dynamic values when running a Docker container, you can follow these steps:\n\n### Step 1: Modify Your Python Code\n\nFirst, update your `test.py` Flask app to read the `username` and `password` from environment variables instead of hardcoding them. You can use the `os` module in Python to achieve this:\n\n```python\nimport os\n\nusername = os.getenv('USERNAME', 'default_username')\npassword = os.getenv('PASSWORD', 'default_password')\n\nprint(f\"Username: {username}, Password: {password}\")\n```\n\nIn this code, `os.getenv` is used to fetch the environment variables `USERNAME` and `PASSWORD`. If these variables are not set, it will use the default values provided (`'default_username'` and `'default_password'`).\n\n### Step 2: Update Your Dockerfile\n\nThe Dockerfile does not need significant changes, but you can specify default environment variables within it if required. However, this step is optional if you are going to pass them dynamically at runtime.\n\nHere's how your Dockerfile might look:\n\n```dockerfile\nFROM python:3.6\n\nRUN mkdir /code  \nWORKDIR /code  \nADD . /code/  \nRUN pip install -r requirements.txt  \n\nEXPOSE 5000  \nCMD [\"python\", \"/code/test.py\"]\n```\n\n### Step 3: Build Your Docker Image\n\nBuild your Docker image with a command like this:\n\n```bash\ndocker build -t my-flask-app .\n```\n\n### Step 4: Run Your Docker Container with Environment Variables\n\nNow you can run your Docker container and pass the `username` and `password` as environment variables using the `-e` flag:\n\n```bash\ndocker run -d -p 5000:5000 -e USERNAME=my_user -e PASSWORD=my_pass my-flask-app\n```\n\nIn this command:\n- `-d` runs the container in detached mode.\n- `-p 5000:5000` maps port 5000 of the container to port 5000 on your host machine.\n- `-e USERNAME=my_user` sets the `USERNAME` environment variable inside the container.\n- `-e PASSWORD=my_pass` sets the `PASSWORD` environment variable inside the container.\n\nThat's it! Your Flask app should now be able to dynamically use the username and password you provide when running the container."
    }
]