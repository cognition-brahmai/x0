[
    {
        "role": "user",
        "content": "I am trying to create threads in Python. I want one function to run simultaneously with another. Here's the example code I've been examining:\n\n```python\nimport threading\n\ndef MyThread (threading.thread):\n    # doing something........\n\ndef MyThread2 (threading.thread):\n    # doing something........\n\nMyThread().start()\nMyThread2().start()\n```\n\nHowever, I'm having trouble getting this to work. I would prefer to use a threaded function instead of a class. Here is the working script I have:\n\n```python\nfrom threading import Thread\n\nclass myClass():\n\n    def help(self):\n        os.system('./ssh.py')\n\n    def nope(self):\n        a = [1,2,3,4,5,6,67,78]\n        for i in a:\n            print i\n            sleep(1)\n\n\nif __name__ == \"__main__\":\n    Yep = myClass()\n    thread = Thread(target = Yep.help)\n    thread2 = Thread(target = Yep.nope)\n    thread.start()\n    thread2.start()\n    thread.join()\n    print 'Finished'\n```\nHow can I achieve threading with functions?"
    },
    {
        "role": "assistant",
        "content": "To achieve threading with functions in Python without using classes, you can directly use the `Thread` class from the `threading` module and specify your functions as the target. Here's how you can modify your existing example to use functions for threading:\n\n```python\nimport threading\nimport os\nfrom time import sleep\n\n# Define the first function to run in a thread\ndef help_function():\n    os.system('./ssh.py')\n\n# Define the second function to run in a thread\ndef nope_function():\n    a = [1, 2, 3, 4, 5, 6, 67, 78]\n    for i in a:\n        print(i)\n        sleep(1)\n\nif __name__ == \"__main__\":\n    # Create threads targeting the functions\n    thread1 = threading.Thread(target=help_function)\n    thread2 = threading.Thread(target=nope_function)\n    \n    # Start the threads\n    thread1.start()\n    thread2.start()\n    \n    # Wait for both threads to complete\n    thread1.join()\n    thread2.join()\n    \n    print('Finished')\n```\n\n### Key Points:\n- **Importing and Using Thread**: Import `Thread` from the `threading` module. You can then create a thread by passing the target function you want to run in the thread.\n- **Defining Functions**: Define your functions normally without using classes. These functions will be the targets of your threads.\n- **Creating and Starting Threads**: Create a `Thread` object for each function you want to run concurrently, then call `start()` on each thread object.\n- **Joining Threads**: Use `join()` to ensure the main program waits for both threads to complete before proceeding.\n\nThis approach allows you to execute functions concurrently using threading in Python."
    }
]