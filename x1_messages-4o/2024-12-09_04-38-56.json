[
    {
        "role": "user",
        "content": "I am experiencing a `UnicodeEncodeError: 'ascii' codec can't encode character u'\\xa0' in position 20: ordinal not in range(128)` when dealing with unicode characters from text fetched from different web pages using BeautifulSoup. The error is intermittent and only occurs on certain pages. I suspect it might be due to the fact that some pages may be encoded, while others may not. The relevant section of code is as follows:\n\n```python\nagent_telno = agent.find('div', 'agent_contact_number')\nagent_telno = '' if agent_telno is None else agent_telno.contents[0]\np.agent_info = str(agent_contact + ' ' + agent_telno).strip()\n```\n\nAnd the stack trace is as follows:\n\n```python\nTraceback (most recent call last):\n  File \"foobar.py\", line 792, in <module>\n    p.agent_info = str(agent_contact + ' ' + agent_telno).strip()\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\xa0' in position 20: ordinal not in range(128)\n```\n\nAll the sites I am working with are based in the UK and provide data meant for UK consumption. How can I solve this problem consistently?"
    },
    {
        "role": "assistant",
        "content": "The `UnicodeEncodeError` you're encountering is due to the fact that Python 2.x tries to automatically encode Unicode strings to ASCII by default when you call `str()` on them, and it fails with characters that are outside the ASCII range (0-127). The character `u'\\xa0'` is a non-breaking space, which is not part of the ASCII character set.\n\nHere are a few steps you can take to resolve this issue:\n\n1. **Use Unicode Strings:**\n   Ensure that you are working with Unicode strings throughout your code. You can do this by using `unicode()` instead of `str()` for string conversions in Python 2.x.\n\n   ```python\n   p.agent_info = unicode(agent_contact + ' ' + agent_telno).strip()\n   ```\n\n2. **Decode Content Properly:**\n   Decode the content you fetch from web pages to Unicode as soon as you get it. BeautifulSoup can help with this, as it automatically tries to handle character encoding when you pass the `from_encoding` parameter.\n\n   ```python\n   soup = BeautifulSoup(html_content, 'html.parser', from_encoding='utf-8')\n   ```\n\n   This assumes that the HTML content is correctly labeled with the encoding, or you can specify it manually if you know it.\n\n3. **Handle Non-breaking Spaces:**\n   You can replace non-breaking spaces with regular spaces or remove them entirely:\n\n   ```python\n   agent_telno = agent_telno.replace(u'\\xa0', u' ')\n   ```\n\n4. **Set the Default Encoding:**\n   If you have control over the environment your script runs in, you can set the default encoding to UTF-8. This is more of a workaround and is not recommended as a permanent solution.\n\n   ```python\n   import sys\n   reload(sys)\n   sys.setdefaultencoding('utf-8')\n   ```\n\n5. **Upgrade to Python 3:**\n   If possible, consider upgrading to Python 3, where strings are Unicode by default, and these types of issues are less common.\n\nBy ensuring that you're working with Unicode throughout your code and handling character encodings properly, you should be able to consistently avoid these types of errors."
    }
]