[
    {
        "role": "user",
        "content": "How can I capture the SIGINT signal in Python? I am currently working on a Python script that initiates multiple processes and database connections. Occasionally, I need to terminate the script using the Ctrl+C command, but I would like to perform some cleanup tasks before the script exits. In Perl, I would use the following code to achieve this:\n\n```perl\n$SIG{'INT'} = 'exit_gracefully';\n\nsub exit_gracefully {\n    print \"Caught ^C \\n\";\n    exit (0);\n}\n```\n\nHow can I implement a similar functionality in Python?"
    },
    {
        "role": "assistant",
        "content": "In Python, you can achieve similar functionality by using the `signal` module to capture the `SIGINT` signal (which is sent when you press Ctrl+C) and perform any necessary cleanup before exiting. Here's a basic example of how you can implement this:\n\n```python\nimport signal\nimport sys\n\n# Define a handler function to be called when the signal is received\ndef exit_gracefully(signum, frame):\n    print(\"Caught Ctrl+C, performing cleanup...\")\n    # Perform your cleanup tasks here, e.g., closing database connections\n    # ...\n    print(\"Cleanup done, exiting.\")\n    sys.exit(0)\n\n# Register the signal handler for SIGINT\nsignal.signal(signal.SIGINT, exit_gracefully)\n\n# Example main loop to simulate a running script\nprint(\"Running... Press Ctrl+C to exit.\")\ntry:\n    while True:\n        pass  # Simulate long-running task\nexcept KeyboardInterrupt:\n    # This is optional, as the signal handler will take care of cleanup\n    pass\n```\n\n### Explanation:\n\n1. **Import the Required Modules**: The `signal` module is used to handle signals. The `sys` module is used to exit the program.\n\n2. **Define the Signal Handler**: The `exit_gracefully` function is defined to handle the SIGINT signal. This is where you can add any cleanup code needed before the script exits.\n\n3. **Register the Signal Handler**: `signal.signal(signal.SIGINT, exit_gracefully)` registers `exit_gracefully` as the handler for the SIGINT signal.\n\n4. **Main Loop**: A simple infinite loop is used here to simulate a long-running task. When you press Ctrl+C, the `exit_gracefully` function is called.\n\nThis setup allows you to perform necessary cleanup actions before the script exits when interrupted by a SIGINT signal. You can add any specific cleanup logic, such as closing files or database connections, within the `exit_gracefully` function."
    }
]