[
    {
        "role": "user",
        "content": "In Python, I am using OpenCV cv2 to draw a rectangle on an image with the following code: `cv2.rectangle(frame,(x,y),(x1,y1),(0,255,0),2)`. However, I would like to also add text information on these rectangles. How can I achieve this? Is there a pre-existing implementation I can use or should I match the top left coordinate of the rectangle and attempt to display a different cv2 text element with the cv2 rectangle element? I am not interested in using the object_detection. visualisation utilities available with TensorFlow."
    },
    {
        "role": "assistant",
        "content": "To add text to your rectangles using OpenCV, you can indeed use the `cv2.putText()` function. This function allows you to overlay text on an image at specified coordinates. You can place the text near or inside the rectangle by carefully choosing the coordinates. Here's a basic example of how you can achieve this:\n\n```python\nimport cv2\n\n# Sample image\nframe = cv2.imread('path_to_your_image.jpg')\n\n# Coordinates for the rectangle\nx, y, x1, y1 = 50, 50, 200, 200\n\n# Draw the rectangle\ncv2.rectangle(frame, (x, y), (x1, y1), (0, 255, 0), 2)\n\n# Text to be added\ntext = \"Sample Text\"\n\n# Choose a font\nfont = cv2.FONT_HERSHEY_SIMPLEX\n\n# Add text just above the rectangle\ntext_x = x\ntext_y = y - 10  # Slightly above the rectangle\n\n# Add the text to the image\ncv2.putText(frame, text, (text_x, text_y), font, 0.5, (255, 255, 255), 1, cv2.LINE_AA)\n\n# Show the image\ncv2.imshow('Image with Rectangle and Text', frame)\ncv2.waitKey(0)\ncv2.destroyAllWindows()\n```\n\n### Explanation:\n- **`cv2.rectangle()`**: Draws a rectangle with specified coordinates and color.\n- **`cv2.putText()`**: Adds text to the image. It takes parameters like the text itself, position, font, font scale, color, and line type.\n  - **`(text_x, text_y)`**: Coordinates where the text will start. Adjust this according to your needs.\n  - **`font`**: Choose any of the fonts available in OpenCV (e.g., `cv2.FONT_HERSHEY_SIMPLEX`).\n  - **`font scale`**: Adjusts the size of the text.\n  - **`color`**: Text color in BGR format.\n  - **`line thickness`**: Thickness of the text lines.\n  - **`cv2.LINE_AA`**: Anti-aliased line type for smooth text.\n\nThis example adds text slightly above the rectangle, but you can adjust the `text_y` coordinate to place it inside or at any other preferred location relative to the rectangle. Adjust the `font scale` and `color` to suit your needs."
    }
]