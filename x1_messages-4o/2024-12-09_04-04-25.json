[
    {
        "role": "user",
        "content": "I am using Django admin for my website and there is a customization I want to implement. I have a model with a TextField that can take up to 300 characters. In the Django admin, when the model is listed, I want to limit the text displayed in the Admin list display to 100 characters. Is there a way to do this within the Django Admin class? Here is my current code:\n\nIn admin.py:\n```\nclass ApplicationAdmin(admin.ModelAdmin):\n    model = Application\n    list_display = [ \"title1\", \"title2\"]\n```\nIn models.py:\n```\nclass Application(models.Model):\n    title1 = models.TextField(max_length=300)\n    title2 = models.TextField(max_length=300)\n```\nHow can I limit the text displayed in the Admin list to 100 characters?"
    },
    {
        "role": "assistant",
        "content": "To limit the text displayed in the Django admin list to 100 characters, you can define a custom method in the `ApplicationAdmin` class and use it in the `list_display` attribute. This method will truncate the text to 100 characters, ensuring that only a part of the text is shown in the admin list view.\n\nHere's how you can modify your code:\n\nIn `admin.py`:\n\n```python\nfrom django.contrib import admin\nfrom .models import Application\n\nclass ApplicationAdmin(admin.ModelAdmin):\n    model = Application\n    \n    # Custom method to truncate text\n    def truncated_title1(self, obj):\n        return (obj.title1[:100] + '...') if len(obj.title1) > 100 else obj.title1\n\n    def truncated_title2(self, obj):\n        return (obj.title2[:100] + '...') if len(obj.title2) > 100 else obj.title2\n\n    # Adding custom methods to list_display\n    list_display = [\"truncated_title1\", \"truncated_title2\"]\n\n    # Optional: Set short descriptions for the custom methods\n    truncated_title1.short_description = 'Title 1'\n    truncated_title2.short_description = 'Title 2'\n\n# Register the model with the custom admin class\nadmin.site.register(Application, ApplicationAdmin)\n```\n\nIn this code, `truncated_title1` and `truncated_title2` are custom methods defined within the `ApplicationAdmin` class. They take the object `obj` as an argument, truncate the `title1` and `title2` fields to 100 characters, and add an ellipsis (`...`) if the text exceeds 100 characters. These methods are then added to the `list_display` attribute so they appear in the admin list view.\n\nThis way, you can effectively limit the text displayed in the Django admin list without modifying the actual data stored in the database."
    }
]