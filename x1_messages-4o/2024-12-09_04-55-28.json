[
    {
        "role": "user",
        "content": "How can I filter a Django query using a list of values instead of querying each value individually? For example, I currently have a list of ids like this [1, 3, 6, 7, 9] and I'm querying each id individually using a for loop:\n\n```python\nids = [1, 3, 6, 7, 9]\n\nfor id in ids:\n    MyModel.objects.filter(pk=id)\n```\n\nI would like to filter all of these ids in a single query, something like this:\n```python\nMyModel.objects.filter(pk=[1, 3, 6, 7, 9])\n```\nBut I can't figure out how to do this."
    },
    {
        "role": "assistant",
        "content": "To filter a Django query using a list of values in a single query, you can use the `__in` lookup. This allows you to filter objects where the field value is within the specified list. For your specific case, you can filter by primary key (`pk`) using the `__in` lookup as follows:\n\n```python\nids = [1, 3, 6, 7, 9]\n\n# Use the __in lookup to filter by a list of IDs in a single query\nfiltered_objects = MyModel.objects.filter(pk__in=ids)\n```\n\nThis will return a queryset of `MyModel` instances where the primary key is one of the values in the `ids` list. The `__in` lookup is efficient and allows you to avoid multiple database queries, as it performs the filtering in a single query."
    }
]