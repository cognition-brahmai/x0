[
    {
        "role": "user",
        "content": "How can I auto-populate the 'created_by' field in Django admin interface? I have a very simple web application and a model 'Contact' which has 'name' and 'created_by' fields. I want the form to create new contacts in the admin site to not show the 'created_by' field, but auto-populate it with the current user. I've tried overloading the Object's save method and pass it the request user, but it requires building custom views and/or forms. Here is the 'Contact' model:\n\n```python\nclass Contact(models.Model):\n    name = models.CharField(max_length=250, blank=False)\n    created_by = models.ForeignKey(User, blank=False)\n```"
    },
    {
        "role": "assistant",
        "content": "To achieve auto-population of the `created_by` field with the current user in the Django admin interface while hiding it from the form, you can customize the admin class for the `Contact` model. This can be done by overriding the `save_model` method in the admin class to automatically set the `created_by` field to the current user. Here's how you can do it:\n\n1. **Update your `Contact` model**: Ensure that the `created_by` field has `null=True` and `on_delete=models.CASCADE` to avoid any integrity issues.\n\n```python\nfrom django.contrib.auth.models import User\nfrom django.db import models\n\nclass Contact(models.Model):\n    name = models.CharField(max_length=250, blank=False)\n    created_by = models.ForeignKey(User, null=True, blank=False, on_delete=models.CASCADE)\n```\n\n2. **Customize the Admin Class**: Override the `save_model` method in the admin class to automatically set the `created_by` field.\n\n```python\nfrom django.contrib import admin\nfrom .models import Contact\n\nclass ContactAdmin(admin.ModelAdmin):\n    exclude = ('created_by',)  # Exclude the 'created_by' field from the form\n\n    def save_model(self, request, obj, form, change):\n        if not change:  # Only set created_by on object creation\n            obj.created_by = request.user\n        super().save_model(request, obj, form, change)\n\nadmin.site.register(Contact, ContactAdmin)\n```\n\n### Explanation:\n\n- **Exclude the `created_by` field**: The `exclude` attribute in the `ContactAdmin` class prevents the field from appearing in the form, ensuring users do not see or edit it directly.\n\n- **Override `save_model`**: The `save_model` method in the admin class is overridden to automatically set `created_by` to the current user (`request.user`) when a new contact is created. This method checks if the object is new (not a change) before assigning the user, meaning it won't overwrite `created_by` on updates.\n\nWith these modifications, your Django admin interface will automatically populate the `created_by` field with the current logged-in user when a new `Contact` is created, without displaying the field in the admin form."
    }
]