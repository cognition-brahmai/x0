[
    {
        "role": "user",
        "content": "What is the correct way to document multi-line parameter descriptions in Python docstrings using reStructuredText? For instance, I have the following function where one of the parameter descriptions is more than eighty characters long:\n\n```python\ndef f(a, b):\n    \"\"\" \n    Does something with a and b\n\n    :param a: something simple\n    :param b: well, it's not something simple, so it may require more than eighty\n              chars\n    \"\"\"\n```\nI would like to understand the correct syntax/convention for this. Should I indent the second line or not, and will this break reStructuredText rendering?"
    },
    {
        "role": "assistant",
        "content": "When documenting multi-line parameter descriptions in Python docstrings using reStructuredText (reST), it's important to ensure that the formatting is both readable and correctly interpreted by documentation tools like Sphinx. The convention is to use consistent indentation for continuation lines to ensure proper rendering.\n\nHere's the recommended way to write your docstring:\n\n```python\ndef f(a, b):\n    \"\"\" \n    Does something with a and b.\n\n    :param a: something simple\n    :param b: well, it's not something simple, so it may require more than eighty\n              characters to explain properly, and continuation lines should be\n              indented for clarity.\n    :return: Description of return value.\n    \"\"\"\n```\n\n### Key Points:\n\n1. **Indentation**: Continuation lines for parameter descriptions should be indented to align with the first character of the description following the colon. This helps in maintaining readability and correct parsing.\n\n2. **Line Length**: While 80 characters is a common convention for line length, in docstrings, readability sometimes takes precedence. Ensure that continuation lines maintain alignment for clarity.\n\n3. **Blank Line after Description**: It's a good practice to leave a blank line after the main description of the function/method and before listing parameters to visually separate them.\n\n4. **Complete Documentation**: Include `:return:` and `:raises:` (if applicable) sections to fully document the function's behavior.\n\nBy following these guidelines, your reStructuredText docstring will be well-formed and should render correctly in tools like Sphinx."
    }
]