[
    {
        "role": "user",
        "content": "In Python, is there a built-in or direct way to get the count of items in an Enum? For example, consider the following Enum class:\n\n```python\nfrom enum import Enum\n\nclass Mood(Enum):\n    red = 0\n    green = 1\n    blue = 2\n```\n\nI want to get the total number of items in this 'Mood' Enum without having to iterate over it, or add an extra count item or class property. Is there any built-in functionality provided by the Enum module to perform this task?"
    },
    {
        "role": "assistant",
        "content": "In Python, there isn't a built-in function specifically for counting the number of items in an `Enum`. However, you can easily achieve this by using the `len()` function along with the `Enum` class's `__members__` attribute. The `__members__` attribute is a mapping of member names to member objects, which allows you to get the count of items in the `Enum`. Here's how you can do it:\n\n```python\nfrom enum import Enum\n\nclass Mood(Enum):\n    red = 0\n    green = 1\n    blue = 2\n\n# Get the count of items in the Mood Enum\ncount_of_items = len(Mood.__members__)\nprint(count_of_items)  # Output: 3\n```\n\nThis method provides a straightforward and efficient way to get the number of items in an `Enum` without additional iteration or properties."
    }
]