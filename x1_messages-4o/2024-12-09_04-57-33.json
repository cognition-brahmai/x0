[
    {
        "role": "user",
        "content": "Is there a method available in Python that can be used to rename a large group of files in a directory? For instance, if I have a directory full of *.doc files, how can I rename them in a consistent manner? An example of the renaming I am looking for is:\n\nX.doc -> \"new(X).doc\"\nY.doc -> \"new(Y).doc\""
    },
    {
        "role": "assistant",
        "content": "Yes, you can use Python to rename a large group of files in a directory. The `os` and `glob` modules are quite handy for this task. Here's a script that you can use to rename all `.doc` files in a directory by adding \"new\" to the beginning of their names:\n\n```python\nimport os\nimport glob\n\ndef rename_files_in_directory(directory_path):\n    # Use glob to get all .doc files in the directory\n    files = glob.glob(os.path.join(directory_path, \"*.doc\"))\n    \n    for file_path in files:\n        # Extract the directory and file name\n        directory, filename = os.path.split(file_path)\n        \n        # Create the new file name by adding \"new\" to the original name\n        new_filename = f\"new({filename})\"\n        \n        # Build the full path for the new file name\n        new_file_path = os.path.join(directory, new_filename)\n        \n        # Rename the file\n        os.rename(file_path, new_file_path)\n        print(f'Renamed: {file_path} to {new_file_path}')\n\n# Example usage:\ndirectory_path = '/path/to/your/directory'  # Update with the path to your directory\nrename_files_in_directory(directory_path)\n```\n\n### How it Works:\n1. **Import Modules**: The script imports the `os` module to interact with the operating system and the `glob` module to find all files matching a specified pattern.\n\n2. **Find Files**: It uses `glob.glob()` to find all `.doc` files in the specified directory.\n\n3. **Rename Files**: For each file, it constructs a new file name by appending \"new\" to the original file name and then uses `os.rename()` to rename the file.\n\n4. **Prints Renamed Files**: It prints the old and new file paths for confirmation.\n\n### Important Note:\n- Make sure to replace `'/path/to/your/directory'` with the actual path to your directory.\n- Always back up your files before running such scripts to avoid accidental data loss."
    }
]