[
    {
        "role": "user",
        "content": "I am using the Python requests library to query the Diffbot API to get contents of an article from a web page URL. When I visit a request URL in my browser, it returns a JSON object with the text in Unicode. However, when I use the Python request library, it seems to return the text in a different format. How can I ensure that the text I get with requests is still in Unicode format? Here is my code:\n\n```python\ndef get_article(self, params={}):\n  api_endpoint = 'http://www.diffbot.com/api/article'\n  params.update({\n    'token': self.dev_token,\n    'format': self.output_format,\n  })\n  req = requests.get(api_endpoint, params=params)\n  return json.loads(req.content)\n```\n\nWhen run, my code returns this:\n\n```python\n{u'url': u'http://mexico.cnn.com/nacional/2012/07/02/con-apariencia-de-mujer-e-identidad-masculina-los-transexuales-votan', u'text': u'CIUDAD DE M\\xc9XICO (CNNM\\xe9xico) \\u2014 Kassandra Guazo Cano tiene 32 a\\xf1os, pero este domingo particip\\xf3 por primera vez en una elecci\\xf3n.\\n\"No hab\\xeda sacado mi (credencial del) IFE (Instituto Federal Electoral) porque al hacOyuky Mart\\xednez Col\\xedn, tambi\\xe9n transg\\xe9nero, y que estaba acompa\\xf1ada de sus dos hijos y su mam\\xe1.\\nAmbas trabajan como activistas en el Centro de Apoyo a las Identidades Trans, A.C., donde participan en una campa\\xf1a de prevenci\\xf3n de enfermedades sexuales.\\n\"Quisi\\xe9ramos que no solo nos vean como trabajadoras sexuales o estilistas, sino que luchamos por nuestros derechos\", dice Kassandra mientras sonr\\xede, sostiene su credencial de elector y levanta su pulgar entintado.', u'title': u'Con apariencia de mujer e identidad masculina, los transg\\xe9nero votan - M\\xe9xico: Voto 2012 - Nacional', u'xpath': u'/HTML[1]/BODY[1]/SECTION[5]/DIV[1]/ARTICLE[1]/DIV[1]/DIV[6]', u'icon': u'http://mexico.cnn.com/images/ico_mobile.jpg'}\n```"
    },
    {
        "role": "assistant",
        "content": "The issue you're encountering is not with the `requests` library or the Diffbot API, but rather with how Python displays Unicode text. In Python 2.x, Unicode strings are prefixed with a `u` (e.g., `u'text'`), and non-ASCII characters are escaped using backslashes (e.g., `\\u2014` for an em dash). \n\nHere are a few suggestions to work with Unicode data correctly:\n\n1. **Ensure the Correct Encoding**: The `requests` library automatically decodes the response content using the correct encoding. You can access the text of the response using the `text` attribute:\n\n   ```python\n   req = requests.get(api_endpoint, params=params)\n   return req.json()  # This will automatically decode the JSON response\n   ```\n\n2. **Print the Text in a Readable Format**: When printing Unicode strings to the console, ensure that your console supports Unicode characters. You can also use Python's built-in `print` with encoding:\n\n   ```python\n   data = req.json()  # Assuming the server responds with JSON\n   print(data['text'].encode('utf-8'))  # For Python 2.x\n   ```\n\n3. **Use Python 3**: If possible, consider switching to Python 3, which handles Unicode more naturally. In Python 3, strings are Unicode by default, and you won't see the `u''` prefix.\n\nHere's your updated function for Python 3:\n\n```python\nimport requests\n\ndef get_article(self, params={}):\n    api_endpoint = 'http://www.diffbot.com/api/article'\n    params.update({\n        'token': self.dev_token,\n        'format': self.output_format,\n    })\n    req = requests.get(api_endpoint, params=params)\n    return req.json()  # Automatically handles JSON decoding\n```\n\nIf you are using Python 2.x and want to print Unicode characters correctly, you can wrap your script in:\n\n```python\n# -*- coding: utf-8 -*-\n# Above line should be at the top of your Python file\n\nimport requests\nimport json\n\ndef get_article(self, params={}):\n    api_endpoint = 'http://www.diffbot.com/api/article'\n    params.update({\n        'token': self.dev_token,\n        'format': self.output_format,\n    })\n    req = requests.get(api_endpoint, params=params)\n    data = json.loads(req.content.decode('utf-8'))  # Decode bytes to Unicode\n    print(data['text'].encode('utf-8'))  # Print Unicode text as UTF-8\n    return data\n```\n\nThis approach will help you handle Unicode text correctly and ensure it is displayed as expected."
    }
]