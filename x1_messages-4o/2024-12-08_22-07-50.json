[
    {
        "role": "user",
        "content": "Can you provide a SQL query that lists all the employees in a company hierarchy, sorted by their level in the organization? Please include the following columns: employee name, department, job title, and their respective level in the hierarchy. Use the following table structure to complete the query:\nEmployee Table:\nemployee_id | employee_name | department | job_title | manager_id\nData format:\nYou must have [ SQL database ] data type in the following Rewrite prompt."
    },
    {
        "role": "assistant",
        "content": "To achieve this, you can use a Common Table Expression (CTE) in SQL to recursively traverse the employee hierarchy. Here's a query that lists all employees along with their level in the organizational hierarchy:\n\n```sql\nWITH RECURSIVE EmployeeHierarchy AS (\n    -- Anchor member: select the top-level employees (those without a manager)\n    SELECT\n        employee_id,\n        employee_name,\n        department,\n        job_title,\n        manager_id,\n        1 AS level\n    FROM\n        Employee\n    WHERE\n        manager_id IS NULL\n    \n    UNION ALL\n    \n    -- Recursive member: select employees under each manager and increment their level\n    SELECT\n        e.employee_id,\n        e.employee_name,\n        e.department,\n        e.job_title,\n        e.manager_id,\n        eh.level + 1 AS level\n    FROM\n        Employee e\n    INNER JOIN EmployeeHierarchy eh ON e.manager_id = eh.employee_id\n)\n\n-- Select from the CTE and order by level\nSELECT\n    employee_name,\n    department,\n    job_title,\n    level\nFROM\n    EmployeeHierarchy\nORDER BY\n    level, employee_name;\n```\n\n### Explanation:\n\n- **CTE Initialization**: The `WITH RECURSIVE` clause is used to define a common table expression named `EmployeeHierarchy`.\n  \n- **Anchor Member**: The first `SELECT` statement within the CTE selects the top-level employees who do not have a manager (i.e., `manager_id IS NULL`). These employees are assigned a `level` of 1.\n\n- **Recursive Member**: The second `SELECT` statement recursively joins the `Employee` table with the `EmployeeHierarchy` CTE based on the `manager_id`. For each employee found, it increments the `level` by 1.\n\n- **Final Selection**: The main query selects from the `EmployeeHierarchy` CTE, projecting the desired columns and ordering the results by `level` and `employee_name`.\n\nThis query will provide an output that includes the employee name, department, job title, and their respective level in the hierarchy, sorted by their level."
    }
]