[
    {
        "role": "user",
        "content": "I'm creating scatter plots using matplotlib in Python and want to set the size of the points in the legend to a fixed, equal value. Currently, my code is as follows:\n\n```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ndef rand_data():\n    return np.random.uniform(low=0., high=1., size=(100,))\n\n# Generate data.\nx1, y1 = [rand_data() for i in range(2)]\nx2, y2 = [rand_data() for i in range(2)]\n\nplt.figure()\nplt.scatter(x1, y1, marker='o', label='first', s=20., c='b')\nplt.scatter(x2, y2, marker='o', label='second', s=35., c='r')\n# Plot legend.\nplt.legend(loc=\"lower left\", markerscale=2., scatterpoints=1, fontsize=10)\nplt.show()\n```\n\nThis produces a scatter plot where the sizes of the points in the legend are scaled but they are not the same. How can I fix the sizes of the points in the legend to an equal value without affecting the sizes in the scatter plot?"
    },
    {
        "role": "assistant",
        "content": "To set a fixed, equal size for the points in the legend while keeping the size of the scatter plot points unchanged, you can utilize the `handler_map` parameter in the `plt.legend()` function. By providing a custom legend handler for `PathCollection` objects (used by `scatter`), you can control the appearance of legend markers independently of the plot markers.\n\nHere's how you can achieve that:\n\n```python\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom matplotlib.legend_handler import HandlerPathCollection\n\ndef rand_data():\n    return np.random.uniform(low=0., high=1., size=(100,))\n\n# Generate data.\nx1, y1 = [rand_data() for i in range(2)]\nx2, y2 = [rand_data() for i in range(2)]\n\nplt.figure()\nscatter1 = plt.scatter(x1, y1, marker='o', label='first', s=20., c='b')\nscatter2 = plt.scatter(x2, y2, marker='o', label='second', s=35., c='r')\n\n# Customizing the legend to have fixed marker sizes\nclass MarkerHandler(HandlerPathCollection):\n    def create_artists(self, legend, orig_handle,\n                       xdescent, ydescent, width, height, fontsize, trans):\n        # Create a fixed-size marker\n        s = 30  # fixed size for legend markers\n        return super().create_artists(\n            legend, orig_handle, xdescent, ydescent, width, height, fontsize, trans,\n            markerfacecolor=orig_handle.get_facecolor()[0], markersize=s)\n\n# Plot legend with fixed marker size\nplt.legend(handler_map={plt.scatter: MarkerHandler()}, loc=\"lower left\", scatterpoints=1, fontsize=10)\nplt.show()\n```\n\nIn this example, the `MarkerHandler` class is a custom legend handler that you define to fix the marker size in the legend. The `create_artists` method in `MarkerHandler` is overridden to set a constant size (`s`) for the markers in the legend. This approach ensures that the points in the legend have an equal size, regardless of their sizes in the scatter plot itself."
    }
]