[
    {
        "role": "user",
        "content": "Is it possible to plot a line with variable line width in matplotlib? I tried the following code:\n\n```python\nfrom pylab import *\nx = [1, 2, 3, 4, 5]\ny = [1, 2, 2, 0, 0]\nwidth = [.5, 1, 1.5, .75, .75]\n\nplot(x, y, linewidth=width)\n```\nBut it doesn't work because linewidth expects a scalar. I'm aware of fill_between() and fill_betweenx(). However, because these only fill in x or y direction, they do not do justice to cases where you have a slanted line. It is desirable for the fill to always be normal to the line. That's why a variable width line is needed. How can this be achieved?"
    },
    {
        "role": "assistant",
        "content": "To create a line with variable width in Matplotlib, you can use a more manual approach since `plot()` does not support variable line width directly. One way to achieve this effect is by drawing short line segments or using a `LineCollection`, which allows for more flexibility in specifying attributes like width.\n\nHere is an example using `LineCollection` to achieve variable line width:\n\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.collections import LineCollection\n\n# Define your data points and widths\nx = np.array([1, 2, 3, 4, 5])\ny = np.array([1, 2, 2, 0, 0])\nwidth = np.array([0.5, 1, 1.5, 0.75, 0.75])\n\n# Create line segments\nsegments = [((x[i], y[i]), (x[i+1], y[i+1])) for i in range(len(x)-1)]\n\n# Create a LineCollection from the segments\nlc = LineCollection(segments, linewidths=width, color='blue')\n\n# Create the plot\nfig, ax = plt.subplots()\nax.add_collection(lc)\n\n# Set limits\nax.set_xlim(min(x) - 0.5, max(x) + 0.5)\nax.set_ylim(min(y) - 0.5, max(y) + 0.5)\n\nplt.show()\n```\n\nIn this code, `LineCollection` is used to construct line segments between each pair of consecutive points, and the `linewidths` parameter is set to the specified widths for each segment. This approach gives you the flexibility to control the thickness of each segment individually."
    }
]