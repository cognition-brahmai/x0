[
    {
        "role": "user",
        "content": "Can you provide an AI solution to implement a bubble sort algorithm in C++ for sorting an array?"
    },
    {
        "role": "assistant",
        "content": "Certainly! Below is a simple implementation of the Bubble Sort algorithm in C++ for sorting an array of integers:\n\n```cpp\n#include <iostream>\nusing namespace std;\n\nvoid bubbleSort(int arr[], int n) {\n    for (int i = 0; i < n - 1; ++i) {\n        // Flag to check if any swapping happened\n        bool swapped = false;\n        \n        // Last i elements are already in place\n        for (int j = 0; j < n - i - 1; ++j) {\n            if (arr[j] > arr[j + 1]) {\n                // Swap arr[j] and arr[j + 1]\n                int temp = arr[j];\n                arr[j] = arr[j + 1];\n                arr[j + 1] = temp;\n                \n                swapped = true;\n            }\n        }\n\n        // If no swapping happened, the array is already sorted\n        if (!swapped) {\n            break;\n        }\n    }\n}\n\nvoid printArray(int arr[], int n) {\n    for (int i = 0; i < n; ++i) {\n        cout << arr[i] << \" \";\n    }\n    cout << endl;\n}\n\nint main() {\n    int arr[] = {64, 34, 25, 12, 22, 11, 90};\n    int n = sizeof(arr) / sizeof(arr[0]);\n    \n    cout << \"Original array: \\n\";\n    printArray(arr, n);\n    \n    bubbleSort(arr, n);\n    \n    cout << \"Sorted array: \\n\";\n    printArray(arr, n);\n    \n    return 0;\n}\n```\n\n### Explanation:\n- **bubbleSort Function**: This function sorts the array in ascending order using the Bubble Sort algorithm. It iterates through the array, repeatedly swapping adjacent elements if they are in the wrong order. The `swapped` flag helps optimize the algorithm by stopping early if no swaps are needed (indicating the array is already sorted).\n  \n- **printArray Function**: This function is a utility to print the elements of the array.\n\n- **main Function**: The `main` function initializes an array, calls the `bubbleSort` function to sort it, and then prints the sorted array.\n\n### Key Points:\n- Bubble Sort has a time complexity of \\(O(n^2)\\) in the worst and average cases, and \\(O(n)\\) in the best case when the array is already sorted.\n- It is a simple sorting algorithm but not very efficient for large datasets."
    }
]