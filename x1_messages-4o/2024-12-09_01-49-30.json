[
    {
        "role": "user",
        "content": "I am trying to set Python 3.5.2 as the default Python version on my CentOS 7 system. Currently, Python 2.7 is installed as the default and Python 3.5.2 is installed separately. I tried moving the original Python binary and creating a symbolic link to Python3 binary using the following commands:\n\n```bash\nmv /usr/bin/python /usr/bin/python-old\nsudo ln -fs /usr/bin/python3 /usr/bin/python\n```\n\nHowever, after doing this, I'm getting an error when I try to use `yum`. The error message is:\n\n```bash\n-bash: /usr/bin/yum: /usr/bin/python: bad interpreter: No such file or directory\n```\n\nIs there something I am missing in the process of setting Python 3.5.2 as the default version?"
    },
    {
        "role": "assistant",
        "content": "When you change the default Python version on a CentOS system, it can cause issues with system utilities like `yum`, which rely on Python 2.x. This is because CentOS 7's package manager and other system scripts are designed to work with Python 2.x. Here's a way to resolve the issue and set up your environment properly:\n\n1. **Revert the Default Python Setting for System Scripts:**\n\n   First, revert the changes you made to the `/usr/bin/python` link:\n\n   ```bash\n   sudo mv /usr/bin/python /usr/bin/python-new\n   sudo mv /usr/bin/python-old /usr/bin/python\n   ```\n\n   This ensures that `yum` and other system tools will continue to work with Python 2.x.\n\n2. **Use `alternatives` to Manage Python Versions:**\n\n   Instead of changing the system Python, use the `alternatives` system to manage different versions of Python:\n\n   ```bash\n   sudo alternatives --install /usr/bin/python3 python3 /usr/bin/python3.5 1\n   sudo alternatives --config python3\n   ```\n\n   This will allow you to choose the default `python3` version using the `alternatives` system.\n\n3. **Create a Virtual Environment:**\n\n   It's a good practice to use a virtual environment for your projects that require Python 3.5.2. This isolates your project's dependencies from the system Python:\n\n   ```bash\n   python3.5 -m venv myenv\n   source myenv/bin/activate\n   ```\n\n4. **Shebangs in Scripts:**\n\n   For any custom scripts you write, ensure the shebang line explicitly specifies the desired Python version, e.g., `#!/usr/bin/python3.5`, to avoid confusion with the default system Python.\n\nBy following these steps, you can maintain the integrity of system tools while using Python 3.5.2 for your projects."
    }
]