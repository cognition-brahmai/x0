[
    {
        "role": "user",
        "content": "How do I specify optional dependencies in Python's setup.py file? I am trying to do this for an open-source library I am working on. Specifically, I am trying to use `extra_requires` in the following snippet:\n\n```python\nsetup(\n    name='django-cherrypy',\n    version='0.1',\n    packages=packages,\n    license='LICENSE',\n    description='cherrypy, running under django',\n    long_description=open('README.md').read(),\n    author='Calvin Cheng',\n    author_email='calvin@calvinx.com',\n    install_requires=['cherrypy-wsgiserver'],\n    extra_requires=['newrelic'],\n    url='https://github.com/od-eon/django-cherrypy',\n)\n```\n\nBut my attempt doesn't seem to do much. What am I doing wrong? Any suggestions would be greatly appreciated."
    },
    {
        "role": "assistant",
        "content": "In your `setup.py` file, you are attempting to specify optional dependencies using `extra_requires`, but it should actually be `extras_require`. This is a common mistake. The `extras_require` parameter in the `setup()` function allows you to define groups of additional dependencies that are optional and can be installed using a syntax like `pip install package[extra]`.\n\nHere's how you can modify your `setup.py` to use `extras_require` correctly:\n\n```python\nfrom setuptools import setup, find_packages\n\nsetup(\n    name='django-cherrypy',\n    version='0.1',\n    packages=find_packages(),\n    license='LICENSE',\n    description='cherrypy, running under django',\n    long_description=open('README.md').read(),\n    author='Calvin Cheng',\n    author_email='calvin@calvinx.com',\n    install_requires=['cherrypy-wsgiserver'],\n    extras_require={\n        'newrelic': ['newrelic'],  # Optional dependencies can be listed here\n    },\n    url='https://github.com/od-eon/django-cherrypy',\n)\n```\n\n### Explanation:\n- **`extras_require`:** This should be a dictionary where the keys are the names of the optional features, and the values are lists of dependencies required for these features. In this example, installing the optional feature `newrelic` will require the `newrelic` package.\n\n### Usage:\n- To install the optional `newrelic` dependency, users can run:\n  ```bash\n  pip install django-cherrypy[newrelic]\n  ```\n\nMake sure that the `README.md` file is present in the same directory as the `setup.py` file, or adjust the path to it accordingly. Also, ensure that `find_packages()` is used to automatically discover all packages and sub-packages, which is typically more flexible and less error-prone than manually listing the packages."
    }
]