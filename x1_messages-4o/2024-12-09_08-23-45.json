[
    {
        "role": "user",
        "content": "How can I pivot a DataFrame in Pandas? I have a table in CSV format where 'Indicator', 'Country', 'Year' and 'Value' are columns. I want to transpose this table such that the values in the 'Indicator' column become new columns. The CSV data looks like this:\n\n```\nIndicator       Country         Year   Value    \n1               Angola          2005    6\n2               Angola          2005    13\n3               Angola          2005    10\n4               Angola          2005    11\n5               Angola          2005    5\n1               Angola          2006    3\n2               Angola          2006    2\n3               Angola          2006    7\n4               Angola          2006    3\n5               Angola          2006    6\n```\n\nAnd I want to transform it to look like this:\n\n```\nCountry    Year     1     2     3     4     5\nAngola     2005     6     13    10    11    5\nAngola     2006     3     2     7     3     6\n```\n\nI attempted to use a Pandas DataFrame using the below code but had no success:\n\n```python\nprint(df.pivot(columns = 'Country', 'Year', 'Indicator', values = 'Value'))\n```\n\nCan anyone guide me on how to correctly pivot this DataFrame?"
    },
    {
        "role": "assistant",
        "content": "Certainly! In order to pivot a DataFrame in Pandas where you want the values in a specific column ('Indicator' in your case) to become new columns, you can use the `pivot` method. However, it seems like there was a small mistake in your syntax. The correct approach would look like this:\n\n```python\nimport pandas as pd\n\n# Assuming your CSV data is loaded into a DataFrame called df\ndf = pd.read_csv('your_file.csv')\n\n# Use the pivot method to transform the DataFrame\npivot_df = df.pivot(index=['Country', 'Year'], columns='Indicator', values='Value')\n\n# Reset index to make the DataFrame look cleaner\npivot_df = pivot_df.reset_index()\n\n# Print the resulting DataFrame\nprint(pivot_df)\n```\n\nHere's a breakdown of what this code does:\n\n1. **Read the CSV**: Load your CSV data into a DataFrame `df`.\n2. **Pivot the DataFrame**: Use the `pivot` method where:\n   - `index=['Country', 'Year']` specifies the columns to keep as row indices.\n   - `columns='Indicator'` specifies the column whose unique values will become new columns.\n   - `values='Value'` specifies the column from which to draw the values for the new columns.\n\n3. **Reset Index**: This step will convert the indices back into regular columns, which makes the DataFrame easier to read and work with.\n\nWith this approach, you'll get the desired output where each unique 'Indicator' value becomes a separate column, and the 'Country' and 'Year' columns are preserved as identifiers for each row."
    }
]