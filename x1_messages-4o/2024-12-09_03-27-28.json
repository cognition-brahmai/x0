[
    {
        "role": "user",
        "content": "How can I get a subset of a Python dictionary? I have a dictionary like this:\n\n```python\n{'key1':1, 'key2':2, 'key3':3}\n```\n\nI need to pass a subset of this dictionary to a third-party code which only accepts a dictionary containing specific keys like `['key1', 'key2', 'key99']`. If it encounters an unexpected key (like `'key3'`), it results in a failure. Unfortunately, the code in question is out of my control so I need to adjust my dictionary accordingly. How can I limit a dictionary to a specific set of keys? For example, from the given dictionary and allowed keys, I want to obtain:\n\n```python\n{'key1':1, 'key2':2}\n```"
    },
    {
        "role": "assistant",
        "content": "To obtain a subset of a dictionary with only specific keys, you can use dictionary comprehension. Given your requirement, you want to include only the keys that are both present in your original dictionary and in a list of allowed keys. Here's how you can do it:\n\n```python\noriginal_dict = {'key1': 1, 'key2': 2, 'key3': 3}\nallowed_keys = ['key1', 'key2', 'key99']\n\n# Using dictionary comprehension to create a subset\nsubset_dict = {key: original_dict[key] for key in allowed_keys if key in original_dict}\n\nprint(subset_dict)\n```\n\nThis code snippet does the following:\n- Iterates over the `allowed_keys` list.\n- Checks if each key from `allowed_keys` exists in `original_dict`.\n- If it does, it adds that key-value pair to the `subset_dict`.\n\nThe resulting `subset_dict` will be `{'key1': 1, 'key2': 2}`, which is the subset dictionary you want to pass to the third-party code."
    }
]