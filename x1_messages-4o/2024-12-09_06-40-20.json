[
    {
        "role": "user",
        "content": "How can I read items from a CSV file using the header names instead of by row numbers? Here is an example of the current approach I am using:\n\n```python\nwith open('info.csv') as f:\n    reader = csv.reader(f, delimiter=';')\n    next(reader, None)\n    for row in reader:\n        name = row[0]\n        blah = row[1]\n```\n\nHowever, I am looking for a built-in method that would allow me to access row items using the header names, something similar to this:\n\n```python\nwith open('info.csv') as f:\n    reader = csv.reader(f, delimiter=';', useheader=True)\n    for row in reader:\n        name = row['name']\n        blah = row['blah']\n```\n\nIn my 'info.csv' file, the header line is as follows:\n\n```\nname;blah\nJohn;Hello2\nMike;Hello2\n```"
    },
    {
        "role": "assistant",
        "content": "To read items from a CSV file using the header names instead of by row numbers, you can use the `csv.DictReader` class from Python's `csv` module. The `DictReader` reads each row into a dictionary where the keys are the column headers and the values are the data from each row. Here's how you can modify your code to achieve this:\n\n```python\nimport csv\n\nwith open('info.csv', mode='r') as f:\n    reader = csv.DictReader(f, delimiter=';')\n    for row in reader:\n        name = row['name']\n        blah = row['blah']\n        print(f\"Name: {name}, Blah: {blah}\")\n```\n\n### Explanation:\n- **`csv.DictReader`:** This class creates an object that operates like a regular reader but maps the information read into a dictionary whose keys are given by the optional `fieldnames` parameter. If the `fieldnames` parameter is omitted, the values in the first row of the file will be used as the field names.\n- **Accessing Data:** You can access the data in each row by using the header name as the key, e.g., `row['name']` and `row['blah']`.\n\nThis approach allows you to easily access the data using the headers as dictionary keys, making your code more readable and less prone to errors from changing the order of columns."
    }
]