[
    {
        "role": "user",
        "content": "How can I create a legend for a contour plot in matplotlib? When I try to set a label to the collections of my contour plot and call `plt.legend()`, I get a `TypeError: 'NoneType' object is not iterable`. Here is the code I am using:\n\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\nx, y = np.meshgrid(np.arange(10),np.arange(10))\nz = x + y\ncs = plt.contourf(x,y,z,levels=[2,3])\ncs.collections[0].set_label('test')\nplt.legend()\n```\n\nThe error message I receive is: \n\n```python\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/matplotlib/pyplot.py\", line 2791, in legend\n    ret =  gca().legend(*args, **kwargs)\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/matplotlib/axes.py\", line 4475, in legend\n    self.legend_ = mlegend.Legend(self, handles, labels, **kwargs)\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/matplotlib/legend.py\", line 365, in __init__\n    self._init_legend_box(handles, labels)\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/matplotlib/legend.py\", line 627, in _init_legend_box\n    handlebox)\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/matplotlib/legend_handler.py\", line 110, in __call__\n    handlebox.get_transform())\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/matplotlib/legend_handler.py\", line 352, in create_artists\n    width, height, fontsize)\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/matplotlib/legend_handler.py\", line 307, in get_sizes\n    size_max = max(orig_handle.get_sizes())*legend.markerscale**2\nTypeError: 'NoneType' object is not iterable\n```\n\nWhat I am aiming for is a plot that looks somewhat like this: (Image of desired plot)"
    },
    {
        "role": "assistant",
        "content": "The issue you're encountering is because `plt.contourf()` creates filled contour plots without line segments, and thus the collections don't have a specific label that `plt.legend()` can use directly. Instead, you should use a `plt.colorbar()` to represent the levels of the filled contour plot. A colorbar is more appropriate for filled contour plots as it provides a visual representation of the mapping from data values to colors.\n\nHere's how you can modify your code to include a colorbar:\n\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Create a meshgrid\nx, y = np.meshgrid(np.arange(10), np.arange(10))\nz = x + y\n\n# Create a filled contour plot\ncs = plt.contourf(x, y, z, levels=[2, 3])\n\n# Add a colorbar to the plot\ncbar = plt.colorbar(cs)\n\n# You can set the label for the colorbar if needed\ncbar.set_label('Value')\n\n# Display the plot\nplt.show()\n```\n\nThis will display the filled contour plot with a colorbar indicating the contour levels. If you specifically want to use `plt.contour()` instead of `plt.contourf()`, which creates line contours, you can set the labels on the contour lines and use `plt.legend()`. Here's how you can do that:\n\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Create a meshgrid\nx, y = np.meshgrid(np.arange(10), np.arange(10))\nz = x + y\n\n# Create a line contour plot\ncs = plt.contour(x, y, z, levels=[2, 3])\n\n# Add labels to the contour lines\nfor i, collection in enumerate(cs.collections):\n    collection.set_label(f'Level {cs.levels[i]}')\n\n# Add a legend\nplt.legend()\n\n# Display the plot\nplt.show()\n```\n\nThis setup adds a legend to the contour plot, with each contour line labeled according to its level. If you want to include both filled contours and a legend, consider using both `contourf` for the filled areas and `contour` for the lines, then add a legend for the lines and a colorbar for the filled areas."
    }
]