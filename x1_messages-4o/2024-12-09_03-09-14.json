[
    {
        "role": "user",
        "content": "How can I correctly pass parameters to a training script in Azure Machine Learning service? I am trying to submit an experiment locally on an Azure VM using a `ScriptRunConfig` object in my workspace `ws`, but I am encountering an \"ExperimentExecutionException\" error. The code I am using is as follows:\n\n```python\nfrom azureml.core import ScriptRunConfig    \nfrom azureml.core.runconfig import RunConfiguration\nfrom azureml.core import Experiment\n\nexperiment = Experiment(ws, name='test')\nrun_local = RunConfiguration()\n\nscript_params = {\n    '--data-folder': './data',\n    '--training-data': 'train.csv'\n}\n\nsrc = ScriptRunConfig(source_directory = './source_dir', \n                      script = 'train.py', \n                      run_config = run_local, \n                      arguments = script_params)\n\nrun = experiment.submit(src)\n```\n\nWhen I try to set my data folder to use a datastore, I receive a \"UserErrorException\". The code for this is:\n\n```python\nscript_params = {\n    '--data-folder': ds.path('mydatastoredir').as_mount(),\n    '--training-data': 'train.csv'\n}\n```\n\nHow can I successfully pass my `script_params` parameters to my `train.py` script?"
    },
    {
        "role": "assistant",
        "content": "To successfully pass parameters to your training script in Azure Machine Learning service, you need to ensure that your script is set up to correctly parse and handle the arguments. Additionally, there are a few considerations when using Azure datastores. Let's go through the steps to correct the issues:\n\n1. **Argument Parsing in `train.py`:** Ensure that your `train.py` script is set up to accept command-line arguments. You can use the `argparse` library in Python to parse these arguments:\n\n   ```python\n   import argparse\n\n   def main():\n       parser = argparse.ArgumentParser()\n       parser.add_argument('--data-folder', type=str, help='Path to data folder')\n       parser.add_argument('--training-data', type=str, help='Training data file name')\n       args = parser.parse_args()\n\n       print(f\"Data folder: {args.data_folder}\")\n       print(f\"Training data: {args.training_data}\")\n\n   if __name__ == '__main__':\n       main()\n   ```\n\n2. **Datastore Handling:** When using a datastore, ensure that the path you provide is correctly mounted. The `as_mount()` method creates a reference to where the data will be available during the execution of the script. When passing this to your script, you should convert it to a string as follows:\n\n   ```python\n   script_params = {\n       '--data-folder': ds.path('mydatastoredir').as_mount().path,  # Use the .path attribute\n       '--training-data': 'train.csv'\n   }\n   ```\n\n3. **Correcting `ScriptRunConfig`:** Ensure that your `script_params` dictionary is correctly set up. When using `ScriptRunConfig`, you must pass the arguments as a list. Each key-value pair should be represented as separate items in the list. Here's how you can correct it:\n\n   ```python\n   script_params = [\n       '--data-folder', ds.path('mydatastoredir').as_mount().path,\n       '--training-data', 'train.csv'\n   ]\n   ```\n\n4. **Submit the Experiment:**\n   With these changes, your `ScriptRunConfig` should be set correctly, and you can submit your experiment as follows:\n\n   ```python\n   src = ScriptRunConfig(\n       source_directory='./source_dir',\n       script='train.py',\n       run_config=run_local,\n       arguments=script_params\n   )\n\n   run = experiment.submit(src)\n   ```\n\n5. **Debugging Execution Errors:** If you still encounter issues, check the logs for the run in the Azure Machine Learning portal. The logs can provide additional context for any errors encountered during the execution, which can help you troubleshoot further.\n\nBy ensuring your script can parse command-line arguments and that your parameters are correctly formatted in the `ScriptRunConfig`, you should be able to pass parameters successfully to your training script."
    }
]