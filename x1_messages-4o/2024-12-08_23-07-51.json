[
    {
        "role": "user",
        "content": "What C++ code can be used to find the factorial of a given number recursively?\n[C++ code]\nint factorial(int n) {\n    if (n == 0) {\n        return 1;\n    } else {\n        return n * factorial(n-1);\n    }\n}"
    },
    {
        "role": "assistant",
        "content": "The C++ code you've provided is a correct implementation to find the factorial of a given number recursively. Here's the complete code with a `main` function to demonstrate how you can use the `factorial` function:\n\n```cpp\n#include <iostream>\n\n// Function to calculate factorial recursively\nint factorial(int n) {\n    if (n == 0) {\n        return 1;\n    } else {\n        return n * factorial(n-1);\n    }\n}\n\nint main() {\n    int number;\n    \n    // Prompt the user to enter a number\n    std::cout << \"Enter a non-negative integer: \";\n    std::cin >> number;\n\n    // Check if the number is non-negative\n    if (number < 0) {\n        std::cout << \"Factorial is not defined for negative numbers.\" << std::endl;\n    } else {\n        // Calculate and display the factorial\n        int result = factorial(number);\n        std::cout << \"The factorial of \" << number << \" is: \" << result << std::endl;\n    }\n\n    return 0;\n}\n```\n\nThis program prompts the user to enter a non-negative integer and then calculates the factorial of that number using the recursive `factorial` function. If the user enters a negative number, the program will output a message indicating that factorials are not defined for negative numbers."
    }
]