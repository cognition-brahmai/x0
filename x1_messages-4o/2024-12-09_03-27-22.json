[
    {
        "role": "user",
        "content": "How can I create a Python function that allows unzipping a .zip file on all Operating Systems? I need it to act the same on Windows, Mac and Linux: producing a file if the zip is a file, directory if the zip is a directory, and directory if the zip is multiple files; always inside, not at, the given destination directory. In essence, my function should look like this:\n\n```python\nunzip(ZipSource, DestinationDirectory)\n```\n\nHow can I accomplish this?"
    },
    {
        "role": "assistant",
        "content": "To create a Python function that unzips a `.zip` file in a cross-platform manner (compatible with Windows, Mac, and Linux), you can utilize the `zipfile` module, which is part of Python's standard library. This function will extract the contents of the zip file into a specified destination directory, creating a directory if necessary. Here's how you can achieve this:\n\n```python\nimport os\nimport zipfile\n\ndef unzip(zip_source, destination_directory):\n    # Ensure the destination directory exists\n    if not os.path.exists(destination_directory):\n        os.makedirs(destination_directory)\n\n    # Open the zip file\n    with zipfile.ZipFile(zip_source, 'r') as zip_ref:\n        # Extract all items to the destination directory\n        zip_ref.extractall(destination_directory)\n\n    # Check if the zip contains a single file or directory\n    extracted_items = os.listdir(destination_directory)\n\n    if len(extracted_items) == 1:\n        # If it's a single file or directory, move it up one level\n        single_item_path = os.path.join(destination_directory, extracted_items[0])\n        if os.path.isfile(single_item_path) or os.path.isdir(single_item_path):\n            for item in os.listdir(single_item_path):\n                os.rename(os.path.join(single_item_path, item), os.path.join(destination_directory, item))\n            os.rmdir(single_item_path)\n\n# Example usage\n# unzip('example.zip', 'destination_directory')\n```\n\n### Explanation:\n1. **Ensure Destination Directory Exists**: The function first checks if the specified destination directory exists. If not, it creates it using `os.makedirs()`.\n\n2. **Open and Extract**: Using `zipfile.ZipFile`, the function opens the zip file in read mode (`'r'`) and extracts all contents into the destination directory with `extractall()`.\n\n3. **Handle Single Item in Zip**: After extraction, the function checks if the zip file contained a single file or directory. If so, it moves its contents up to the destination directory level and removes the empty directory.\n\n4. **Cross-Platform**: This solution uses Python's standard library, ensuring it works across all platforms.\n\nBy using this function, the contents of the zip file will be extracted to the specified directory, and if the zip file contains only a single file or directory, it will adjust the directory structure accordingly."
    }
]