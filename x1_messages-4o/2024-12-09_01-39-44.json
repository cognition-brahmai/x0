[
    {
        "role": "user",
        "content": "I am currently working on a workstation with Ubuntu 14.04.1 LTS, CPU core I7 4790, two GPUs GTX 760 4 GB RAM/1152 core and the system's memory is 16 GB RAM. After numerous tries, I have finally managed to correctly install the Nvidia driver 340.46 using 3 shell commands ppa xorg-edgers. Now, I wish to install the Cuda 6.5 toolkit. However, according to the manual, the cuda toolkit installer will also install the Nvidia Graphics driver. How can I prevent the installer from reinstalling the graphics driver and install the cuda 6.5 toolkit without having to reinstall my graphics driver? Also, after successfully installing the cuda toolkit 6.5, how can I upgrade my graphics driver without disturbing the cuda toolkit and having to reinstall everything from scratch?"
    },
    {
        "role": "assistant",
        "content": "To install CUDA 6.5 without reinstalling the NVIDIA graphics driver, you can follow these steps:\n\n1. **Download CUDA 6.5**: Obtain the CUDA 6.5 toolkit from the NVIDIA website. Make sure to choose the right version for Ubuntu 14.04.\n\n2. **Extract the Installer**: Run the downloaded file with the `--extract` option to extract the installation files without executing the installation script immediately.\n\n   ```bash\n   sh cuda_6.5.XX_linux.run --extract=/path/to/extract\n   ```\n\n   Replace `XX` with the appropriate version numbers, and `/path/to/extract` with your chosen extraction directory.\n\n3. **Run the Installation Script**: Navigate to the extracted directory and run the installation script with the `--driver` option set to `false` to skip the driver installation.\n\n   ```bash\n   cd /path/to/extract\n   sudo ./cuda-linux64-rel-6.5.XX-XXXX.run --silent --toolkit --samples --driver --driver=false\n   ```\n\n   This command installs the CUDA toolkit and samples without modifying the existing NVIDIA driver.\n\n4. **Set Environment Variables**: After installation, update your environment variables to include CUDA paths.\n\n   Add the following lines to your `~/.bashrc` or `~/.profile` file:\n\n   ```bash\n   export PATH=/usr/local/cuda-6.5/bin:$PATH\n   export LD_LIBRARY_PATH=/usr/local/cuda-6.5/lib64:$LD_LIBRARY_PATH\n   ```\n\n   Then, source the file to apply the changes:\n\n   ```bash\n   source ~/.bashrc\n   ```\n\n5. **Test Installation**: Verify the installation by compiling and running the CUDA samples located in your home directory under `NVIDIA_CUDA-6.5_Samples`.\n\n   ```bash\n   cd ~/NVIDIA_CUDA-6.5_Samples\n   make\n   ```\n\n   Run some of the sample applications to ensure everything is working correctly.\n\n**Upgrading the Graphics Driver**:\n\n1. **Add the PPA**: If you plan to upgrade to a newer NVIDIA driver, use the `ppa:xorg-edgers` or any updated PPA that includes newer drivers.\n\n   ```bash\n   sudo add-apt-repository ppa:graphics-drivers/ppa\n   sudo apt-get update\n   ```\n\n2. **Install the New Driver**: Install the new version of the NVIDIA driver using `apt-get`.\n\n   ```bash\n   sudo apt-get install nvidia-driver-XXX\n   ```\n\n   Replace `XXX` with the appropriate version number.\n\n3. **Reboot the System**: After upgrading the driver, reboot your system to apply the changes.\n\nBy following these steps, you can install the CUDA toolkit and upgrade your graphics driver without interfering with each other."
    }
]