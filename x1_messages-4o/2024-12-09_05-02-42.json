[
    {
        "role": "user",
        "content": "I have an image with dimensions 2322px x 4128px and I want to scale it using Python's Pillow library in such a way that both the width and height are less than 1028px. I can't use `Image.resize` because it requires me to set both the new width and height, which I can't determine ahead of time. I am thinking of using `Image.thumbnail`, but it also requires the width and height to create the thumbnail. Is there a function in Pillow which can scale the entire image by just taking either the new width or the new height, and not both?"
    },
    {
        "role": "assistant",
        "content": "To scale an image using Python's Pillow library while maintaining the aspect ratio and ensuring that both dimensions are less than or equal to a specified size, you can indeed use the `Image.thumbnail` method. This method will automatically adjust the dimensions of the image to fit within a given bounding box, preserving the aspect ratio. Here\u2019s how you can do it:\n\n```python\nfrom PIL import Image\n\n# Load the image\nimage_path = 'path/to/your/image.jpg'\nimage = Image.open(image_path)\n\n# Define the maximum size\nmax_size = (1028, 1028)\n\n# Use the thumbnail method\nimage.thumbnail(max_size)\n\n# Save or display the image\nimage.save('scaled_image.jpg')  # Save the scaled image\nimage.show()  # Display the image\n```\n\nHere's what happens in the code:\n\n- The `thumbnail` method takes a tuple `(width, height)` as an argument, which defines the maximum allowed dimensions for the image. The method ensures that the image fits within this bounding box while maintaining the aspect ratio.\n- This means if your original image has a size greater than `1028px` in either dimension, it will be scaled down so that both dimensions are less than or equal to `1028px`.\n- The `thumbnail` method modifies the image in place, so the original image object will be changed to the new scaled-down size.\n\nUsing `Image.thumbnail` is a straightforward and efficient way to resize an image while preserving its aspect ratio."
    }
]