[
    {
        "role": "user",
        "content": "I am building a Python module where I receive the date in integer format, such as 20120213 (representing 13th February, 2012). How can I convert this integer formatted date into a Python date object? Furthermore, is there a method by which I can add or subtract a number of days from this integer formatted date and get the result in the same format? For example, if I subtract 30 days from 20120213, I should get 20120114."
    },
    {
        "role": "assistant",
        "content": "To achieve this, you can use Python's `datetime` module. Here's how you can convert an integer formatted date into a Python date object, and then add or subtract days from it:\n\n1. **Convert Integer to Date Object:**\n\n   You can extract the year, month, and day from the integer and then create a `datetime.date` object.\n\n2. **Add or Subtract Days:**\n\n   Use `datetime.timedelta` to add or subtract days.\n\n3. **Convert Back to Integer:**\n\n   After performing the date arithmetic, you can convert the date object back to the integer format.\n\nHere's a sample implementation:\n\n```python\nfrom datetime import datetime, timedelta\n\ndef int_to_date(date_int):\n    # Convert integer to string to easily extract year, month, and day\n    date_str = str(date_int)\n    year = int(date_str[:4])\n    month = int(date_str[4:6])\n    day = int(date_str[6:])\n    # Create a date object\n    return datetime(year, month, day)\n\ndef date_to_int(date_obj):\n    # Convert date object to integer in the format YYYYMMDD\n    return int(date_obj.strftime('%Y%m%d'))\n\ndef add_days_to_int_date(date_int, days):\n    # Convert integer to date object\n    date_obj = int_to_date(date_int)\n    # Add or subtract days using timedelta\n    new_date_obj = date_obj + timedelta(days=days)\n    # Convert back to integer format\n    return date_to_int(new_date_obj)\n\n# Example usage\ndate_int = 20120213\ndays_to_subtract = -30\n\nnew_date_int = add_days_to_int_date(date_int, days_to_subtract)\nprint(new_date_int)  # Output: 20120114\n```\n\n### Explanation:\n\n- **`int_to_date(date_int)`**: Converts the integer representation of a date to a `datetime` object by slicing the integer as a string to extract the year, month, and day.\n\n- **`date_to_int(date_obj)`**: Converts a `datetime` object back to the integer format using `strftime` to format the date as `YYYYMMDD`.\n\n- **`add_days_to_int_date(date_int, days)`**: First converts the integer date to a `datetime` object, then adds or subtracts the specified number of days, and finally converts it back to the integer format.\n\nThis approach provides a flexible way to perform date arithmetic on integer formatted dates."
    }
]