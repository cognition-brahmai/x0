[
    {
        "role": "user",
        "content": "I'm having trouble with my sqlite database in Django. I have two classes - a parent table class named `Categorie` and a child table class `Article`. I initially created the `Article` class and added entries. Later, I added the `Categorie` class and tried to establish a foreign key relationship from `Article` to `Categorie`. However, when I run `python manage.py makemigrations <my_app_name>`, I'm facing a TypeError: `__init__() missing 1 required positional argument: 'on_delete'`. How can I resolve this issue?\n\nThe code for my classes is as follows:\n\n```python\nfrom django.db import models\n\nclass Categorie(models.Model):\n    nom = models.CharField(max_length=30)\n\n    def __str__(self):\n        return self.nom\n\nclass Article(models.Model):\n    titre=models.CharField(max_length=100)\n    auteur=models.CharField(max_length=42)\n    contenu=models.TextField(null=True)\n    date=models.DateTimeField(\n        auto_now_add=True,\n        auto_now=False,\n        verbose_name=\"Date de parution\"\n    )\n    categorie = models.ForeignKey('Categorie')\n\n    def __str__(self):\n        return self.titre\n```\n\nThe traceback of the error is:\n\n```python\nTraceback (most recent call last):\n  ... (truncated for brevity)\n  File \"C:\\Users\\lislis\\Django\\mon_site\\blog\\models.py\", line 16, in Article\n    categorie = models.ForeignKey('Categorie')\nTypeError: __init__() missing 1 required positional argument: 'on_delete'\n```\n\nI have found some similar issues on stackoverflow, but they don't seem to be the same problem."
    },
    {
        "role": "assistant",
        "content": "The error message you're encountering is due to the fact that when you define a `ForeignKey` in Django, you must specify the `on_delete` argument. This argument tells Django what to do when the referenced object (in this case, a `Categorie`) is deleted. \n\nTo resolve this issue, you need to add the `on_delete` parameter to the `ForeignKey` field in your `Article` model. Here's how you can modify your code:\n\n```python\nfrom django.db import models\n\nclass Categorie(models.Model):\n    nom = models.CharField(max_length=30)\n\n    def __str__(self):\n        return self.nom\n\nclass Article(models.Model):\n    titre = models.CharField(max_length=100)\n    auteur = models.CharField(max_length=42)\n    contenu = models.TextField(null=True)\n    date = models.DateTimeField(\n        auto_now_add=True,\n        auto_now=False,\n        verbose_name=\"Date de parution\"\n    )\n    categorie = models.ForeignKey('Categorie', on_delete=models.CASCADE)\n\n    def __str__(self):\n        return self.titre\n```\n\nIn this example, `on_delete=models.CASCADE` means that when a `Categorie` is deleted, all related `Article` instances will also be deleted. This is a common choice, but you can choose other options depending on your requirements, such as `models.SET_NULL`, `models.PROTECT`, etc.\n\nAfter making this change, you should run:\n\n```bash\npython manage.py makemigrations <my_app_name>\npython manage.py migrate\n```\n\nThis will create the necessary migrations and apply them to your database. If you have existing data that you want to keep, make sure to back up your database before performing these operations."
    }
]