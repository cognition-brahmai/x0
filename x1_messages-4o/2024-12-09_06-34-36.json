[
    {
        "role": "user",
        "content": "How can I get the index of non \"NaN\" values from a Pandas DataFrame? I have a DataFrame like this:\n\n```\n    A    b     c\n0   1    q1    1\n1   2    NaN   3\n2   3    q2    3\n3   4    q1    NaN\n4   5    q2    7\n```\n\nI want to get the index of the rows where the column `b` is not NaN. There can be NaN values in other columns, for example, column `c`. Using this non \"NaN\" index list, I then want to create a new DataFrame where column `b` doesn't contain any \"NaN\" values. How can I do this?"
    },
    {
        "role": "assistant",
        "content": "To get the index of rows where the column `b` is not NaN in a Pandas DataFrame, you can use the `notna()` method combined with `index` and boolean indexing. Here's how you can achieve that:\n\n1. Use the `notna()` method on the column `b` to create a boolean mask where `True` indicates non-NaN values.\n2. Use this boolean mask to filter the DataFrame and get the indices of the non-NaN values.\n3. Use these indices to create a new DataFrame that contains only the rows where column `b` is not NaN.\n\nHere's the code to accomplish this:\n\n```python\nimport pandas as pd\nimport numpy as np\n\n# Create the DataFrame\ndata = {\n    'A': [1, 2, 3, 4, 5],\n    'b': ['q1', np.nan, 'q2', 'q1', 'q2'],\n    'c': [1, 3, 3, np.nan, 7]\n}\ndf = pd.DataFrame(data)\n\n# Get the boolean mask for non-NaN values in column 'b'\nnon_nan_mask = df['b'].notna()\n\n# Get the indices of non-NaN values in column 'b'\nnon_nan_indices = df.index[non_nan_mask].tolist()\n\n# Print the indices\nprint(\"Indices of non-NaN values in column 'b':\", non_nan_indices)\n\n# Create a new DataFrame without NaN values in column 'b'\ndf_non_nan_b = df[non_nan_mask]\n\n# Print the new DataFrame\nprint(\"\\nDataFrame with non-NaN values in column 'b':\")\nprint(df_non_nan_b)\n```\n\nRunning this code will give you:\n\n- The indices of non-NaN values in column `b`.\n- A new DataFrame `df_non_nan_b` that only includes the rows where column `b` is not NaN."
    }
]