[
    {
        "role": "user",
        "content": "How can I unpivot specific columns from a pandas DataFrame? I have a DataFrame as follows:\n\n```python\nx = DataFrame.from_dict({'farm' : ['A','B','A','B'], \n                         'fruit':['apple','apple','pear','pear'], \n                         '2014':[10,12,6,8], \n                         '2015':[11,13,7,9]})\n```\n\nWhich gives me:\n\n```python\n   2014  2015 farm  fruit\n0    10    11    A  apple\n1    12    13    B  apple\n2     6     7    A   pear\n3     8     9    B   pear\n```\n\nI want to convert it to this format:\n\n```python\n  farm  fruit  value  year\n0    A  apple     10  2014\n1    B  apple     12  2014\n2    A   pear      6  2014\n3    B   pear      8  2014\n4    A  apple     11  2015\n5    B  apple     13  2015\n6    A   pear      7  2015\n7    B   pear      9  2015\n```\n\nI have tried using `stack` and `unstack` but haven't been successful. Can you suggest a solution?"
    },
    {
        "role": "assistant",
        "content": "To achieve the desired format, you can use the `melt` method in pandas, which is specifically designed to unpivot a DataFrame from wide format to long format. Here's how you can do it for your DataFrame:\n\n```python\nimport pandas as pd\n\n# Create the DataFrame\nx = pd.DataFrame.from_dict({\n    'farm': ['A', 'B', 'A', 'B'],\n    'fruit': ['apple', 'apple', 'pear', 'pear'],\n    '2014': [10, 12, 6, 8],\n    '2015': [11, 13, 7, 9]\n})\n\n# Use melt to unpivot the DataFrame\nx_melted = pd.melt(x, id_vars=['farm', 'fruit'], var_name='year', value_name='value')\n\n# Display the result\nprint(x_melted)\n```\n\nThis will give you the desired output:\n\n```\n  farm  fruit  year  value\n0    A  apple  2014     10\n1    B  apple  2014     12\n2    A   pear  2014      6\n3    B   pear  2014      8\n4    A  apple  2015     11\n5    B  apple  2015     13\n6    A   pear  2015      7\n7    B   pear  2015      9\n```\n\nIn the `melt` function, `id_vars` specifies the columns that should remain as identifiers (i.e., not unpivoted), `var_name` specifies the name of the new column that will hold the former column headers, and `value_name` specifies the name of the new column that will hold the values from the unpivoted columns."
    }
]