[
    {
        "role": "user",
        "content": "I'm using the python cog module to generate C++ boilerplate code. The resulting code is not indented which makes it look ugly and harder to read. Is there a Python utility function that can help me indent the content of a multi-line string in the string generation function, without having to manually indent it?"
    },
    {
        "role": "assistant",
        "content": "Certainly! The `textwrap` module in Python provides a convenient way to handle indentation of multi-line strings. You can use the `textwrap.indent` function to add a specified prefix to the beginning of selected lines in your string. Here's how you can use it to indent your C++ boilerplate code:\n\n```python\nimport textwrap\n\ndef generate_cpp_code():\n    code = \"\"\"\n    int main() {\n        // Your code goes here\n        return 0;\n    }\n    \"\"\"\n    # Indent the code with 4 spaces\n    indented_code = textwrap.indent(code, '    ')\n    return indented_code\n\n# Example usage\ncpp_code = generate_cpp_code()\nprint(cpp_code)\n```\n\nIn this example, the `textwrap.indent` function is used to add four spaces to the beginning of each line of the `code` string. This will result in properly indented C++ code, making it more readable. You can adjust the number of spaces or use a different prefix as needed."
    }
]