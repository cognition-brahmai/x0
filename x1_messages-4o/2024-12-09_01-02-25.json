[
    {
        "role": "user",
        "content": "How can I get the description of a server response code using Python Requests? I noticed that the Requests library can return a response code for a given description. For instance, \"requests.codes.ok\" returns 200, and \"requests.codes.not_found\" returns 404. However, I'm unable to do the reverse; that is, getting a description for a given response code. For example, \"requests.codes[200]\" returns None. I have checked the Requests documentation and online resources, but I can't find a solution to this.\n\n```python\nprint requests.codes.processing  # returns 102\nprint requests.codes.ok          # returns 200\nprint requests.codes.not_found   # returns 404\n\n# The reverse operation does not work:\nprint requests.codes[200]        # returns None\nprint requests.codes.viewkeys()  # returns dict_keys([])\nprint requests.codes.keys()      # returns []\n```"
    },
    {
        "role": "assistant",
        "content": "The `requests.codes` object in the Requests library provides a convenient way to map HTTP status codes to descriptive names, but it doesn't provide a direct way to reverse that mapping. However, you can create your own reverse mapping using the available information from the Requests library.\n\nHere's how you can achieve this by manually creating a dictionary to map status codes back to their descriptions:\n\n```python\nimport requests\n\n# Create a reverse mapping of status codes to their descriptions\nreverse_codes = {v: k for k, v in requests.codes.__dict__.items() if isinstance(v, int)}\n\n# Function to get the description for a given HTTP status code\ndef get_status_description(code):\n    return reverse_codes.get(code, 'Unknown Status Code')\n\n# Example usage\nprint(get_status_description(200))  # Output: 'ok'\nprint(get_status_description(404))  # Output: 'not_found'\nprint(get_status_description(102))  # Output: 'processing'\nprint(get_status_description(500))  # Output: 'server_error'\n```\n\nIn this script, we create a dictionary `reverse_codes` that maps each status code to its corresponding description by iterating over the `requests.codes.__dict__` items. The `get_status_description` function then uses this dictionary to return the description for a given status code, or \"Unknown Status Code\" if the code is not found in the dictionary.\n\nThis approach allows you to effectively reverse the mapping of status codes to descriptions."
    }
]