[
    {
        "role": "user",
        "content": "How can I extract True Negative, False Positive, and False Negative from a confusion matrix of multiclass classification? I am using the Keras library to classify mnist data and the `confusion_matrix` command from `sklearn.metrics` to get the confusion matrix. I am able to extract True Positive using the command `TruePositive= sum(numpy.diag(cm1))`, but I am unsure how to extract the other parameters. Can someone help me with the correct code to do this?"
    },
    {
        "role": "assistant",
        "content": "In a multiclass classification setting, the confusion matrix is a bit more complex compared to binary classification. For each class, you will have a mini confusion matrix where:\n\n- True Positives (TP) are the elements on the diagonal for that class.\n- False Negatives (FN) are the sum of the corresponding row, excluding the TP.\n- False Positives (FP) are the sum of the corresponding column, excluding the TP.\n- True Negatives (TN) are the sum of all the other elements (i.e., total sum minus TP, FN, and FP).\n\nHere's how you can extract these values using NumPy and scikit-learn:\n\n```python\nimport numpy as np\nfrom sklearn.metrics import confusion_matrix\n\n# Assuming y_true and y_pred are your true labels and predicted labels\n# cm1 is your confusion matrix\ncm1 = confusion_matrix(y_true, y_pred)\n\n# Initialize variables to store the results\nnum_classes = cm1.shape[0]\nTP = np.diag(cm1)\nFP = np.sum(cm1, axis=0) - TP\nFN = np.sum(cm1, axis=1) - TP\nTN = []\n\nfor i in range(num_classes):\n    # Total sum of matrix - sum of the row - sum of the column + diagonal element\n    TN.append(np.sum(cm1) - (FP[i] + FN[i] + TP[i]))\n\n# Convert TN to a numpy array for easier handling\nTN = np.array(TN)\n\n# Now you have TP, FP, FN, TN for each class\nprint(\"True Positives:\", TP)\nprint(\"False Positives:\", FP)\nprint(\"False Negatives:\", FN)\nprint(\"True Negatives:\", TN)\n```\n\nThis code will provide you with the counts of True Positives, False Positives, False Negatives, and True Negatives for each class in your multiclass classification problem. You can further use these values to calculate metrics like precision, recall, F1-score, etc., for each class if needed."
    }
]