[
    {
        "role": "user",
        "content": "Is there a standard function in Python that outputs True or False probabilistically based on the input of a random number from 0 to 1? For instance, if we input 0.7, the function should return True with a 70% probability and False with a 30% probability. The function structure I'm trying to create looks like this:\n\n```python\ndef decision(probability):\n    # code goes here\n    return # True or False\n```"
    },
    {
        "role": "assistant",
        "content": "Yes, you can achieve this by using the `random` module in Python. The `random()` function generates a random float between 0.0 and 1.0. You can compare this random number with your input probability to decide whether to return `True` or `False`. Here's how you can implement the `decision` function:\n\n```python\nimport random\n\ndef decision(probability):\n    return random.random() < probability\n\n# Example usage:\n# This will return True approximately 70% of the time and False 30% of the time.\nresult = decision(0.7)\nprint(result)\n```\n\nIn this function, `random.random()` generates a random float between 0.0 and 1.0. If this float is less than the input `probability`, the function returns `True`; otherwise, it returns `False`."
    }
]