[
    {
        "role": "user",
        "content": "How can I send a custom \"Accept\" header in my HTTP Request using urllib2.urlopen()?"
    },
    {
        "role": "assistant",
        "content": "In Python, if you want to send a custom \"Accept\" header in an HTTP request using `urllib2`, you'll need to use a `Request` object where you can set your custom headers. Below is an example of how you can do this:\n\n```python\nimport urllib2\n\n# Define the URL you want to request\nurl = 'http://example.com'\n\n# Create a Request object\nrequest = urllib2.Request(url)\n\n# Set the custom 'Accept' header\nrequest.add_header('Accept', 'application/json')\n\n# Send the request and receive the response\nresponse = urllib2.urlopen(request)\n\n# Read the response\nresponse_data = response.read()\n\n# Print the response data\nprint(response_data)\n\n# Close the response\nresponse.close()\n```\n\nIn this example:\n\n- We import the `urllib2` module (note that `urllib2` is available in Python 2.x; if you're using Python 3.x, you'll have to use `urllib.request` instead).\n- We create a `Request` object with the target URL.\n- We use the `add_header` method of the `Request` object to set the \"Accept\" header to our desired value, such as 'application/json' if you want to accept JSON responses.\n- We then use `urllib2.urlopen` to send the request and receive the response.\n- Finally, we read and print the response content.\n\nIf you are using Python 3, you should replace `urllib2` with `urllib.request` like this:\n\n```python\nimport urllib.request\n\nurl = 'http://example.com'\nrequest = urllib.request.Request(url)\nrequest.add_header('Accept', 'application/json')\nresponse = urllib.request.urlopen(request)\nresponse_data = response.read()\nprint(response_data)\nresponse.close()\n```\n\nThis will achieve the same result in Python 3."
    }
]