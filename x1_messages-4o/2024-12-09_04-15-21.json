[
    {
        "role": "user",
        "content": "How can I add a header to a urllib2 opener in Python? I am currently using a cookie jar with an opener to visit different websites as shown in the code below:\n\n```python\ncj = cookielib.CookieJar()\nopener = urllib2.build_opener(urllib2.HTTPCookieProcessor(cj))    \nopener.open('http://abc.com')\nopener.open('http://google.com')\n```\nI am trying to figure out how to set a header so that it is applied each time a website is visited."
    },
    {
        "role": "assistant",
        "content": "To add a header to a `urllib2` opener in Python that gets applied each time you visit a website, you can use a custom `urllib2.HTTPHandler` to add the headers. Here's how you can modify your code to include a custom header:\n\n```python\nimport cookielib\nimport urllib2\n\n# Create a cookie jar\ncj = cookielib.CookieJar()\n\n# Define a custom opener with a header\nclass HeaderProcessor(urllib2.BaseHandler):\n    def __init__(self, headers):\n        self.headers = headers\n\n    def http_request(self, req):\n        for key, value in self.headers.items():\n            req.add_header(key, value)\n        return req\n\n    def https_request(self, req):\n        for key, value in self.headers.items():\n            req.add_header(key, value)\n        return req\n\n# Define headers you want to add\nheaders = {\n    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64)',\n    'Accept-Language': 'en-US,en;q=0.5'\n}\n\n# Build an opener with the custom header processor\nopener = urllib2.build_opener(urllib2.HTTPCookieProcessor(cj), HeaderProcessor(headers))\n\n# Use the opener to open URLs\nresponse = opener.open('http://abc.com')\nprint(response.read())\n\nresponse = opener.open('http://google.com')\nprint(response.read())\n```\n\nThis implementation defines a `HeaderProcessor` class that extends `urllib2.BaseHandler`. It overrides the `http_request` and `https_request` methods to add the specified headers to each request. When you build the opener, you include this custom processor along with the `HTTPCookieProcessor`. Now, every request made using this opener will automatically include the specified headers."
    }
]