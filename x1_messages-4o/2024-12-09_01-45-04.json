[
    {
        "role": "user",
        "content": "I have a large text file, 'really_big_file.txt', with 100,000 lines. I am looking for a Python script that can break this large file into smaller files, each containing 300 lines of the original file. For instance, 'small_file_300.txt' should have lines 1-300, 'small_file_600.txt' should have lines 301-600, and so on until all the lines from the large file are distributed among the smaller files. Can someone guide me on the simplest way to achieve this using Python?"
    },
    {
        "role": "assistant",
        "content": "Certainly! You can achieve this by reading the large file in chunks and writing each chunk to a new smaller file. Here's a simple Python script that does that:\n\n```python\ndef split_file(input_file, lines_per_file):\n    with open(input_file, 'r') as file:\n        lines = file.readlines()\n    \n    total_lines = len(lines)\n    file_number = 1\n\n    for start in range(0, total_lines, lines_per_file):\n        end = start + lines_per_file\n        small_file_name = f'small_file_{end}.txt'\n        \n        with open(small_file_name, 'w') as small_file:\n            small_file.writelines(lines[start:end])\n        \n        file_number += 1\n        print(f\"Created {small_file_name} with lines {start+1}-{min(end, total_lines)}\")\n        \nif __name__ == \"__main__\":\n    split_file('really_big_file.txt', 300)\n```\n\n### How it works:\n1. **Read the large file:** The script reads all lines of the file into a list `lines`.\n2. **Determine the total number of lines:** It calculates the total number of lines in the file.\n3. **Split the lines into chunks:** The script uses a loop to iterate over chunks of lines. Each chunk is defined by the `lines_per_file` variable.\n4. **Write chunks to new files:** For each chunk, it writes the lines to a new file named `small_file_<end>.txt`, where `<end>` is the last line number in that chunk.\n5. **Print confirmation:** It prints a confirmation message for each new file created, showing which lines are included.\n\n### Usage:\n- Make sure your `really_big_file.txt` is in the same directory as the script or provide the correct path.\n- Run the script, and it will create the smaller files in the same directory.\n\nThis script is straightforward and works efficiently for your requirements."
    }
]