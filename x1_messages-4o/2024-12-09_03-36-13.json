[
    {
        "role": "user",
        "content": "How can I disable the automatic sorting of Python imports in Visual Studio Code? I have some code that must run in between various imports, so the order is important. Every time I save my file, it moves all imports to the top. I've tried to stop this by adding the following code to my user settings, but it doesn't seem to work:\n\n```json\n\"editor.codeActionsOnSave\": {\n    \"source.organizeImports\": false\n}\n```\n\nI would like to keep the formatting on save feature on, except for the imports. How can I achieve this?"
    },
    {
        "role": "assistant",
        "content": "If Visual Studio Code is automatically sorting your imports even after you've disabled the `source.organizeImports` setting, it's possible that an extension like \"Python\" or \"Prettier\" is managing this behavior. Here's how you can address the issue:\n\n1. **Check Extensions**:\n   - Make sure extensions like \"Python\" or any other related to formatting or linting are not overriding your settings. You can look into their specific settings.\n\n2. **Disable Import Sorting in Python Extension**:\n   - If you have the Python extension, it might be using tools like `isort`. You can configure it by adding an `isort` configuration file (`.isort.cfg` or similar) in your project directory and specify that imports should not be sorted:\n     ```ini\n     [settings]\n     known_third_party=\n     known_first_party=\n     known_standard_library=\n     no_lines_before=STDLIB,THIRDPARTY,FIRSTPARTY\n     ```\n\n3. **Prettier Configuration**:\n   - If you're using Prettier, ensure that it is not managing imports. You can check its settings or add rules to ignore specific files or patterns.\n\n4. **Check for Other Extensions**:\n   - Sometimes, other extensions might enforce specific code styles. Review the settings of all installed extensions to see if any are affecting import order.\n\n5. **User and Workspace Settings**:\n   - Ensure that the setting `\"editor.codeActionsOnSave\": { \"source.organizeImports\": false }` is included in both your user settings and the workspace settings, as workspace settings can override user settings.\n\n6. **Use a `.vscode/settings.json` File**:\n   - You can add the setting directly to the `.vscode/settings.json` file in your project directory to ensure it applies to your project specifically:\n     ```json\n     {\n       \"editor.codeActionsOnSave\": {\n         \"source.organizeImports\": false\n       }\n     }\n     ```\n\n7. **Check for Other Configuration Files**:\n   - Some projects may have configuration files like `.editorconfig`, `setup.cfg`, or `pyproject.toml` that might contain settings for tools like `isort`. Check these for any import sorting configurations.\n\nBy following these steps, you should be able to disable the automatic sorting of imports while keeping other formatting features enabled."
    }
]