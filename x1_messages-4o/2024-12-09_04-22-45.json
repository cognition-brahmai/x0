[
    {
        "role": "user",
        "content": "How can I include the homepage in the Sphinx Table of Contents (TOC) in my project? I have a project structure as follows:\n\n```\nindex.rst\ninstallation.rst\ntemplating/\n    index.rst\n    module.rst\n    fieldtype.rst\n```\n\nThe `index.rst` (the homepage) has the following TOC tree:\n\n```\n.. toctree::\n   :titlesonly:\n\n   installation\n   templating/index\n```\n\nI want the template to include a sidebar that lists all 3 top-level pages (homepage, installation, templating/index). I've tried adding a second, hidden TOC tree in the homepage and also tried to hardcode the actual homepage link right into the sidebar of the template. Both methods lead to issues either with the `next` variable being set to the current page or with the docs not being accessible from the file system. I want a solution that doesn't break the `next` links and works with a dynamic path that works on a local file system, even from within subfolders."
    },
    {
        "role": "assistant",
        "content": "To include the homepage in the Sphinx Table of Contents (TOC), and ensure that your navigation works seamlessly without breaking the `next` links, you can take advantage of a few Sphinx features. Here\u2019s a step-by-step guide on how to achieve this:\n\n1. **Modify the Main `index.rst`:**\n\n   Ensure that your main `index.rst` includes itself in the TOC tree. This might seem redundant, but it can help ensure the homepage is explicitly listed. Modify your `index.rst` like this:\n\n   ```rst\n   .. toctree::\n      :titlesonly:\n\n      index\n      installation\n      templating/index\n   ```\n\n   Note: Ensure that the homepage `index.rst` is the first entry in the TOC tree.\n\n2. **Ensure Correct References:**\n\n   Make sure the references in your TOC tree are correct. The `index` should refer to the homepage correctly without any path prefix, assuming it's in the root directory of your documentation.\n\n3. **Configure `conf.py` for Sidebar:**\n\n   In your `conf.py`, ensure that the sidebar templates are set correctly to include the TOC tree. You might have a configuration like this:\n\n   ```python\n   html_sidebars = {\n       '**': [\n           'globaltoc.html',\n           'relations.html',  # needs 'show_related': True theme option to display\n           'sourcelink.html',\n           'searchbox.html',\n       ]\n   }\n   ```\n\n   This setup includes the global TOC and navigation links.\n\n4. **Use `:caption:` and `:hidden:` Options:**\n\n   If you want to organize your TOC but hide some details, you can use the `:caption:` and `:hidden:` options in your TOC trees to manage visibility:\n\n   ```rst\n   .. toctree::\n      :caption: Contents\n      :hidden:\n\n      index\n      installation\n      templating/index\n   ```\n\n   While hidden, the TOC will still be processed, allowing for proper navigation links.\n\n5. **Verify Relative Paths:**\n\n   Ensure that all paths in your TOC are relative to the location of your `index.rst` files. This will help maintain proper linking when navigating from subdirectories.\n\n6. **Build and Test:**\n\n   Finally, build your documentation using `make html` or the appropriate command for your setup (`sphinx-build`), and test the navigation to ensure everything links correctly.\n\nBy following these steps, you should be able to include the homepage in the TOC and ensure that navigation links like `next` and `previous` function as expected without hardcoding paths or breaking any links."
    }
]