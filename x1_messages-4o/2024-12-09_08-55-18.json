[
    {
        "role": "user",
        "content": "I need help developing a program to perform an insertion sort on an array. Can someone provide a solution?"
    },
    {
        "role": "assistant",
        "content": "Certainly! I'd be happy to help you with that. Here's a simple implementation of the insertion sort algorithm in Python:\n\n```python\ndef insertion_sort(arr):\n    # Traverse from the second element to the end of the array\n    for i in range(1, len(arr)):\n        key = arr[i]  # The element to be positioned\n        j = i - 1\n\n        # Move elements of arr[0..i-1], that are greater than the key,\n        # to one position ahead of their current position\n        while j >= 0 and key < arr[j]:\n            arr[j + 1] = arr[j]\n            j -= 1\n\n        arr[j + 1] = key\n\n# Example usage\narray = [12, 11, 13, 5, 6]\nprint(\"Original array:\", array)\ninsertion_sort(array)\nprint(\"Sorted array:\", array)\n```\n\n**Explanation:**\n- The algorithm begins from the second element (index 1) and assumes that the preceding elements are sorted.\n- For each element, it compares it with the elements before it and shifts larger elements one position to the right.\n- It then places the element in its correct position within the sorted part of the array.\n- This process is repeated for all elements, resulting in a sorted array.\n\nFeel free to test this code and let me know if you have any further questions!"
    }
]