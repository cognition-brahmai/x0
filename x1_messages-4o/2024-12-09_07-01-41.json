[
    {
        "role": "user",
        "content": "I am using Selenium WebDriver in Python to scrape a table from a webpage written in JavaScript. I am iterating through a list of table rows, where each row could potentially be of a different class. I want to extract the name of these classes so I can apply different actions depending on the class name. Here is my current code:\n\n```python\ntable_body = table.find_element_by_tag_name('tbody')\nrows = table_body.find_elements_by_tag_name('tr')\nfor row in rows:\n    if (row.GetClassName()==\"date\"):\n        Action1()\n    else:\n        Action2()\n```\n\nIs it possible to extract the class name of a WebElement in Selenium, or is there a different approach I should take?"
    },
    {
        "role": "assistant",
        "content": "Yes, you can extract the class name of a `WebElement` using Selenium in Python. The `get_attribute` method can be used to retrieve the `class` attribute of an element. Here is how you can modify your code to achieve this:\n\n```python\ntable_body = table.find_element_by_tag_name('tbody')\nrows = table_body.find_elements_by_tag_name('tr')\nfor row in rows:\n    class_name = row.get_attribute('class')\n    if class_name == \"date\":\n        Action1()\n    else:\n        Action2()\n```\n\nHere's a brief explanation of the changes:\n\n- Use `get_attribute('class')` to retrieve the class name of each row.\n- Compare the retrieved class name with the desired class name, such as \"date\", and perform actions accordingly.\n\nThis approach will allow you to handle different actions based on the class name of each row in the table."
    }
]