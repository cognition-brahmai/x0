[
    {
        "role": "user",
        "content": "How can I filter rows in a pandas dataframe based on a list of strings? I have a dataframe with time series data and I want to remove rows where any of the strings in a list are present in the 'stn' column. When I try to use the df['stn'].str.contains('remove_list') function, it returns nothing. I have not been successful with other combinations of quotes, brackets, and even a lambda function. Here is an example of my dataframe: \n\n```\ndf\n         stn     years_of_data  total_minutes avg_daily TOA_daily   K_daily\ndate                        \n1900-01-14  AlberniElementary      4    5745    34.100  114.600 0.298\n1900-01-14  AlberniWeather         6    7129    29.500  114.600 0.257\n1900-01-14  Arbutus                8    11174   30.500  114.600 0.266\n1900-01-14  Arrowview              7    10080   27.600  114.600 0.241\n1900-01-14  Bayside                7    9745    33.800  114.600 0.295\n```\n\nAnd here is the list of strings I want to remove:\n\n```\nremove_list = ['Arbutus','Bayside']\n```"
    },
    {
        "role": "assistant",
        "content": "To filter rows in a pandas DataFrame based on whether the strings in a list are present in a specific column, you can use the `~` (bitwise NOT operator) along with the `isin()` method. This method checks if each element in the column is present in the list and returns a boolean Series. You can then use this boolean Series to filter your DataFrame.\n\nHere is how you can achieve this:\n\n```python\nimport pandas as pd\n\n# Sample DataFrame\ndata = {\n    'stn': ['AlberniElementary', 'AlberniWeather', 'Arbutus', 'Arrowview', 'Bayside'],\n    'years_of_data': [4, 6, 8, 7, 7],\n    'total_minutes': [5745, 7129, 11174, 10080, 9745],\n    'avg_daily': [34.1, 29.5, 30.5, 27.6, 33.8],\n    'TOA_daily': [114.6, 114.6, 114.6, 114.6, 114.6],\n    'K_daily': [0.298, 0.257, 0.266, 0.241, 0.295]\n}\n\ndf = pd.DataFrame(data, index=pd.to_datetime(['1900-01-14'] * 5))\n\n# List of strings to remove\nremove_list = ['Arbutus', 'Bayside']\n\n# Filter DataFrame\nfiltered_df = df[~df['stn'].isin(remove_list)]\n\nprint(filtered_df)\n```\n\nThis code will remove the rows where the 'stn' column contains any of the strings in `remove_list`. The `~` operator negates the boolean Series returned by `isin()`, effectively keeping only the rows where the 'stn' value is not in `remove_list`. As a result, the DataFrame `filtered_df` will not contain the rows corresponding to 'Arbutus' and 'Bayside'."
    }
]