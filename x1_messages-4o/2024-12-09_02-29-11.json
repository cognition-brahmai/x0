[
    {
        "role": "user",
        "content": "In my development process, I create a new local branch for every new feature or story card. When finished, I merge the branch into master and then push. Over time, due to a combination of laziness or forgetfulness, I end up with a large list of local branches, some of which may not have been merged. I know how to list all my local branches and I know how to remove a single branch. Is there a git command that allows me to delete all my local branches? I've tried using the `grep -v \\*` command to delete the branches listed by the `git branch --merged` command, but I keep getting errors. \n\nHere is the output of the `git branch --merged` command:\n```\nuser@machine:~/projects/application[master]$ git branch --merged\n  STORY-123-Short-Description\n  STORY-456-Another-Description\n  STORY-789-Blah-Blah\n* master\n```\n\nAnd here are the errors I get when I attempt to delete the branches:\n```\nerror: branch 'STORY-123-Short-Description' not found.\nerror: branch 'STORY-456-Another-Description' not found.\nerror: branch 'STORY-789-Blah-Blah' not found.\n```\nI'm using git 1.7.4.1, ubuntu 10.04, GNU bash, version 4.1.5(1)-release, and GNU grep 2.5.4."
    },
    {
        "role": "assistant",
        "content": "It looks like you're trying to automate the process of deleting merged local branches in Git. The error messages you're encountering suggest there might be a mismatch between the branch names you're trying to delete and what is actually stored in your local repository.\n\nHere's a step-by-step guide to help you delete all local branches that have been merged into `master`:\n\n1. **Ensure You're on `master`:** First, make sure you're on the `master` branch. You cannot delete the branch you are currently on.\n\n    ```bash\n    git checkout master\n    ```\n\n2. **List Merged Branches:** Use the `git branch --merged` command to list all branches that are merged into the current branch (`master` in this case).\n\n3. **Delete Merged Branches:** Use the following command to delete all branches that have been merged into `master` except for `master` itself:\n\n    ```bash\n    git branch --merged | grep -v \"^\\*\" | xargs -n 1 git branch -d\n    ```\n\n   - `git branch --merged` lists all branches merged into `master`.\n   - `grep -v \"^\\*\"` filters out the current branch (marked with `*`).\n   - `xargs -n 1 git branch -d` takes each branch name and deletes it one by one.\n\nThis command sequence should help you clean up your local branches effectively. If you still encounter errors, ensure that the branch names do not have any leading/trailing spaces or special characters that might be causing issues. You can debug by printing the branch names before passing them to `xargs`:\n\n```bash\ngit branch --merged | grep -v \"^\\*\" | while read branch; do echo \"Deleting branch: '$branch'\"; git branch -d \"$branch\"; done\n```\n\nThis script will print each branch name before attempting to delete it, which can help identify any formatting issues. If the branches still can't be found, double-check their names against what `git branch` outputs, ensuring there's no discrepancy."
    }
]