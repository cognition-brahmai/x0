[
    {
        "role": "user",
        "content": "How can I modify the opacity of rectangles drawn using cv2.rectangle in OpenCV? I am currently able to draw rectangles and put text in them using the following code:\n\n```python\n# Draw rectangle    p1(x,y)    p2(x,y)    Student name box\ncv2.rectangle(frame, (500, 650), (800, 700), (42, 219, 151), cv2.FILLED )\nfont = cv2.FONT_HERSHEY_DUPLEX\ncv2.putText(frame, name, (510, 685), font, 1.0, (255, 255, 255), 1)\n```\nHowever, the opacity of all the boxes is at 100%. How can I adjust this so that the final result looks like the image linked in the original post?"
    },
    {
        "role": "assistant",
        "content": "To modify the opacity of rectangles drawn using OpenCV, you need to blend the rectangle with the original image. You can achieve this by creating a weighted sum of the rectangle and the original image. Here's how you can do it:\n\n```python\nimport cv2\nimport numpy as np\n\n# Assuming 'frame' is your original image\n# Create an overlay that will contain the semi-transparent rectangle\noverlay = frame.copy()\n\n# Define the rectangle's top-left and bottom-right corners\ntop_left = (500, 650)\nbottom_right = (800, 700)\n\n# Draw a filled rectangle on the overlay\ncv2.rectangle(overlay, top_left, bottom_right, (42, 219, 151), cv2.FILLED)\n\n# Set the opacity level (0.0 to 1.0)\nopacity = 0.5\n\n# Blend the overlay with the original frame\ncv2.addWeighted(overlay, opacity, frame, 1 - opacity, 0, frame)\n\n# Now, put the text on the original frame\nfont = cv2.FONT_HERSHEY_DUPLEX\ncv2.putText(frame, name, (510, 685), font, 1.0, (255, 255, 255), 1)\n\n# Display the final image\ncv2.imshow('Image with Transparent Rectangle', frame)\ncv2.waitKey(0)\ncv2.destroyAllWindows()\n```\n\n### Explanation:\n- **Overlay Creation**: We first create a copy of the original image (`overlay`) to draw the rectangle on it.\n- **Drawing on Overlay**: We draw the rectangle on the `overlay` image.\n- **Opacity Control**: We use `cv2.addWeighted()` to blend the `overlay` with the original image (`frame`). The `opacity` variable controls the transparency level of the rectangle.\n- **Add Text**: Finally, we add text to the original frame.\n\nBy adjusting the `opacity` variable, you can control how transparent the rectangle appears on the image."
    }
]