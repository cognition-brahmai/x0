[
    {
        "role": "user",
        "content": "How can I sort a list of dictionaries by multiple keys in Python? I have a list of dictionaries and I need to sort it in reverse order by the key 'Total_Points', then in non-reverse order by 'TOT_PTS_Misc'. I am currently sorting this manually using a lambda function like so: `a = sorted(b, key=lambda d: (-d['Total_Points'], d['TOT_PTS_Misc']))`. However, I want to run this through a function, where I pass in the list and the sort keys. For example, `def multikeysort(dict_list, sortkeys):`. How can I modify the lambda line to sort the list for an arbitrary number of keys that are passed into the multikeysort function, taking into consideration that the sortkeys may have any number of keys and those that need reversed sorts will be identified with a '-' before it?"
    },
    {
        "role": "assistant",
        "content": "To create a function that sorts a list of dictionaries by multiple keys, while allowing for reverse sorting specified by a '-' prefix in the sort key, you can build a custom sorting function. Here's how you can implement the `multikeysort` function:\n\n```python\ndef multikeysort(dict_list, sortkeys):\n    from functools import cmp_to_key\n\n    def compare(item1, item2):\n        for key in sortkeys:\n            reverse = False\n            if key.startswith('-'):\n                key = key[1:]\n                reverse = True\n            \n            value1 = item1[key]\n            value2 = item2[key]\n\n            if value1 < value2:\n                return -1 if not reverse else 1\n            elif value1 > value2:\n                return 1 if not reverse else -1\n        return 0\n\n    sorted_list = sorted(dict_list, key=cmp_to_key(compare))\n    return sorted_list\n\n# Example usage:\nb = [\n    {'Total_Points': 10, 'TOT_PTS_Misc': 5},\n    {'Total_Points': 8, 'TOT_PTS_Misc': 9},\n    {'Total_Points': 10, 'TOT_PTS_Misc': 3},\n]\n\nsortkeys = ['-Total_Points', 'TOT_PTS_Misc']\nsorted_b = multikeysort(b, sortkeys)\nprint(sorted_b)\n```\n\n### Explanation:\n1. **Function `multikeysort`**: This function takes a list of dictionaries and a list of sort keys.\n2. **`compare` function**: A custom comparison function is defined to handle the sorting logic based on the keys provided. It checks if any key has a '-' prefix to determine the sorting order (ascending or descending).\n3. **`cmp_to_key`**: This utility converts the comparison function into a key function that can be used with Python's `sorted` function.\n4. **Iterating over keys**: The `compare` function iterates over the keys, comparing the respective values from the dictionaries and determining their order.\n5. **Handling reverse order**: The reverse order is handled by checking the presence of a '-' prefix and flipping the comparison results accordingly.\n\nThis function allows you to sort a list of dictionaries by any number of keys, with flexibility in specifying ascending or descending order for each key."
    }
]