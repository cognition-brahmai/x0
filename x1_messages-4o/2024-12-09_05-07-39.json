[
    {
        "role": "user",
        "content": "How can I obtain the indices of the top N values in a list using Python? For example, if I have a list `a = [5,3,1,4,10]`, I would like to obtain the indices of the top two values (5 and 10) which would be `[0, 4]`. Is there a concise way to achieve this?"
    },
    {
        "role": "assistant",
        "content": "Certainly! You can achieve this using Python's built-in functions along with the `sorted` function. Here's a concise way to get the indices of the top N values in a list:\n\n```python\ndef get_top_n_indices(lst, n):\n    return sorted(range(len(lst)), key=lambda i: lst[i], reverse=True)[:n]\n\na = [5, 3, 1, 4, 10]\ntop_indices = get_top_n_indices(a, 2)\nprint(top_indices)\n```\n\nIn this function, `sorted(range(len(lst)), key=lambda i: lst[i], reverse=True)` sorts the indices of the list `lst` based on the values at those indices in descending order. The `[:n]` slice is then used to obtain the top N indices. For your example, this will output `[4, 0]`, which are the indices of the top two values, `10` and `5`."
    }
]