[
    {
        "role": "user",
        "content": "In Django, I am currently creating a JsonResponse with the following code: \n\n```python\nresponse = JsonResponse({'status': 'false', 'message': message})\nreturn response\n```\nThis returns a JSON object when there is an error but the status code is `HTTP 200`. How can I modify the status code of the JsonResponse to indicate an error?"
    },
    {
        "role": "assistant",
        "content": "In Django, you can modify the status code of a `JsonResponse` by passing the `status` parameter to the `JsonResponse` constructor. For an error response, you might want to use a status code like `400` for a bad request or `500` for an internal server error, depending on the nature of the error. Here's how you can do it:\n\n```python\nfrom django.http import JsonResponse\n\n# Example error response with a 400 status code\nresponse = JsonResponse({'status': 'false', 'message': message}, status=400)\nreturn response\n```\n\nIn this example, the `status=400` parameter sets the HTTP status code of the response to 400 (Bad Request). You can adjust this to other status codes as needed for your specific error handling requirements."
    }
]