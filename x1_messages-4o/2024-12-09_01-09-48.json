[
    {
        "role": "user",
        "content": "How can I record and store the computation time for each epoch in Keras during model.fit()? I want to compare the computation time between different models. The computation time per epoch is printed to the console as shown below:\n\n```\nEpoch 5/5\n160000/160000 [==============================] - **10s** ......\n```\nI am seeking a method to save these times in a similar manner to how the model metrics are saved in each epoch and made available through the history object."
    },
    {
        "role": "assistant",
        "content": "To record and store the computation time for each epoch in Keras during model training, you can create a custom callback. This callback will capture the start and end time of each epoch, calculate the duration, and store it in a list or any other structure you prefer. Here\u2019s how you can implement it:\n\n```python\nimport time\nfrom keras.callbacks import Callback\n\nclass TimeHistory(Callback):\n    def on_train_begin(self, logs={}):\n        self.times = []\n\n    def on_epoch_begin(self, epoch, logs={}):\n        self.epoch_time_start = time.time()\n\n    def on_epoch_end(self, epoch, logs={}):\n        self.times.append(time.time() - self.epoch_time_start)\n\n# Instantiate the callback\ntime_callback = TimeHistory()\n\n# Use the callback during model training\nhistory = model.fit(x_train, y_train, epochs=5, callbacks=[time_callback])\n\n# Access the recorded times after training\nepoch_times = time_callback.times\nprint(\"Epoch times:\", epoch_times)\n```\n\n### Explanation:\n- **TimeHistory Class**: This custom callback inherits from `keras.callbacks.Callback`. It defines three methods:\n  - `on_train_begin`: Initializes a list `self.times` to store time durations for each epoch.\n  - `on_epoch_begin`: Records the start time of the epoch.\n  - `on_epoch_end`: Calculates the duration of the epoch and appends it to the `self.times` list.\n  \n- **Usage**: Instantiate the `TimeHistory` class and pass it to the `callbacks` parameter of the `model.fit()` method.\n\n- **Accessing Epoch Times**: After training, you can access the duration of each epoch from the `times` attribute of the `TimeHistory` instance.\n\nThis method allows you to store and analyze the computation times for each epoch, making it easier to compare the performance of different models."
    }
]