[
    {
        "role": "user",
        "content": "I'm trying to install SciPy on Ubuntu with Python 2.7 and using easy_install. However, I'm encountering several errors related to missing Blas and Atlas libraries despite having installed them. How can I solve this issue? The error messages are as follows:\n\n```\nSearching for scipy\nReading http://pypi.python.org/simple/scipy/\nReading http://www.scipy.org\nReading http://sourceforge.net/project/showfiles.php?group_id=27747&amp;package_id=19531\nReading http://new.scipy.org/Wiki/Download\nBest match: scipy 0.11.0\nDownloading http://pypi.python.org/packages/source/s/scipy/scipy-0.11.0.zip#md5=40b700ddde9ddab643b640fff7a9d753\nProcessing scipy-0.11.0.zip\nRunning scipy-0.11.0/setup.py -q bdist_egg --dist-dir /tmp/easy_install-49BQSz/scipy-0.11.0/egg-dist-tmp-KMjwKy\nRunning from scipy source directory.\n/usr/lib64/python2.7/site-packages/numpy/distutils/system_info.py:1425: UserWarning: \n    Atlas (http://math-atlas.sourceforge.net/) libraries not found.\n    Directories to search for the libraries can be specified in the\n    numpy/distutils/site.cfg file (section [atlas]) or by setting\n    the ATLAS environment variable.\n  warnings.warn(AtlasNotFoundError.__doc__)\n/usr/lib64/python2.7/site-packages/numpy/distutils/system_info.py:1434: UserWarning: \n    Blas (http://www.netlib.org/blas/) libraries not found.\n    Directories to search for the libraries can be specified in the\n    numpy/distutils/site.cfg file (section [blas]) or by setting\n    the BLAS environment variable.\n  warnings.warn(BlasNotFoundError.__doc__)\n/usr/lib64/python2.7/site-packages/numpy/distutils/system_info.py:1437: UserWarning: \n    Blas (http://www.netlib.org/blas/) sources not found.\n    Directories to search for the sources can be specified in the\n    numpy/distutils/site.cfg file (section [blas_src]) or by setting\n    the BLAS_SRC environment variable.\n  warnings.warn(BlasSrcNotFoundError.__doc__)\nerror: \n    Blas (http://www.netlib.org/blas/) libraries not found.\n    Directories to search for the libraries can be specified in the\n    numpy/distutils/site.cfg file (section [blas]) or by setting\n    the BLAS environment variable.\n```\n\nI tried installing Blas and Atlas using the following commands but the error messages remain:\n\n```\napt-get install blas\napt-get install atlas\n```"
    },
    {
        "role": "assistant",
        "content": "When you encounter issues with missing BLAS and ATLAS libraries while attempting to install SciPy, there are several steps you can take to address the problem:\n\n1. **Install the Correct Libraries**: Ensure you have the correct development versions of BLAS and ATLAS installed. The regular packages might not include the necessary headers and development files. Use the following commands:\n\n   ```bash\n   sudo apt-get update\n   sudo apt-get install libblas-dev libatlas-base-dev\n   ```\n\n2. **Install gfortran**: SciPy sometimes requires a Fortran compiler to build from source, so ensure you have `gfortran` installed:\n\n   ```bash\n   sudo apt-get install gfortran\n   ```\n\n3. **Set Environment Variables** (if needed): If the libraries are installed in non-standard locations, you may need to specify the paths. This can be done by setting environment variables before running the installation command:\n\n   ```bash\n   export BLAS=/path/to/blas\n   export LAPACK=/path/to/lapack\n   ```\n\n   You should replace `/path/to/blas` and `/path/to/lapack` with the actual paths to the libraries if they differ from the standard locations.\n\n4. **Use pip instead of easy_install**: It's generally recommended to use `pip` over `easy_install` as it's more modern and handles dependencies better:\n\n   ```bash\n   sudo apt-get install python-pip\n   pip install numpy  # Ensure numpy is installed first\n   pip install scipy\n   ```\n\n5. **Check for Python 2.7 Support**: Note that Python 2.7 is no longer supported. If possible, consider upgrading your project to Python 3.x, as many scientific libraries have dropped support for Python 2.7.\n\n6. **Verify Installation Paths**: Ensure that the paths to the installed libraries are correct and that your Python environment can find them. You might need to modify the `site.cfg` file in the `numpy` directory:\n\n   ```ini\n   [blas]\n   library_dirs = /usr/lib\n   include_dirs = /usr/include\n   ```\n\n7. **Rebuild from Source**: As a last resort, you could try downloading SciPy's source code and building it manually, which might provide more detailed error logs to help diagnose the issue. \n\n   ```bash\n   wget https://github.com/scipy/scipy/releases/download/v0.11.0/scipy-0.11.0.tar.gz\n   tar -xzvf scipy-0.11.0.tar.gz\n   cd scipy-0.11.0\n   python setup.py build\n   python setup.py install\n   ```\n\nFollowing these steps should help resolve the missing library errors when installing SciPy. If you continue to have issues, double-check that all installation paths and environment variables are correctly set."
    }
]