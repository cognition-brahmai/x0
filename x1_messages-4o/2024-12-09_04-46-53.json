[
    {
        "role": "user",
        "content": "In Python, what is the equivalent way to read a text file until EOF (End of File), similar to the \"while not EOF\" code snippet used in C or Pascal? In C or Pascal, I would typically use the following code:\n\n```pascal\nwhile not eof do begin\n  readline(a);\n  do_something;\nend;\n```\n\nHow can I accomplish this in a simple and fast manner using Python?"
    },
    {
        "role": "assistant",
        "content": "In Python, you can read a text file until EOF using a `for` loop to iterate over the lines of the file. This is both simple and efficient. Here's how you can do it:\n\n```python\nwith open('filename.txt', 'r') as file:\n    for line in file:\n        do_something(line)\n```\n\nHere's a breakdown of what this code does:\n\n- `open('filename.txt', 'r')`: Opens the file in read mode.\n- `with`: This statement ensures that the file is properly closed after its suite finishes, even if an exception is raised.\n- `for line in file`: Iterates over each line in the file. Python automatically handles reading lines until the end of the file.\n- `do_something(line)`: Replace this with whatever processing you need to perform on each line.\n\nThis method is efficient because it reads the file line by line, using memory only for one line at a time, making it suitable for large files."
    }
]