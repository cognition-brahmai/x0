[
    {
        "role": "user",
        "content": "I am currently working with Python's requests module (http://pypi.python.org/pypi/requests) and I need to add a header to both `request.post()` and `request.get()`. I previously used the httplib module to add headers in a request. Now, I want to replicate the same process but with the requests module. How can I add a 'foobar' key in the header for each request?"
    },
    {
        "role": "assistant",
        "content": "To add a custom header to your HTTP requests using the `requests` module in Python, you can pass a dictionary containing the header(s) to the `headers` parameter of the `requests.post()` and `requests.get()` methods. Here's how you can add a `'foobar'` key to the headers of both POST and GET requests:\n\n```python\nimport requests\n\n# Define the headers with the 'foobar' key\nheaders = {\n    'foobar': 'your_header_value'\n}\n\n# For a GET request\nresponse_get = requests.get('http://example.com', headers=headers)\nprint(response_get.status_code)\nprint(response_get.text)\n\n# For a POST request\nresponse_post = requests.post('http://example.com', headers=headers, data={'key': 'value'})\nprint(response_post.status_code)\nprint(response_post.text)\n```\n\nIn this example, replace `'your_header_value'` with the actual value you want to use for the `'foobar'` header. Similarly, change `'http://example.com'` to the URL you are targeting for your requests. The `data` parameter in the POST request is where you can include the data you want to send in the body of the request."
    }
]