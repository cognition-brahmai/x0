[
    {
        "role": "user",
        "content": "How can I check the extension of a file in my program? I'm working on an application where I need to perform different operations based on the file's extension. Is it possible for me to use the following code snippet?\n\n```python\nif m == *.mp3\n   ...\nelif m == *.flac\n   ...\n```"
    },
    {
        "role": "assistant",
        "content": "In Python, you cannot use the wildcard `*` directly in a condition like that. Instead, you can use string methods or the `os.path` module to check the extension of a file. Here's a more appropriate way to handle this:\n\n```python\nimport os\n\n# Assuming 'm' is the filename or path\nm = \"example.mp3\"  # Replace with your variable\n\n# Get the file extension\n_, file_extension = os.path.splitext(m)\n\n# Check the extension and perform operations\nif file_extension == \".mp3\":\n    # Perform operations for mp3 files\n    print(\"This is an MP3 file.\")\nelif file_extension == \".flac\":\n    # Perform operations for flac files\n    print(\"This is a FLAC file.\")\nelse:\n    print(\"Unknown file type.\")\n```\n\nThis code uses `os.path.splitext()` to split the filename into its root and extension, allowing you to easily compare the extension with your desired types. Adjust the variable `m` to reflect your actual filename variable in your program."
    }
]