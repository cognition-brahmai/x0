[
    {
        "role": "user",
        "content": "In Keras, what is the difference between `categorical_accuracy` and `sparse_categorical_accuracy`? The Keras documentation doesn't provide clear information about these metrics. The source code for these functions is as follows:\n\n```python\ndef categorical_accuracy(y_true, y_pred):\n    return K.cast(K.equal(K.argmax(y_true, axis=-1),\n                          K.argmax(y_pred, axis=-1)),\n                  K.floatx())\n\ndef sparse_categorical_accuracy(y_true, y_pred):\n    return K.cast(K.equal(K.max(y_true, axis=-1),\n                          K.cast(K.argmax(y_pred, axis=-1), K.floatx())),\n                  K.floatx())\n```"
    },
    {
        "role": "assistant",
        "content": "In Keras, both `categorical_accuracy` and `sparse_categorical_accuracy` metrics are used to evaluate the accuracy of models dealing with classification tasks, but they are used in slightly different contexts depending on how your data is formatted.\n\n1. **`categorical_accuracy`**:\n   - This metric is used when the true labels (`y_true`) are provided in a one-hot encoded format. In one-hot encoding, each class is represented by an array where a single element is 1 (indicating the class) and all other elements are 0.\n   - The function works by comparing the indices of the maximum values along the last axis of the `y_true` and `y_pred` arrays. It checks if the predicted class index matches the true class index for each sample.\n\n2. **`sparse_categorical_accuracy`**:\n   - This metric is used when the true labels (`y_true`) are provided as integers (not one-hot encoded). Each integer represents the class index directly.\n   - The function compares the integer value of the true label with the index of the maximum predicted value. It essentially checks if the predicted class index matches the true class index for each sample, where the true class is given as a single integer.\n\n**Key Differences**:\n- **Input Format**: `categorical_accuracy` requires one-hot encoded labels, whereas `sparse_categorical_accuracy` requires integer labels.\n- **Implementation**: In the source code, `categorical_accuracy` uses `K.argmax(y_true, axis=-1)` to find the index of the maximum value in one-hot encoded labels, while `sparse_categorical_accuracy` uses `K.max(y_true, axis=-1)` to directly use the integer class labels.\n\nWhen deciding which metric to use:\n- Use `categorical_accuracy` if your labels are one-hot encoded.\n- Use `sparse_categorical_accuracy` if your labels are in integer form."
    }
]