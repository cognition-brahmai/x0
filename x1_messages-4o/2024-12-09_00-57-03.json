[
    {
        "role": "user",
        "content": "How can I create a chart with two different y-axis ranges in Bokeh? Specifically, I want a bar chart with quantity information on the left y-axis, and then overlay a scatter/line plot with yield % on the right. I can create each of these charts separately, but I am not sure how to combine them into a single plot. I am aware that in matplotlib, one would create a second figure using `twinx()`, and then use `yaxis.tick_left()` and `yaxis.tick_right()` on the respective figures. Is there a similar method I can use with Bokeh?"
    },
    {
        "role": "assistant",
        "content": "Creating a chart with two different y-axis ranges in Bokeh is definitely possible. You can achieve this by creating a figure with two y-axes and then adding your glyphs (bar, scatter, or line) to it. Here's a step-by-step guide on how to create a bar chart with a secondary y-axis for a scatter or line plot in Bokeh:\n\n1. **Import Required Libraries**:\n   Ensure you have Bokeh installed and import the necessary modules.\n\n   ```python\n   from bokeh.plotting import figure, show\n   from bokeh.models import Range1d, LinearAxis\n   from bokeh.io import output_notebook\n   from bokeh.layouts import layout\n   output_notebook()\n   ```\n\n2. **Create a New Figure**:\n   Initialize a new figure object where you will plot your data.\n\n   ```python\n   p = figure(width=800, height=400, title=\"Bar and Line Plot with Dual Y-Axis\")\n   ```\n\n3. **Add the First Y-Axis (Bar Chart)**:\n   Add the bar chart to the figure. This will use the default y-axis.\n\n   ```python\n   quantities = [10, 20, 30, 40, 50]\n   categories = ['A', 'B', 'C', 'D', 'E']\n   p.vbar(x=categories, top=quantities, width=0.4, color=\"blue\", legend_label=\"Quantity\")\n   ```\n\n4. **Add the Second Y-Axis (Scatter/Line Plot)**:\n   Define a new range for the second y-axis and add a line or scatter plot.\n\n   ```python\n   yield_percentages = [15, 25, 35, 45, 55]\n   p.extra_y_ranges = {\"yield\": Range1d(start=0, end=60)}\n   p.add_layout(LinearAxis(y_range_name=\"yield\", axis_label=\"Yield (%)\"), 'right')\n   p.line(categories, yield_percentages, color=\"red\", y_range_name=\"yield\", legend_label=\"Yield %\")\n   ```\n\n5. **Customize the Plot**:\n   Optionally, you can add titles, legends, and grid modifications.\n\n   ```python\n   p.yaxis[0].axis_label = \"Quantity\"\n   p.legend.location = \"top_left\"\n   ```\n\n6. **Display the Plot**:\n   Use `show()` to display the plot.\n\n   ```python\n   show(p)\n   ```\n\nHere's the complete code:\n\n```python\nfrom bokeh.plotting import figure, show\nfrom bokeh.models import Range1d, LinearAxis\nfrom bokeh.io import output_notebook\noutput_notebook()\n\n# Create figure\np = figure(width=800, height=400, title=\"Bar and Line Plot with Dual Y-Axis\")\n\n# Bar chart data\nquantities = [10, 20, 30, 40, 50]\ncategories = ['A', 'B', 'C', 'D', 'E']\np.vbar(x=categories, top=quantities, width=0.4, color=\"blue\", legend_label=\"Quantity\")\n\n# Line plot data\nyield_percentages = [15, 25, 35, 45, 55]\n\n# Add second y-axis\np.extra_y_ranges = {\"yield\": Range1d(start=0, end=60)}\np.add_layout(LinearAxis(y_range_name=\"yield\", axis_label=\"Yield (%)\"), 'right')\np.line(categories, yield_percentages, color=\"red\", y_range_name=\"yield\", legend_label=\"Yield %\")\n\n# Customize\np.yaxis[0].axis_label = \"Quantity\"\np.legend.location = \"top_left\"\n\n# Show plot\nshow(p)\n```\n\nThis will create a bar chart with quantities on the left y-axis and a line plot showing yields on the right y-axis. You can adjust the ranges and labels as needed based on your data."
    }
]