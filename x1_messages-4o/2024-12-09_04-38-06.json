[
    {
        "role": "user",
        "content": "In my Django application, I want to add custom help text to the admin change form for some of my models. This is not about the field-specific `help_text` attribute that I can set on individual fields. For instance, at the top of the change form for `My_Model` in `My_App`, I would like to add some HTML that says \"For additional information about My Model, see http://example.com\" to provide a link to an internal documentation wiki. Is there a simple way to accomplish this, or do I need to create a custom admin form for the model? If so, could you provide an example of how I could do this?"
    },
    {
        "role": "assistant",
        "content": "To add custom help text or additional information at the top of the change form in the Django admin for a specific model, you'll need to customize the admin form. You can achieve this by overriding the `change_form_template` and providing a custom template. Here's a step-by-step guide on how to do this:\n\n1. **Create a Custom Template:**\n\n   First, create a custom template for your change form. You can either start from scratch or extend the default change form template provided by Django. Assuming you want to add a simple message, you can extend the default template.\n\n   Create a new HTML template file, for example: `my_app/templates/admin/my_app/my_model/change_form.html`.\n\n   ```html\n   {% extends \"admin/change_form.html\" %}\n\n   {% block content %}\n   <div class=\"custom-help-text\">\n       <p>For additional information about My Model, see <a href=\"http://example.com\" target=\"_blank\">our documentation</a>.</p>\n   </div>\n   {{ block.super }}\n   {% endblock %}\n   ```\n\n   This template extends the default `change_form.html` and adds a custom block of HTML before the main form content.\n\n2. **Update the ModelAdmin:**\n\n   Next, tell Django to use this custom template for your model's admin form by overriding the `change_form_template` attribute in your `ModelAdmin` class.\n\n   ```python\n   from django.contrib import admin\n   from .models import MyModel\n\n   @admin.register(MyModel)\n   class MyModelAdmin(admin.ModelAdmin):\n       change_form_template = \"admin/my_app/my_model/change_form.html\"\n   ```\n\n3. **Ensure Template is Found:**\n\n   Make sure that Django can find your template. The path should be relative to one of the directories in your `TEMPLATES` setting's `DIRS` list or the `app_name/templates/` directory.\n\n4. **Collect Static Files (if needed):**\n\n   If you have any custom CSS or JavaScript, make sure it's included and collected using Django's static files framework.\n\nBy following these steps, you can add custom HTML or any other information to the top of the admin change form for a specific model. This approach allows you to provide links, instructions, or any other context-sensitive help that your users may need when editing models in the Django admin interface."
    }
]