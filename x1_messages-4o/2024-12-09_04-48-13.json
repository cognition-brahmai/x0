[
    {
        "role": "user",
        "content": "How can I copy code from an IPython session without including the terminal prompts? I frequently work with data cleaning/munging in an IPython shell, particularly since the upgrades to the terminal interface in IPython version 5.0. For instance, when I try to tidy up an unstructured data piece like this:\n\n```python\nIn [11]: for i, (num, header, txt) in enumerate(data):\n    ...:     header = [e.strip() for e in header.strip().split('\\n')]\n    ...:     header[4] = header[4].strip(',').split(',')\n    ...:     data[i] = (num, header, txt)\n    ...:\n```\n\nIt all works fine, but when I want to add this to a script in my editor, copying and pasting from my terminal also captures all the unnecessary information on the left. I'm looking for a way to copy the code directly from the terminal to my clipboard without using the mouse and without grabbing the extra stuff. Does IPython provide any functionality like this?"
    },
    {
        "role": "assistant",
        "content": "Yes, IPython provides a convenient way to copy code without including the terminal prompts using the `%save` magic command. This command allows you to save a segment of your interactive session to a file, which you can later open in an editor and copy the code without prompts. Here's how you can use it:\n\n1. **Identify the line numbers**: First, note the line numbers of the code you wish to copy. You can use the `%history` command to display your session history along with line numbers. For example:\n\n   ```python\n   %history -n\n   ```\n\n   This will show you a list of commands you've executed along with their line numbers.\n\n2. **Use the `%save` command**: Once you know the line numbers, use the `%save` magic command to save those specific lines to a file. For instance, if your code is on lines 11 to 15, you can do:\n\n   ```python\n   %save myscript.py 11-15\n   ```\n\n   This will save the specified lines to `myscript.py`.\n\n3. **Open and copy**: Now, you can open `myscript.py` in your text editor and copy the content without any IPython prompts.\n\nAlternatively, if you prefer to copy directly to your clipboard without creating a file, you can use a clipboard tool combined with `%history`. Here's a manual way:\n\n1. Run `%history -n 11-15` to display just the lines of code you're interested in.\n2. Copy this output manually or use command-line utilities to pipe it directly to your clipboard, depending on your operating system (e.g., `pbcopy` on macOS, `xclip` on Linux).\n\nThese methods allow you to efficiently extract your code from an IPython session without the clutter of prompts."
    }
]