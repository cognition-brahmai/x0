[
    {
        "role": "user",
        "content": "Is there a way or a function in Python that can list the attributes and methods of a specific object? I am looking for something similar to the following pseudocode:\n\n```python\nShowAttributes(myObject)\n# Output: \n# -> .count\n# -> .size\n\nShowMethods(myObject)\n# Output: \n# -> len\n# -> parse\n```"
    },
    {
        "role": "assistant",
        "content": "In Python, you can use the built-in `dir()` function to list the attributes and methods of an object. The `dir()` function returns a list of the names of the attributes and methods of any object. Here's how you can use it:\n\n```python\n# Example object\nclass MyClass:\n    def __init__(self):\n        self.count = 0\n        self.size = 10\n\n    def len(self):\n        pass\n\n    def parse(self):\n        pass\n\n# Create an instance of MyClass\nmyObject = MyClass()\n\n# List all attributes and methods\nall_attributes_methods = dir(myObject)\n\n# Separate attributes and methods\nattributes = [attr for attr in all_attributes_methods if not callable(getattr(myObject, attr))]\nmethods = [method for method in all_attributes_methods if callable(getattr(myObject, method))]\n\n# Print attributes\nprint(\"Attributes:\")\nfor attr in attributes:\n    print(f\"-> .{attr}\")\n\n# Print methods\nprint(\"Methods:\")\nfor method in methods:\n    print(f\"-> {method}\")\n```\n\nThis script will output the attributes and methods of `myObject`, distinguishing between the two. Note that `dir()` will also list special methods and attributes (those with double underscores, like `__init__`), so you may want to filter those out if you're only interested in user-defined attributes and methods."
    }
]