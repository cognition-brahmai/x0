[
    {
        "role": "user",
        "content": "I am attempting to create a simple program in Python that can determine whether a specific year is a leap year or not. According to the definition, a leap year is a year that is divisible by four, but not by one hundred, unless it is divisible by four hundred. My current implementation of the code is as follows:\n```python\ndef leapyr(n):\n    if n%4==0 and n%100!=0:\n        if n%400==0:\n            print(n, \"is a leap year.\")\n    elif n%4!=0:\n        print(n, \"is not a leap year.\")\nprint(leapyr(1900))\n```\nHowever, when I run this in Python IDLE, the module returns `None`. But I am expecting the output to be `1900 is a leap year`. Can someone tell me what's going wrong?"
    },
    {
        "role": "assistant",
        "content": "Your current implementation has a small logic error in the way the conditions are structured, and it also lacks a return or print statement outside the conditional blocks for some cases. Let's correct the logic and ensure it covers all cases:\n\n1. A year is a leap year if it is divisible by 400.\n2. If it is not divisible by 400, then it is a leap year if it is divisible by 4 but not by 100.\n3. If it is not divisible by 4, it is not a leap year.\n\nHere's the corrected version of the function:\n\n```python\ndef leapyr(n):\n    if n % 400 == 0:\n        print(n, \"is a leap year.\")\n    elif n % 100 == 0:\n        print(n, \"is not a leap year.\")\n    elif n % 4 == 0:\n        print(n, \"is a leap year.\")\n    else:\n        print(n, \"is not a leap year.\")\n\nleapyr(1900)\n```\n\nWith this code, when you run `leapyr(1900)`, it will correctly print `1900 is not a leap year.` because 1900 is divisible by 100 and not by 400."
    }
]