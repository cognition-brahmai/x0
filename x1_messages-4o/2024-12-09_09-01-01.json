[
    {
        "role": "user",
        "content": "How can I use Swift to extract text from a web page?"
    },
    {
        "role": "assistant",
        "content": "To extract text from a web page using Swift, you'll typically use the `URLSession` to fetch the HTML content and then parse the HTML to extract the desired text. Here's a step-by-step guide:\n\n1. **Fetch the HTML Content:**\n\n   You'll use `URLSession` to make an HTTP request to the web page and retrieve the HTML content.\n\n   ```swift\n   import Foundation\n\n   func fetchHTML(from urlString: String, completion: @escaping (String?) -> Void) {\n       guard let url = URL(string: urlString) else {\n           completion(nil)\n           return\n       }\n\n       let task = URLSession.shared.dataTask(with: url) { data, _, error in\n           guard let data = data, error == nil else {\n               completion(nil)\n               return\n           }\n\n           if let htmlContent = String(data: data, encoding: .utf8) {\n               completion(htmlContent)\n           } else {\n               completion(nil)\n           }\n       }\n       task.resume()\n   }\n   ```\n\n2. **Parse the HTML Content:**\n\n   To parse the HTML and extract text, you can use a library like SwiftSoup, which is similar to JSoup for Java. First, you'll need to add SwiftSoup to your project. You can do this using CocoaPods, Carthage, or Swift Package Manager.\n\n   Here\u2019s an example using Swift Package Manager:\n\n   - Add SwiftSoup to your `Package.swift` file:\n\n     ```swift\n     dependencies: [\n         .package(url: \"https://github.com/scinfu/SwiftSoup.git\", from: \"2.3.2\")\n     ],\n     targets: [\n         .target(\n             name: \"YourTargetName\",\n             dependencies: [\"SwiftSoup\"]),\n     ]\n     ```\n\n   - Use SwiftSoup to parse the HTML:\n\n     ```swift\n     import SwiftSoup\n\n     func extractText(from html: String) {\n         do {\n             let document = try SwiftSoup.parse(html)\n             let bodyText = try document.body()?.text() ?? \"\"\n             print(bodyText)\n         } catch {\n             print(\"Error parsing HTML: \\(error)\")\n         }\n     }\n     ```\n\n3. **Combine Fetching and Parsing:**\n\n   Finally, you'll combine these functions to fetch and parse the HTML content:\n\n   ```swift\n   let urlString = \"https://example.com\"\n\n   fetchHTML(from: urlString) { htmlContent in\n       if let html = htmlContent {\n           extractText(from: html)\n       } else {\n           print(\"Failed to fetch HTML content.\")\n       }\n   }\n   ```\n\nThis code will fetch the HTML content from the specified URL and then parse it to extract and print the text from the body of the HTML document. Adjust the `extractText` function to suit your specific text extraction needs, such as targeting specific HTML elements."
    }
]