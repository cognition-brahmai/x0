[
    {
        "role": "user",
        "content": "As a marketing executive, I want to analyze customer feedback to determine their emotions towards our brand using natural language processing. Can you help me write a Python program that uses sentiment analysis to categorize comments into anger, joy, sadness, fear, and disgust? For instance, if a customer says \"Your product is terrible and a waste of money\", the program should output \"Anger\" and if they say \"I love your customer service, you are the best!\", the program should output \"Joy\". Please provide the Python code to accomplish this task."
    },
    {
        "role": "assistant",
        "content": "Certainly! To perform sentiment analysis and categorize customer feedback into specific emotions like anger, joy, sadness, fear, and disgust, you can use a pre-trained natural language processing model. One popular option is to use the `transformers` library by Hugging Face, which provides access to a variety of pre-trained models for sentiment analysis and emotion detection.\n\nBelow is an example of a Python program that uses the DistilBERT model fine-tuned for emotion detection. This example uses the `transformers` library along with `torch` for handling the model's computations:\n\n```python\nfrom transformers import pipeline\n\n# Load a pre-trained emotion detection model\nemotion_classifier = pipeline(\"text-classification\", model=\"bhadresh-savani/distilbert-base-uncased-emotion\", return_all_scores=True)\n\n# Function to classify emotions\ndef classify_emotion(text):\n    # Get the emotion scores\n    scores = emotion_classifier(text)[0]\n    # Find the emotion with the highest score\n    emotion = max(scores, key=lambda x: x['score'])['label']\n    return emotion\n\n# Example comments\ncomments = [\n    \"Your product is terrible and a waste of money\",\n    \"I love your customer service, you are the best!\",\n    \"I feel anxious about the recent changes in your policies\",\n    \"The new update is quite disappointing\",\n    \"Your team was very helpful and made my day!\"\n]\n\n# Analyze emotions for each comment\nfor comment in comments:\n    emotion = classify_emotion(comment)\n    print(f\"Comment: {comment}\\nEmotion: {emotion}\\n\")\n```\n\n### Explanation:\n- **Transformers Library**: This code uses the `transformers` library to load a DistilBERT model fine-tuned for emotion detection.\n- **Emotion Detection**: The `pipeline` is set up to perform text classification, specifically for emotion detection.\n- **Emotion Classification Function**: The `classify_emotion` function processes a given text and returns the emotion with the highest score.\n\n### Setup:\n- Ensure you have Python installed on your machine.\n- Install the necessary libraries by running:\n  ```sh\n  pip install transformers torch\n  ```\n- Run the provided Python script to see how the program categorizes emotions based on customer feedback.\n\nThis setup should help you analyze customer feedback effectively by categorizing comments into different emotions. You can customize and extend this code as needed to further suit your requirements."
    }
]