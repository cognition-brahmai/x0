[
    {
        "role": "user",
        "content": "How can I write three sentences in passive voice using Swift? Can you provide a sample code for this?"
    },
    {
        "role": "assistant",
        "content": "Certainly! In Swift, if you want to represent sentences in the passive voice programmatically, you can simply create strings that reflect passive constructions. Here's a sample Swift code that demonstrates this:\n\n```swift\nimport Foundation\n\n// Function to create a passive voice sentence\nfunc passiveVoice(subject: String, action: String, object: String) -> String {\n    return \"\\(object) was \\(action) by \\(subject).\"\n}\n\n// Example sentences\nlet sentence1 = passiveVoice(subject: \"the developer\", action: \"coded\", object: \"the app\")\nlet sentence2 = passiveVoice(subject: \"the chef\", action: \"cooked\", object: \"the meal\")\nlet sentence3 = passiveVoice(subject: \"the artist\", action: \"painted\", object: \"the portrait\")\n\n// Printing the sentences\nprint(sentence1)  // Output: The app was coded by the developer.\nprint(sentence2)  // Output: The meal was cooked by the chef.\nprint(sentence3)  // Output: The portrait was painted by the artist.\n```\n\nIn this code, the `passiveVoice` function constructs a sentence in passive voice using the provided `subject`, `action`, and `object`. You can change the inputs to create different passive voice sentences."
    }
]