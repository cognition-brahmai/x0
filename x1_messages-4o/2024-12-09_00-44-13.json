[
    {
        "role": "user",
        "content": "I am using Plotly to create graphs from data in multiple Pandas DataFrames. I want each DataFrame to be plotted as a separate subplot on the same graph. I have resources showing how to plot different columns from a single DataFrame as subplots, but I'm not sure how to do this with separate DataFrames. Here's how I'm currently creating each figure from a DataFrame:\n\n```python\nimport pandas as pd\nimport cufflinks as cf\nfrom plotly.offline import download_plotlyjs, plot, iplot\ncf.go_offline()\n\nfig1 = df.iplot(kind='bar',barmode='stack',x='Type',\n                       y=mylist,asFigure=True)\n```\n\nI also tried an approach based on feedback I received. I created two DataFrames and attempted to plot information for 'dogs', 'cats', and 'birds' from each DataFrame. However, my plot is only showing information for 'dogs'. Here's the code I used:\n\n```python\na={'catagory':['loc1','loc2','loc3'],'dogs':[1,5,6],'cats':[3,1,4],'birds':[4,12,2]}\ndf1 = pd.DataFrame(a)\nb={'catagory':['loc1','loc2','loc3'],'dogs':[12,3,5],'cats':[4,6,1],'birds':[7,0,8]}\ndf2 = pd.DataFrame(b)\n\nfig = tls.make_subplots(rows=2, cols=1)\n\nfig1 = df1.iplot(kind='bar',barmode='stack',x='catagory',\n                       y=['dogs','cats','birds'],asFigure=True)\n\nfig.append_trace(fig1['data'][0], 1, 1)\n\nfig2 = df2.iplot(kind='bar',barmode='stack',x='catagory',\n                       y=['dogs','cats','birds'],asFigure=True)\n\nfig.append_trace(fig2['data'][0], 2, 1)\n\niplot(fig)\n```\n\nCan anyone help me plot figures from separate DataFrames as subplots on the same graph using Plotly?"
    },
    {
        "role": "assistant",
        "content": "Certainly! The issue you are encountering is that you are appending only the first trace (`fig1['data'][0]`) from each figure to the subplot. Since each figure created by `iplot` can contain multiple traces (one for each category like 'dogs', 'cats', 'birds'), you should ensure that all traces are added to your subplot.\n\nHere's how you can modify your code to correctly append all traces from each figure:\n\n```python\nimport pandas as pd\nimport cufflinks as cf\nfrom plotly.subplots import make_subplots\nfrom plotly.offline import iplot\n\ncf.go_offline()\n\n# Define your DataFrames\na = {'catagory': ['loc1', 'loc2', 'loc3'], 'dogs': [1, 5, 6], 'cats': [3, 1, 4], 'birds': [4, 12, 2]}\ndf1 = pd.DataFrame(a)\nb = {'catagory': ['loc1', 'loc2', 'loc3'], 'dogs': [12, 3, 5], 'cats': [4, 6, 1], 'birds': [7, 0, 8]}\ndf2 = pd.DataFrame(b)\n\n# Create subplots\nfig = make_subplots(rows=2, cols=1)\n\n# Create figure for the first DataFrame\nfig1 = df1.iplot(kind='bar', barmode='stack', x='catagory',\n                 y=['dogs', 'cats', 'birds'], asFigure=True)\n\n# Append all traces from fig1 to the first subplot\nfor trace in fig1['data']:\n    fig.append_trace(trace, 1, 1)\n\n# Create figure for the second DataFrame\nfig2 = df2.iplot(kind='bar', barmode='stack', x='catagory',\n                 y=['dogs', 'cats', 'birds'], asFigure=True)\n\n# Append all traces from fig2 to the second subplot\nfor trace in fig2['data']:\n    fig.append_trace(trace, 2, 1)\n\n# Plot the combined figure\niplot(fig)\n```\n\nThis code will create a stacked bar plot for each DataFrame and position them in separate subplots. It ensures that all relevant traces are appended to the subplots, hence correctly displaying data for 'dogs', 'cats', and 'birds' from each DataFrame."
    }
]