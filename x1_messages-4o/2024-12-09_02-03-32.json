[
    {
        "role": "user",
        "content": "How can I correctly pass the Authorization header with a single token when using the Python requests library? I have a request URI and a token. When I use the following command:\n\n```curl\ncurl -s \"<MY_URI>\" -H \"Authorization: TOK:<MY_TOKEN>\"\n```\n\nI receive a 200 status code and can view the corresponding JSON data. But when I attempt to access the same resource using the requests library, I get a 403 error. This is probably because I don't know the correct syntax to pass the token. I have tried the following methods, but none of them work:\n\n```python\nimport sys, socket\nimport requests\n\nr = requests.get('<MY_URI>','<MY_TOKEN>')\nr.status_code\n```\n\n```python\nr = requests.get('<MY_URI>', auth=('<MY_TOKEN>'))\nr = requests.get('<MY_URI>', auth=('TOK', '<MY_TOKEN>'))\nr = requests.get('<MY_URI>', headers=('Authorization: TOK:<MY_TOKEN>'))\n```"
    },
    {
        "role": "assistant",
        "content": "To correctly pass the Authorization header with a single token using the Python `requests` library, you should utilize the `headers` parameter. In your case, the `Authorization` header should be set appropriately with the token. Here's how you can do it:\n\n```python\nimport requests\n\n# Define your URI and token\nuri = '<MY_URI>'\ntoken = '<MY_TOKEN>'\n\n# Set up the headers with the Authorization token\nheaders = {\n    'Authorization': f'TOK:{token}'\n}\n\n# Make the GET request with the headers\nresponse = requests.get(uri, headers=headers)\n\n# Check the status code\nprint(response.status_code)\n\n# If needed, check the response content\nif response.status_code == 200:\n    print(response.json())\nelse:\n    print(f\"Error: {response.status_code}, {response.text}\")\n```\n\n### Key Points:\n- Ensure that the token is correctly formatted and matches the expected pattern by the server.\n- Make sure that `<MY_URI>` and `<MY_TOKEN>` are replaced with the actual URI and token you're using.\n- If possible, verify that there are no network issues or additional requirements like whitelisted IPs or specific headers that might be needed for access.\n\nIf you still encounter a 403 error, double-check the token's validity and any additional requirements for the endpoint you are accessing."
    }
]