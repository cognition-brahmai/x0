[
    {
        "role": "user",
        "content": "I am having trouble converting an ISO formatted string into a datetime object using Python 2.7.6. When I try to execute the following code: \n\n```python\ndt = datetime.datetime.strptime(\"2013-07-23T15:10:59.342107+01:00\", \"%Y-%m-%dT%H:%M:%S.%f%z\")\n```\nI receive an error message that says \"'z' is a bad directive in format '%Y-%m-%dT%H:%M:%S.%f%z'\". What is the correct way to convert an ISO string of this format to a datetime object in Python 2.7.6?"
    },
    {
        "role": "assistant",
        "content": "In Python 2.7, the `strptime` method does not support the `%z` directive, which is used to parse timezone information in the format `+HH:MM`. To parse an ISO formatted string with timezone information, you can manually extract and handle the timezone offset. Here is a way to do it:\n\n```python\nimport datetime\n\ndef parse_iso_format(date_string):\n    # Split the date string into the main part and the timezone part\n    if '+' in date_string:\n        date_part, timezone_part = date_string.split('+')\n        timezone_sign = '+'\n    elif '-' in date_string:\n        date_part, timezone_part = date_string.split('-')\n        timezone_sign = '-'\n    else:\n        date_part, timezone_part = date_string, None\n\n    # Parse the main part of the date\n    dt = datetime.datetime.strptime(date_part, \"%Y-%m-%dT%H:%M:%S.%f\")\n\n    # If there is a timezone part, adjust the datetime object\n    if timezone_part:\n        # Extract hours and minutes from the timezone part\n        timezone_hours, timezone_minutes = map(int, timezone_part.split(':'))\n        # Create a timedelta object for the timezone\n        timezone_offset = datetime.timedelta(hours=timezone_hours, minutes=timezone_minutes)\n        # Adjust the datetime object based on the sign of the timezone\n        if timezone_sign == '+':\n            dt -= timezone_offset\n        else:\n            dt += timezone_offset\n\n    return dt\n\n# Example usage\ndt = parse_iso_format(\"2013-07-23T15:10:59.342107+01:00\")\nprint(dt)\n```\n\nThis function handles the parsing of the ISO formatted string, including the extraction and application of the timezone offset. It adjusts the resulting `datetime` object to UTC by subtracting or adding the timezone offset as appropriate."
    }
]