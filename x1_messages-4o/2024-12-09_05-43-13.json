[
    {
        "role": "user",
        "content": "How can I configure Homebrew's python and pyenv to work together on my OSX Yosemite platform? I have switched to python 3.4.3 from 2.7.9 and I often need to test my scripts with python 2.7.9 before sharing them with colleagues. After installing pyenv through Homebrew, I was able to switch back to the system's python, but how can I add entries for the python versions compiled by Homebrew?"
    },
    {
        "role": "assistant",
        "content": "To configure Homebrew's Python and `pyenv` to work together on your OSX Yosemite platform, follow these steps:\n\n1. **Install Homebrew's Python Versions:**\n   First, make sure you have the desired Python versions installed via Homebrew. You can do this with the following commands:\n\n   ```bash\n   brew install python@3.4\n   brew install python@2.7\n   ```\n\n   These commands will install Python 3.4 and 2.7 using Homebrew. Homebrew typically installs these versions under `/usr/local/Cellar`.\n\n2. **Install `pyenv`:**\n   If you haven't already installed `pyenv`, you can do so with Homebrew:\n\n   ```bash\n   brew install pyenv\n   ```\n\n3. **Configure Your Shell:**\n   Add `pyenv` initialization to your shell\u2019s startup script. For example, if you're using `bash`, you would add the following to your `~/.bash_profile` or `~/.bashrc`:\n\n   ```bash\n   export PATH=\"$HOME/.pyenv/bin:$PATH\"\n   eval \"$(pyenv init --path)\"\n   eval \"$(pyenv init -)\"\n   ```\n\n   For `zsh`, add it to your `~/.zshrc`.\n\n4. **Add Homebrew-installed Pythons to `pyenv`:**\n   You need to make `pyenv` aware of the Python versions installed by Homebrew. Use the `pyenv` command to do this:\n\n   ```bash\n   pyenv install --list\n   ```\n\n   If the specific Homebrew-installed versions are not listed, you can add them manually. Use the following command to add a specific version:\n\n   ```bash\n   pyenv install 3.4.3\n   pyenv install 2.7.9\n   ```\n\n   If they are already installed by Homebrew, `pyenv` will recognize them. If not, `pyenv` will download and install them.\n\n5. **Set Global and Local Python Versions:**\n   Use `pyenv` to set the global or local Python version. For global, use:\n\n   ```bash\n   pyenv global 3.4.3\n   ```\n\n   For project-specific (local) settings, navigate to your project directory and run:\n\n   ```bash\n   pyenv local 2.7.9\n   ```\n\n   This command will create a `.python-version` file in your project directory specifying the Python version.\n\n6. **Verify Configuration:**\n   Ensure that the configuration is correct by checking the Python version:\n\n   ```bash\n   python --version\n   pyenv versions\n   ```\n\n   This should show you the currently active Python version and the list of versions available through `pyenv`.\n\nBy following these steps, you should be able to seamlessly switch between Python versions using `pyenv` on your OSX Yosemite platform, while also utilizing the versions installed by Homebrew."
    }
]