[
    {
        "role": "user",
        "content": "How can I convert a nested list of lists into a list of tuples in Python 3.3? I have a nested list defined as `nested_lst = [['tom', 'cat'], ['jerry', 'mouse'], ['spark', 'dog']]`, and I would like to convert this into a list of tuples that looks like this: `nested_lst_of_tuples = [('tom', 'cat'), ('jerry', 'mouse'), ('spark', 'dog')]`. However, I am having trouble figuring out the logic needed to achieve this."
    },
    {
        "role": "assistant",
        "content": "To convert a nested list of lists into a list of tuples in Python, you can use a simple list comprehension. This approach iterates over each sublist in your nested list and converts it to a tuple. Here's how you can do it:\n\n```python\nnested_lst = [['tom', 'cat'], ['jerry', 'mouse'], ['spark', 'dog']]\n\n# Using list comprehension to convert each sublist into a tuple\nnested_lst_of_tuples = [tuple(sublist) for sublist in nested_lst]\n\nprint(nested_lst_of_tuples)\n```\n\nThis code will output:\n\n```\n[('tom', 'cat'), ('jerry', 'mouse'), ('spark', 'dog')]\n```\n\nExplanation:\n- The list comprehension `[tuple(sublist) for sublist in nested_lst]` iterates over each `sublist` in `nested_lst`.\n- `tuple(sublist)` converts each `sublist` into a tuple.\n- The result is a new list where each element is a tuple instead of a list."
    }
]