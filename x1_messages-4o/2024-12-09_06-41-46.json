[
    {
        "role": "user",
        "content": "I am working on data visualization using matplotlib and numpy for creating a polar plot. My current code is as follows:\n\n```python\nimport numpy as N\nimport matplotlib.pyplot as P\n\nangle = N.arange(0, 360, 10, dtype=float) * N.pi / 180.0\narbitrary_data = N.abs(N.sin(angle)) + 0.1 * (N.random.random_sample(size=angle.shape) - 0.5)\n\nP.clf()\nP.polar(angle, arbitrary_data)\nP.show()\n```\n\nThe issue with this plot is that 0\u00b0 is at 3 o'clock on the plot, and the angles go counterclockwise. For my data visualization purposes, I would rather have 0\u00b0 at 12 o'clock and the angles going clockwise. Can this be achieved without rotating the data and manually changing the axis labels?"
    },
    {
        "role": "assistant",
        "content": "Yes, you can achieve this by adjusting the direction of the theta values and setting the location of the 0\u00b0 angle. The `matplotlib` library provides options to customize the direction of angles and the location of the 0\u00b0 starting point in polar plots. You can use `set_theta_zero_location` to set 0\u00b0 at the top (12 o'clock) and `set_theta_direction` to make the angles increase clockwise.\n\nHere's how you can modify your code to achieve this:\n\n```python\nimport numpy as N\nimport matplotlib.pyplot as P\n\nangle = N.arange(0, 360, 10, dtype=float) * N.pi / 180.0\narbitrary_data = N.abs(N.sin(angle)) + 0.1 * (N.random.random_sample(size=angle.shape) - 0.5)\n\nP.clf()\nax = P.subplot(111, polar=True)\nax.set_theta_zero_location(\"N\")  # Set 0 degrees to the top (North)\nax.set_theta_direction(-1)  # Set the direction of the angles to clockwise\n\nax.plot(angle, arbitrary_data)\nP.show()\n```\n\nIn this code:\n\n- `set_theta_zero_location(\"N\")` places the 0\u00b0 angle at the top of the plot, which is the 12 o'clock position.\n- `set_theta_direction(-1)` reverses the direction of the angle, making them increase in a clockwise direction."
    }
]