[
    {
        "role": "user",
        "content": "I need to convert a binary input into a decimal integer in Python. I know how to convert a decimal to binary using the code:\n\n```python\nn = int(raw_input('enter a number: '))\nprint '{0:b}'.format(n)\n```\nBut I need to do the reverse, i.e., convert binary to decimal. For instance, if the input is `11001`, the output should be `25`. The problem is, I am not allowed to use built-in functions for this task. How can I achieve this?"
    },
    {
        "role": "assistant",
        "content": "To convert a binary number to a decimal integer without using built-in functions, you can manually process the binary string by iterating over its digits. Here's how you can achieve this:\n\n```python\ndef binary_to_decimal(binary_input):\n    decimal_number = 0\n    power = 0\n    \n    # Iterate over the binary string from right to left\n    for digit in reversed(binary_input):\n        # Convert the current digit to an integer and multiply by 2 raised to the current power\n        decimal_number += int(digit) * (2 ** power)\n        power += 1\n    \n    return decimal_number\n\n# Example usage\nbinary_input = raw_input('Enter a binary number: ')\ndecimal_output = binary_to_decimal(binary_input)\nprint('The decimal representation is:', decimal_output)\n```\n\n### Explanation:\n\n1. **Initialize Variables:**\n   - `decimal_number` is set to `0` to store the result.\n   - `power` is set to `0` to track the power of 2 for each binary digit.\n\n2. **Loop Through Binary String:**\n   - The loop iterates over the binary string in reverse order (from least significant bit to most significant bit).\n\n3. **Convert and Accumulate:**\n   - For each binary digit, convert it to an integer, multiply it by `2` raised to the current `power`, and add the result to `decimal_number`.\n\n4. **Increment Power:**\n   - Increment the `power` variable after processing each digit.\n\nThis code will correctly convert a binary string, such as `11001`, into its decimal equivalent, `25`, without using any built-in conversion functions."
    }
]