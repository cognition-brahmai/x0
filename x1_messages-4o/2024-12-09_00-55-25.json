[
    {
        "role": "user",
        "content": "How can I check a string in my program to ensure it contains no special characters except for the underscore `_`? I have tried using the unicodedata library but the special characters are simply replaced by standard characters."
    },
    {
        "role": "assistant",
        "content": "To check if a string contains no special characters except for the underscore `_`, you can use regular expressions in Python. The `re` module provides a powerful way to match patterns in strings. Here's a simple approach to achieve this:\n\n```python\nimport re\n\ndef contains_only_allowed_characters(input_string):\n    # Define the regex pattern to allow only alphanumeric characters and underscores\n    pattern = r'^[\\w]+$'\n    \n    # Use re.match to check if the entire string matches the pattern\n    if re.match(pattern, input_string):\n        return True\n    else:\n        return False\n\n# Example usage\ntest_string = \"example_string_123\"\nif contains_only_allowed_characters(test_string):\n    print(\"The string contains only allowed characters.\")\nelse:\n    print(\"The string contains special characters.\")\n```\n\nIn this code:\n- The pattern `r'^[\\w]+$'` is used, where `\\w` matches any alphanumeric character or an underscore, and `^` and `$` ensure that the match spans the entire string.\n- `re.match` checks if the input string matches the pattern from the beginning to the end.\n- This function will return `True` if the string only contains alphanumeric characters and underscores, and `False` otherwise.\n\nThis approach should work effectively to ensure your string only contains the desired characters."
    }
]