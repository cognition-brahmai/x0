[
    {
        "role": "user",
        "content": "Is there a cross-platform method in Python to check if my script is being executed with administrative rights? The function `os.getuid()` is UNIX-specific and does not work in Windows."
    },
    {
        "role": "assistant",
        "content": "Yes, there is a cross-platform way in Python to check if your script is being executed with administrative or elevated privileges. You can use the built-in libraries available in Python to achieve this.\n\nHere is a function that works on both UNIX-like systems and Windows:\n\n```python\nimport os\nimport sys\n\ndef is_admin():\n    try:\n        # Windows check\n        if os.name == 'nt':\n            import ctypes\n            return ctypes.windll.shell32.IsUserAnAdmin() != 0\n        # UNIX-like check\n        else:\n            return os.geteuid() == 0\n    except AttributeError:\n        # os.geteuid() is not available on Windows\n        return False\n\nif __name__ == \"__main__\":\n    if is_admin():\n        print(\"The script is running with administrative rights.\")\n    else:\n        print(\"The script is NOT running with administrative rights.\")\n```\n\n### Explanation:\n- **Windows**: The script uses the `ctypes` library to call `IsUserAnAdmin()` from the Windows `shell32` library. If the return value is not zero, the script is running with administrative rights.\n  \n- **UNIX-like systems**: The script uses `os.geteuid()` to check if the effective user ID is 0, which indicates root privileges.\n\nThis function will help you determine if your script is running with the necessary administrative privileges across different operating systems."
    }
]