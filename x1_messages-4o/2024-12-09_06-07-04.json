[
    {
        "role": "user",
        "content": "How can I specifically handle a \"FileExistsError\" in Python? I'm trying to create a directory and want to handle this exception if the directory already exists. However, when I attempt to catch the \"FileExistsError\" with the following code, I'm receiving an error for the token \"FileExistsError\". How can I correctly check for this and other similar errors?\n\n```python\ntry:\n    os.mkdir(folderPath)\nexcept FileExistsError:\n    print 'Directory not created.'\n```"
    },
    {
        "role": "assistant",
        "content": "The issue you're encountering is likely due to the syntax of the `print` statement. In Python 3, `print` is a function and requires parentheses. Additionally, make sure you've imported the `os` module at the beginning of your script. Here's the corrected version of your code:\n\n```python\nimport os\n\nfolderPath = 'your/directory/path'  # Replace with the path you want to create\n\ntry:\n    os.mkdir(folderPath)\nexcept FileExistsError:\n    print('Directory not created.')\n```\n\nThis code will attempt to create a directory at the specified `folderPath`. If the directory already exists, it will catch the `FileExistsError` and print \"Directory not created.\"\n\nIf you're using Python 2, `FileExistsError` doesn't exist, so you'd need to handle the `OSError` and check for the specific error code. However, since `FileExistsError` is specific to Python 3, ensure you're using Python 3 to avoid this issue altogether."
    }
]