[
    {
        "role": "user",
        "content": "How can I write a Rust program to determine whether a given year is a leap year or not?"
    },
    {
        "role": "assistant",
        "content": "To determine whether a given year is a leap year in Rust, you can use the following logic: \n\n1. A year is a leap year if it is divisible by 4.\n2. However, if the year is divisible by 100, it is not a leap year, unless:\n3. The year is also divisible by 400, in which case it is a leap year.\n\nHere's a simple Rust program that implements this logic:\n\n```rust\nfn is_leap_year(year: i32) -> bool {\n    if year % 4 == 0 {\n        if year % 100 == 0 {\n            if year % 400 == 0 {\n                true\n            } else {\n                false\n            }\n        } else {\n            true\n        }\n    } else {\n        false\n    }\n}\n\nfn main() {\n    let year = 2024;\n    if is_leap_year(year) {\n        println!(\"{} is a leap year.\", year);\n    } else {\n        println!(\"{} is not a leap year.\", year);\n    }\n}\n```\n\n### Explanation:\n\n- The `is_leap_year` function takes an integer `year` as input and returns a boolean value.\n- It first checks if the year is divisible by 4.\n- If divisible by 4, it then checks if it's divisible by 100.\n- If the year is divisible by 100, it further checks if it's divisible by 400.\n- The function returns `true` if the year satisfies the conditions for a leap year, otherwise `false`.\n- In the `main` function, you can test this logic by changing the value of `year` and observing the output."
    }
]