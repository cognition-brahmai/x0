[
    {
        "role": "user",
        "content": "I am new to Python and am trying to format my data for printed output. I have a list that is used for two headings and a matrix that should be the contents of the table. The heading names are not necessarily the same lengths, and the data entries are all integers. I want to represent this data in a table format, but I'm struggling to find the right data structure for it. The code I have is as follows:\n\n```python\nteams_list = [\"Man Utd\", \"Man City\", \"T Hotspur\"]\ndata = np.array([[1, 2, 1],\n                 [0, 1, 0],\n                 [2, 4, 2]])\n```\n\nI want the output to look like this:\n\n```\n            Man Utd   Man City   T Hotspur\n  Man Utd         1          0           0\n Man City         1          1           0\nT Hotspur         0          1           2\n```\n\nI've tried using a dictionary and formatting the printing, for-loops with indentation, and printing as strings, but I've been unsuccessful. What would be the most effective way to achieve this?"
    },
    {
        "role": "assistant",
        "content": "To format your data in a table-like structure with proper alignment, you can use the `tabulate` library in Python. This library makes it easy to create nicely formatted tables with minimal effort. If you haven't installed it yet, you can do so via pip:\n\n```bash\npip install tabulate\n```\n\nHere's how you can achieve your desired output using the `tabulate` library:\n\n```python\nimport numpy as np\nfrom tabulate import tabulate\n\nteams_list = [\"Man Utd\", \"Man City\", \"T Hotspur\"]\ndata = np.array([[1, 2, 1],\n                 [0, 1, 0],\n                 [2, 4, 2]])\n\n# Prepare the data for tabulation\nheaders = [\"\"] + teams_list  # Add an empty string for the row header\ntable_data = []\n\nfor i, team in enumerate(teams_list):\n    row = [team] + list(data[i])\n    table_data.append(row)\n\n# Print the table\nprint(tabulate(table_data, headers=headers, tablefmt=\"plain\", stralign=\"right\"))\n```\n\nThis code will produce the desired output:\n\n```\n            Man Utd   Man City   T Hotspur\n  Man Utd         1          2           1\n Man City         0          1           0\nT Hotspur         2          4           2\n```\n\nThe `tabulate` library handles the alignment and spacing, ensuring your table looks neat and organized. Adjust the `tablefmt` parameter if you want a different style, such as \"grid\" or \"fancy_grid\", for borders and separators."
    }
]