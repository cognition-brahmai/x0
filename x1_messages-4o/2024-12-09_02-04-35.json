[
    {
        "role": "user",
        "content": "How can I add new keys to an existing dictionary in Python? I've noticed that it doesn't have an `.add()` method, which is what I'm familiar with."
    },
    {
        "role": "assistant",
        "content": "In Python, dictionaries don't have an `.add()` method because they are designed to map keys to values, and adding a new key-value pair is simply done by assignment. To add a new key to an existing dictionary, you can use the assignment operator `=` with the new key and value. Here's how you can do it:\n\n```python\n# Existing dictionary\nmy_dict = {'a': 1, 'b': 2}\n\n# Adding a new key-value pair\nmy_dict['c'] = 3\n\nprint(my_dict)  # Output: {'a': 1, 'b': 2, 'c': 3}\n```\n\nIf you want to add multiple new key-value pairs at once, you can use the `update()` method. This method can take another dictionary or an iterable of key-value pairs:\n\n```python\n# Using the `update()` method with another dictionary\nadditional_dict = {'d': 4, 'e': 5}\nmy_dict.update(additional_dict)\n\nprint(my_dict)  # Output: {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5}\n\n# Using the `update()` method with an iterable of key-value pairs\nmy_dict.update([('f', 6), ('g', 7)])\n\nprint(my_dict)  # Output: {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5, 'f': 6, 'g': 7}\n```\n\nThese methods allow you to add new keys and values to a dictionary efficiently."
    }
]