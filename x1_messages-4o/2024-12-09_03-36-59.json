[
    {
        "role": "user",
        "content": "How can I obtain the version of the browser being used with Selenium WebDriver in Python? For example, I have the following code:\n\n```python\nfrom selenium import webdriver\ndriver = webdriver.Firefox()\nprint version  # how to do this?\n```\n\nI am unsure of what command to use in order to print the browser version, which in this case is Firefox 12.0."
    },
    {
        "role": "assistant",
        "content": "To obtain the version of the browser being used with Selenium WebDriver in Python, you can use the `capabilities` attribute of the driver object. This attribute provides various details about the browser session, including the browser version. Here's how you can do it for Firefox:\n\n```python\nfrom selenium import webdriver\n\n# Initialize the Firefox WebDriver\ndriver = webdriver.Firefox()\n\n# Get the browser capabilities\ncapabilities = driver.capabilities\n\n# Print the browser version\nprint(\"Browser Name: \", capabilities['browserName'])\nprint(\"Browser Version: \", capabilities['browserVersion'])\n\n# Clean up and close the browser\ndriver.quit()\n```\n\nIn this code, `capabilities` is a dictionary containing information about the browser session. The `browserName` key gives you the name of the browser, and `browserVersion` gives you the version number. Note that the keys might differ slightly based on the WebDriver version, so it's always good to inspect the `capabilities` dictionary if you are unsure."
    }
]