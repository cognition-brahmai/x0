[
    {
        "role": "user",
        "content": "How can I customize an Admin form in Django while using autodiscover? I want to modify a few details of Django's built-in `django.contrib.auth` module, specifically, I want a different form that changes the username to an email field, and the email to an alternate email address field. I'd rather not modify `auth` more than necessary and just changing the form seems to be enough. However, when I use `autodiscover` with a custom `ModelAdmin` for `auth`, I run into a conflict with `auth`'s own admin interface and get an \"already registered\" error. Should I create my own admin site and list all of my Models (18 classes in total), or should I write my own version of \"autodiscover with exclusions\" to import all the admin modules except `auth`?"
    },
    {
        "role": "assistant",
        "content": "To customize the admin form for Django's built-in `django.contrib.auth` module, specifically for changing the username to an email field and adding an alternate email address field, you'll need to create a custom form and a custom `ModelAdmin` class. Here's how you can achieve this without running into the \"already registered\" error:\n\n1. **Unregister the Default User Admin**: First, you need to unregister the default User admin that comes with `django.contrib.auth`.\n\n2. **Create a Custom User Admin Form**: Create a custom form for the User model where you can customize the fields as needed.\n\n3. **Register Your Custom User Admin**: Register your custom `UserAdmin` with the customized form.\n\nHere's a step-by-step guide:\n\n1. **Unregister the Default User Admin**:\n\n   You need to unregister the default admin for the User model to avoid the \"already registered\" error.\n\n   ```python\n   from django.contrib import admin\n   from django.contrib.auth.models import User\n   from django.contrib.auth.admin import UserAdmin as BaseUserAdmin\n\n   admin.site.unregister(User)\n   ```\n\n2. **Create a Custom User Admin Form**:\n\n   Create a form that inherits from `UserChangeForm` or `UserCreationForm` based on your needs. Customize the fields to use email as the username and add an alternate email field.\n\n   ```python\n   from django import forms\n   from django.contrib.auth.forms import UserChangeForm, UserCreationForm\n\n   class CustomUserChangeForm(UserChangeForm):\n       class Meta:\n           model = User\n           fields = ('email', 'alternate_email', 'first_name', 'last_name', 'is_active', 'is_staff')\n\n   class CustomUserCreationForm(UserCreationForm):\n       class Meta:\n           model = User\n           fields = ('email', 'alternate_email', 'first_name', 'last_name')\n   ```\n\n3. **Create a Custom UserAdmin**:\n\n   Create a custom `UserAdmin` class that uses the forms you've created.\n\n   ```python\n   class CustomUserAdmin(BaseUserAdmin):\n       form = CustomUserChangeForm\n       add_form = CustomUserCreationForm\n       list_display = ('email', 'alternate_email', 'first_name', 'last_name', 'is_staff')\n       fieldsets = (\n           (None, {'fields': ('email', 'password')}),\n           ('Personal info', {'fields': ('first_name', 'last_name', 'alternate_email')}),\n           ('Permissions', {'fields': ('is_active', 'is_staff', 'is_superuser', 'groups', 'user_permissions')}),\n       )\n       add_fieldsets = (\n           (None, {\n               'classes': ('wide',),\n               'fields': ('email', 'alternate_email', 'password1', 'password2', 'first_name', 'last_name', 'is_staff'),\n           }),\n       )\n       search_fields = ('email', 'first_name', 'last_name')\n       ordering = ('email',)\n       filter_horizontal = ('groups', 'user_permissions',)\n\n   # Register your custom UserAdmin\n   admin.site.register(User, CustomUserAdmin)\n   ```\n\nBy following these steps, you can customize the admin form for the User model without needing to create a separate admin site or modify the autodiscover process. This approach ensures that you only make changes specific to the User admin interface while leaving the rest of your admin setup intact."
    }
]