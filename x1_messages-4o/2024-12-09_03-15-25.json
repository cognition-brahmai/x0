[
    {
        "role": "user",
        "content": "How can I modify the queryset in the autocomplete widget in Django 2.0? I used to change the queryset of a ForeignKeyField using formfield_for_foreignkey, but this doesn't seem to work with the newly added autocomplete_fields, which seem to dynamically fetch options from a different URL."
    },
    {
        "role": "assistant",
        "content": "In Django 2.0, the `autocomplete_fields` feature allows you to use a JavaScript-powered widget for ForeignKey and ManyToMany fields in the admin interface. This widget fetches its options dynamically from a different URL, as you've noted. To customize the queryset for this widget, you need to override the `get_search_results` method in the corresponding ModelAdmin class. Here's how you can do it:\n\n1. **Override `get_search_results`:** This method allows you to customize the queryset that the autocomplete widget will use. You can filter the queryset based on your requirements.\n\n2. **Example Implementation:**\n\n```python\nfrom django.contrib import admin\nfrom .models import YourModel, RelatedModel\n\nclass YourModelAdmin(admin.ModelAdmin):\n    autocomplete_fields = ['related_field']  # The field you want to use autocomplete for\n\n    def get_search_results(self, request, queryset, search_term):\n        # Call the superclass method to get the initial queryset\n        queryset, use_distinct = super().get_search_results(request, queryset, search_term)\n\n        # Customize the queryset based on your requirements\n        # For example, filter out objects that are inactive\n        queryset = queryset.filter(active=True)\n\n        return queryset, use_distinct\n\nadmin.site.register(YourModel, YourModelAdmin)\n```\n\n3. **Explanation:**\n   - `autocomplete_fields` is a list that specifies which fields should use the autocomplete widget.\n   - `get_search_results` is overridden to customize the queryset. You can add any filtering logic you need here.\n   - The `use_distinct` variable is used to determine whether the query should use `distinct()`. You should return it as-is unless you have a specific reason to change it.\n\nThis setup allows you to dynamically filter the options shown in the autocomplete widget, enabling you to control the available choices based on specific criteria."
    }
]