[
    {
        "role": "user",
        "content": "How can I access the index while iterating over a sequence with a 'for' loop in Python? I have a list 'xs' with elements [8, 23, 45]. When I iterate over the list using a for loop, I want to print the index and the corresponding element. Here's my current code:\n```python\nxs = [8, 23, 45]\n\nfor x in xs:\n    print(\"item #{} = {}\".format(index, x))\n```\nHowever, I am not sure how to access the index in the for loop. I'd like my output to look like this:\n```python\nitem #1 = 8\nitem #2 = 23\nitem #3 = 45\n```"
    },
    {
        "role": "assistant",
        "content": "To access the index while iterating over a sequence in Python, you can use the built-in `enumerate()` function. This function adds a counter to an iterable and returns it in the form of an `enumerate` object. You can then use this object in a `for` loop to get both the index and the corresponding element. Here's how you can modify your code to achieve the desired output:\n\n```python\nxs = [8, 23, 45]\n\nfor index, x in enumerate(xs, start=1):\n    print(\"item #{} = {}\".format(index, x))\n```\n\nIn this code, `enumerate(xs, start=1)` will provide both the index and the element for each iteration, with the index starting from 1. This should give you the output you're looking for:\n\n```\nitem #1 = 8\nitem #2 = 23\nitem #3 = 45\n```"
    }
]