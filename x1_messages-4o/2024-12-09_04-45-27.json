[
    {
        "role": "user",
        "content": "How can I conditionally insert an item into a DynamoDB table using Boto3 in Python? Specifically, I'm trying to add an item with a hash key of 'userId' and a range key of 'productId' only if the item does not already exist in the table. The standard 'put_item' call I am using is:\n\n```python\ntable.put_item(Item={'userId': 1, 'productId': 2})\n```\n\nHowever, when I attempt to use a ConditionExpression to prevent duplicates, like so:\n\n```python\ntable.put_item(\n    Item={'userId': 1, 'productId': 2}, \n    ConditionExpression='userId <> :uid AND productId <> :pid', \n    ExpressionAttributeValues={':uid': 1, ':pid': 3}\n)\n```\n\nI am consistently encountering a 'ConditionalCheckFailedException', regardless of whether an item with the same 'productId' exists or not. How can I resolve this issue?"
    },
    {
        "role": "assistant",
        "content": "To conditionally insert an item into a DynamoDB table using Boto3, you need to ensure that the `ConditionExpression` is correctly configured to check for the non-existence of an item. In your case, you want to add an item only if it does not already exist. \n\nThe `ConditionExpression` should check that the item with the specified `userId` and `productId` does not exist. You can achieve this by using the `attribute_not_exists` function in your condition expression. Here's how you can modify your `put_item` call:\n\n```python\nimport boto3\n\n# Initialize a session using Amazon DynamoDB\nsession = boto3.Session(\n    aws_access_key_id='YOUR_ACCESS_KEY',\n    aws_secret_access_key='YOUR_SECRET_KEY',\n    region_name='YOUR_REGION'\n)\n\n# Initialize DynamoDB resource\ndynamodb = session.resource('dynamodb')\n\n# Select your DynamoDB table\ntable = dynamodb.Table('YourTableName')\n\n# Attempt to conditionally insert the item\ntry:\n    table.put_item(\n        Item={'userId': 1, 'productId': 2},\n        ConditionExpression='attribute_not_exists(userId) AND attribute_not_exists(productId)'\n    )\n    print(\"Item inserted successfully.\")\nexcept dynamodb.meta.client.exceptions.ConditionalCheckFailedException:\n    print(\"The item already exists and was not inserted.\")\n```\n\n### Explanation:\n\n1. **ConditionExpression**: \n   - `attribute_not_exists(userId)` ensures that there isn't an existing item with the same `userId`.\n   - `attribute_not_exists(productId)` ensures that there isn't an existing item with the same `productId`.\n\n2. **Handling Exceptions**: \n   - If the condition fails (meaning the item already exists), a `ConditionalCheckFailedException` is raised, which you can catch to handle scenarios where the item was not inserted due to the condition not being met.\n\nThis setup ensures that a new item is only inserted if no item with the same `userId` and `productId` already exists in the table."
    }
]