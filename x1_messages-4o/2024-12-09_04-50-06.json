[
    {
        "role": "user",
        "content": "I have been struggling to get Django to send emails and I keep encountering an error: [Errno 111] Connection refused. I have tried various solutions but none seem to work. I have set up the email in my view as follows:\n\n```python\ntry:\n    msg = EmailMessage(subject, message, from_email, [receiver])\n    msg.content_subtype = \"html\"\n    msg.send()\n```\n\nThe settings for my email are:\n\n```python\nEMAIL_HOST = \"localhost\"\nDEFAULT_FROM_EMAIL = \"myemail@gmail.com\"\nEMAIL_PORT = 25\nEMAIL_BACKEND = \"django.core.mail.backends.smtp.EmailBackend\"\n```\n\nI have had success in sending test emails using `python -m smtpd -n -c DebuggingServer localhost:1025` but not in a real scenario. When I attempt to send an email from the shell, I get the following traceback:\n\n```python\n>>> from django.core.mail import send_mail\n>>> send_mail('Test', 'Test', 'myemail@gmail.com', ['myemail@gmail.com'])\nTraceback (most recent call last):\n  File \"<console>\", line 1, in <module>\n  File \"/usr/local/lib/python2.6/dist-packages/django/core/mail/__init__.py\", line 61, in send_mail\n    connection=connection).send()\n  File \"/usr/local/lib/python2.6/dist-packages/django/core/mail/message.py\", line 251, in send\n    return self.get_connection(fail_silently).send_messages([self])\n  File \"/usr/local/lib/python2.6/dist-packages/django/core/mail/backends/smtp.py\", line 79, in send_messages\n    new_conn_created = self.open()\n  File \"/usr/local/lib/python2.6/dist-packages/django/core/mail/backends/smtp.py\", line 42, in open\n    local_hostname=DNS_NAME.get_fqdn())\n  File \"/usr/lib/python2.6/smtplib.py\", line 239, in __init__\n    (code, msg) = self.connect(host, port)\n  File \"/usr/lib/python2.6/smtplib.py\", line 295, in connect\n    self.sock = self._get_socket(host, port, self.timeout)\n  File \"/usr/lib/python2.6/smtplib.py\", line 273, in _get_socket\n    return socket.create_connection((port, host), timeout)\n  File \"/usr/lib/python2.6/socket.py\", line 561, in create_connection\n    raise error, msg\nerror: [Errno 111] Connection refused\n```\n\nI would appreciate any help or advice to resolve this issue."
    },
    {
        "role": "assistant",
        "content": "The error `[Errno 111] Connection refused` typically indicates that there is no SMTP server running on the specified host and port, or it is not accessible. Let's go through a few steps to troubleshoot and resolve the issue:\n\n1. **Check SMTP Server Configuration:**\n   - Ensure that there is an SMTP server running on the host and port you have specified in your Django settings. \n   - For local development, you can use an SMTP service like Gmail or an SMTP server like `smtp.gmail.com`.\n\n2. **SMTP Server for Development:**\n   - If you're testing locally and do not have access to a real SMTP server, consider using a local SMTP debugging server or third-party services like Mailtrap or Gmail for testing.\n   - Update your settings to use Gmail SMTP for testing:\n     ```python\n     EMAIL_HOST = 'smtp.gmail.com'\n     EMAIL_PORT = 587\n     EMAIL_HOST_USER = 'your-email@gmail.com'\n     EMAIL_HOST_PASSWORD = 'your-email-password'\n     EMAIL_USE_TLS = True\n     ```\n\n3. **Firewall and Network Issues:**\n   - Ensure that your firewall and network settings allow outgoing connections on the specified port.\n   - Verify that the port (e.g., 25, 587, or 465 for SMTP) is not blocked by your ISP or network.\n\n4. **Correct Port Usage:**\n   - Port 25 is typically used for SMTP relay, and many ISPs block it for outgoing connections to prevent spam. Use port 587 for TLS or port 465 for SSL if using a service like Gmail.\n   \n5. **Authentication and Security:**\n   - If using an external SMTP service, ensure that you have provided the correct credentials and enabled any necessary security settings.\n   - For Gmail, ensure that \"Less secure app access\" is enabled in your Google account settings if you are using plain SMTP and not OAuth.\n\n6. **Testing with Debugging Server:**\n   - If you are using the debugging server, ensure you are connecting to the correct port (1025 in your case) when testing locally:\n     ```python\n     EMAIL_PORT = 1025\n     ```\n\n7. **Check Logs and Debugging:**\n   - Enable logging in Django to capture more detailed information about what might be happening when trying to send an email.\n   - Use Django's built-in logging capabilities to provide more context:\n     ```python\n     LOGGING = {\n         'version': 1,\n         'handlers': {\n             'console': {\n                 'class': 'logging.StreamHandler',\n             },\n         },\n         'loggers': {\n             'django': {\n                 'handlers': ['console'],\n                 'level': 'DEBUG',\n             },\n         },\n     }\n     ```\n\n8. **Check Python and Django Versions:**\n   - Ensure your Python and Django versions are compatible, and you are using a supported version of each.\n\nBy following these steps, you should be able to diagnose and fix the email sending issue in your Django application. If you continue to experience problems, consider checking the Django and SMTP server documentation for more specific troubleshooting advice."
    }
]