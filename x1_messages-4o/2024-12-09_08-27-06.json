[
    {
        "role": "user",
        "content": "I have computed a multiple linear regression equation using sklearn's LinearRegression in Python and I am interested in finding the adjusted R-squared value. I am currently able to get the R-squared value with the model.score() function but it seems this does not give the adjusted R-squared. How can I find the adjusted R-squared for my linear regression model?\n\nHere is the code I have been using so far:\n\n```python\nimport pandas as pd #import the pandas module\nimport numpy as np\n\ndf = pd.read_csv ('/Users/jeangelj/Documents/training/linexdata.csv', sep=',')\ndf\n\nfrom sklearn.linear_model import LinearRegression\nmodel = LinearRegression()\nX, y = df[['NumberofEmployees','ValueofContract']], df.AverageNumberofTickets\nmodel.fit(X, y)\nmodel.score(X, y)\n&gt;&gt;0.87764337132340009\n```\n\nI manually checked and found that 0.87764 is the R-squared and 0.863248 is the adjusted R-squared. How to compute the adjusted R-squared in Python?"
    },
    {
        "role": "assistant",
        "content": "To compute the adjusted R-squared for your linear regression model, you can use the following formula:\n\n\\[ \\text{Adjusted } R^2 = 1 - \\left( \\frac{(1 - R^2) \\times (n - 1)}{n - p - 1} \\right) \\]\n\nWhere:\n- \\( R^2 \\) is the R-squared value.\n- \\( n \\) is the number of observations (samples).\n- \\( p \\) is the number of predictors (independent variables).\n\nYou can calculate the adjusted R-squared by using the computed R-squared value and the dimensions of your dataset. Here\u2019s how you can do it in Python:\n\n```python\nimport pandas as pd\nfrom sklearn.linear_model import LinearRegression\n\n# Load your dataset\ndf = pd.read_csv('/Users/jeangelj/Documents/training/linexdata.csv', sep=',')\n\n# Define the features and target variable\nX = df[['NumberofEmployees', 'ValueofContract']]\ny = df['AverageNumberofTickets']\n\n# Fit the linear regression model\nmodel = LinearRegression()\nmodel.fit(X, y)\n\n# Calculate R-squared\nr_squared = model.score(X, y)\n\n# Calculate the adjusted R-squared\nn = len(y)  # number of observations\np = X.shape[1]  # number of predictors\n\nadjusted_r_squared = 1 - ((1 - r_squared) * (n - 1) / (n - p - 1))\n\nprint(f\"R-squared: {r_squared}\")\nprint(f\"Adjusted R-squared: {adjusted_r_squared}\")\n```\n\nThis code will give you both the R-squared and the adjusted R-squared values for your linear regression model."
    }
]