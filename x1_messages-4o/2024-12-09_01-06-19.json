[
    {
        "role": "user",
        "content": "I have recently installed the Anaconda version of Python on my Linux (Ubuntu 12.04) system. However, when I type 'python' into the terminal, it opens the Anaconda distribution rather than the default Python distribution. How can I configure my system to use the default Python distribution when the command 'python' is used in the terminal?"
    },
    {
        "role": "assistant",
        "content": "To configure your system to use the default Python distribution instead of the Anaconda distribution when you type `python`, you need to adjust the order of directories in your system's `PATH` environment variable. Here's how you can do it:\n\n1. **Check the Current Python Path:**\n\n   First, you can check which Python is being used by default by running:\n\n   ```bash\n   which python\n   ```\n\n   This will show you the path to the Python executable currently being used.\n\n2. **Locate the Default Python Path:**\n\n   You need to find the path to the default Python distribution. It's typically located in `/usr/bin/` or `/usr/local/bin/`. You can verify this by running:\n\n   ```bash\n   ls /usr/bin/python*\n   ```\n\n   or\n\n   ```bash\n   ls /usr/local/bin/python*\n   ```\n\n3. **Modify the PATH Variable:**\n\n   You need to modify the `PATH` variable to prioritize the default Python directory over the Anaconda directory. You can do this by editing your shell configuration file (e.g., `.bashrc`, `.bash_profile`, or `.zshrc` depending on your shell).\n\n   Open the configuration file in a text editor. For example, using `nano`:\n\n   ```bash\n   nano ~/.bashrc\n   ```\n\n   Add the following line at the end of the file, replacing `/usr/bin/` with the path to your default Python if it's different:\n\n   ```bash\n   export PATH=\"/usr/bin:$PATH\"\n   ```\n\n   This line ensures that `/usr/bin` is searched before Anaconda's Python directory.\n\n4. **Apply the Changes:**\n\n   Save the file and apply the changes by running:\n\n   ```bash\n   source ~/.bashrc\n   ```\n\n5. **Verify the Change:**\n\n   Now, check again which Python is being used by default:\n\n   ```bash\n   which python\n   ```\n\n   It should now point to the path of the default Python distribution.\n\nBy following these steps, you should be able to configure your system to use the default Python distribution when you type `python` in the terminal."
    }
]