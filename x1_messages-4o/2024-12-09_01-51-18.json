[
    {
        "role": "user",
        "content": "I am attempting to connect to a Microsoft Azure SQL server database using Python3 on Linux. I am using the following code to establish the connection:\n\n```python\nconn = pyodbc.connect('DRIVER={SQL Server};SERVER=%s' % (self.config.get(\"Sql\", \"DataSource\")),\n                    user= self.config.get(\"Sql\", \"UserId\"),\n                    password=self.config.get(\"Sql\", \"Password\"),\n                    database=self.config.get(\"Sql\", \"Catalog\"))\n```\n\nHowever, when I execute this line, I encounter the following error message:\n\n```python\npyodbc.Error: ('01000', \"[01000] [unixODBC][Driver Manager]Can't open lib 'SQL Server' : file not found (0) (SQLDriverConnect)\")\n```\n\nI am not sure why this is happening. Can you help me understand what's going wrong?"
    },
    {
        "role": "assistant",
        "content": "The error message you're encountering suggests that the ODBC driver for SQL Server is not found on your Linux system. The `'DRIVER={SQL Server}'` part of your connection string is likely incorrect for your environment because Linux does not have a native \"SQL Server\" ODBC driver like Windows does. Here's how you can resolve this issue:\n\n1. **Install the Microsoft ODBC Driver for SQL Server:**\n\n   On Linux, you need to install the Microsoft ODBC Driver for SQL Server. Depending on your distribution, you can follow these instructions:\n\n   - **For Ubuntu:**\n\n     ```bash\n     sudo su\n     curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -\n     curl https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/prod.list > /etc/apt/sources.list.d/mssql-release.list\n     exit\n     sudo apt-get update\n     sudo ACCEPT_EULA=Y apt-get install -y msodbcsql17\n     ```\n\n   - **For Red Hat-based systems (e.g., CentOS):**\n\n     ```bash\n     sudo su\n     curl https://packages.microsoft.com/config/rhel/$(rpm -E %{rhel})/prod.repo > /etc/yum.repos.d/mssql-release.repo\n     exit\n     sudo yum remove unixODBC-utf16 unixODBC-utf16-devel # to avoid conflicts\n     sudo ACCEPT_EULA=Y yum install -y msodbcsql17\n     ```\n\n2. **Update the Connection String:**\n\n   Once the driver is installed, update your connection string to use the installed driver. Typically, the driver name you should use is `{ODBC Driver 17 for SQL Server}` (or the version you installed):\n\n   ```python\n   conn = pyodbc.connect('DRIVER={ODBC Driver 17 for SQL Server};SERVER=%s;UID=%s;PWD=%s;DATABASE=%s' % (\n       self.config.get(\"Sql\", \"DataSource\"),\n       self.config.get(\"Sql\", \"UserId\"),\n       self.config.get(\"Sql\", \"Password\"),\n       self.config.get(\"Sql\", \"Catalog\")))\n   ```\n\n3. **Verify the Driver Installation:**\n\n   You can verify if the driver is installed correctly by listing the available ODBC drivers:\n\n   ```bash\n   odbcinst -q -d -n \"ODBC Driver 17 for SQL Server\"\n   ```\n\n   If the driver is not listed, double-check the installation steps.\n\n4. **Ensure Dependencies are Met:**\n\n   Make sure that any required dependencies for the ODBC driver are installed. The installation process typically handles this, but if you encounter issues, check the documentation for any additional dependencies.\n\nBy following these steps, you should be able to connect to your Azure SQL Server database using Python on Linux."
    }
]