[
    {
        "role": "user",
        "content": "How can I get the week start date (Monday) from a date column in a pandas DataFrame in Python? I've tried to find the weekday of 'myday' and then offset to get Monday, but it's giving a TypeError: unsupported type for timedelta days component: numpy.ndarray. Here's the code I've used:\n\n```python\ndf['myday'] is column of dates. \nmydays = pd.DatetimeIndex(df['myday']).weekday\ndf['week_start'] = pd.DatetimeIndex(df['myday']) - pd.DateOffset(days=mydays)\n```\n\nHow can I resolve this issue and get the week start date from a DataFrame column?"
    },
    {
        "role": "assistant",
        "content": "The error you're encountering is because `pd.DateOffset` expects a scalar value for the `days` parameter, but `mydays` is an array. Instead, you can use a vectorized approach to achieve the desired result by using the `pd.to_datetime` function along with `pd.offsets.Week`. Here's how you can modify your code to get the start of the week (Monday) for each date in your DataFrame:\n\n```python\nimport pandas as pd\n\n# Assuming df['myday'] is already a datetime column. If not, convert it:\ndf['myday'] = pd.to_datetime(df['myday'])\n\n# Calculate the start of the week (Monday) for each date\ndf['week_start'] = df['myday'] - pd.to_timedelta(df['myday'].dt.weekday, unit='D')\n\nprint(df)\n```\n\nIn this code:\n- `df['myday'].dt.weekday` gives you the day of the week as an integer (where Monday is 0 and Sunday is 6).\n- `pd.to_timedelta(df['myday'].dt.weekday, unit='D')` creates a timedelta object representing the number of days to subtract to get back to the previous Monday.\n- Subtracting this timedelta from `df['myday']` gives you the Monday of the week for each date in the column."
    }
]