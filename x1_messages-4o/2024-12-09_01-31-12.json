[
    {
        "role": "user",
        "content": "How can I remove all non-numeric characters from a string in Python?"
    },
    {
        "role": "assistant",
        "content": "To remove all non-numeric characters from a string in Python, you can use a variety of methods. Here's a simple approach using regular expressions with the `re` module:\n\n```python\nimport re\n\ndef remove_non_numeric(input_string):\n    # Use regular expressions to find all numeric characters\n    numeric_string = re.sub(r'\\D', '', input_string)\n    return numeric_string\n\n# Example usage:\ninput_string = \"abc123def456ghi789\"\ncleaned_string = remove_non_numeric(input_string)\nprint(cleaned_string)  # Output: 123456789\n```\n\nIn this code, `\\D` is a regular expression pattern that matches any non-digit character, and `re.sub()` is used to substitute these with an empty string, effectively removing them.\n\nAlternatively, you can use a list comprehension or the `filter()` function to achieve the same result:\n\n### Using List Comprehension:\n\n```python\ndef remove_non_numeric(input_string):\n    # Build a new string with only numeric characters\n    numeric_string = ''.join([char for char in input_string if char.isdigit()])\n    return numeric_string\n\n# Example usage:\ninput_string = \"abc123def456ghi789\"\ncleaned_string = remove_non_numeric(input_string)\nprint(cleaned_string)  # Output: 123456789\n```\n\n### Using `filter()`:\n\n```python\ndef remove_non_numeric(input_string):\n    # Filter and join only numeric characters\n    numeric_string = ''.join(filter(str.isdigit, input_string))\n    return numeric_string\n\n# Example usage:\ninput_string = \"abc123def456ghi789\"\ncleaned_string = remove_non_numeric(input_string)\nprint(cleaned_string)  # Output: 123456789\n```\n\nEach of these methods will give you a string containing only the numeric characters from the original input. Choose the method that you find most intuitive or suitable for your use case."
    }
]