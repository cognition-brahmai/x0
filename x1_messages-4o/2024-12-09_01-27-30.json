[
    {
        "role": "user",
        "content": "What is the recommended code-style for the indentation of multi-line 'if' statements in Python? For long 'if' conditions, I usually indent like this:\n\n```python\nif (collResv.repeatability is None or\n    collResv.somethingElse):\n    collResv.rejected = True\n    collResv.rejectCompletely()\n```\n\nHowever, I find it hard to read as it puts the block started by the 'if' statement on the same indentation level as the last part of the 'if' condition, making it difficult to immediately see where the block starts. I've considered other styles, such as:\n\n```python\nif (collResv.repeatability is None or\n        collResv.somethingElse):\n    collResv.rejected = True\n    collResv.rejectCompletely()\n```\n\nand \n\n```python\nif (collResv.repeatability is None or\n  collResv.somethingElse):\n    collResv.rejected = True\n    collResv.rejectCompletely()\n```\n\nHowever, both seem to have their own inconsistencies and don't provide a perfect solution. Is there a suggested indentation style for cases like this that do not require overly-long lines (i.e. a single-line condition)? If not, what is your preferred style for such cases?"
    },
    {
        "role": "assistant",
        "content": "When dealing with multi-line `if` statements in Python, readability and consistency are key. The PEP 8 style guide, which is widely adopted in the Python community, provides some guidance on this. The goal is to maintain a clear distinction between the condition and the block of code that follows. Here are a couple of recommended approaches:\n\n1. **Align with parentheses:**\n   Align the continuation lines with the opening parenthesis of the multi-line condition. This is a common approach and keeps the condition visually distinct from the block that follows.\n\n   ```python\n   if (collResv.repeatability is None or\n       collResv.somethingElse):\n       collResv.rejected = True\n       collResv.rejectCompletely()\n   ```\n\n   This style helps to visually associate the subsequent lines with the condition.\n\n2. **Hanging indent:**\n   Use a hanging indent where the continuation lines are indented by an additional level (usually 4 spaces) from the start of the `if` statement. Make sure the block of code is indented from the `if` statement itself.\n\n   ```python\n   if (collResv.repeatability is None or\n           collResv.somethingElse):\n       collResv.rejected = True\n       collResv.rejectCompletely()\n   ```\n\n   This style also clearly separates the condition from the block and is often considered more visually distinct.\n\n3. **Avoid using backslashes:**\n   It's generally recommended to avoid using backslashes for line continuation in Python, as they can be error-prone and less readable.\n\nBetween these styles, the choice often comes down to personal or team preference, as long as it enhances readability and is applied consistently across the codebase. My preference is for the hanging indent style because it provides a clear visual separation between the condition and the block of code, making it easier to read and maintain."
    }
]