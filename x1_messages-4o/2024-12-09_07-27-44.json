[
    {
        "role": "user",
        "content": "Is there a way to plot a graph with tertiary Y axis in pandas? I'm trying to plot different measurements with distinct units on the same graph for easy comparison, such as Relative Humidity, Temperature, and Electrical Conductivity. My current method of using numpy and pyplot is slow with large datasets. I'm not sure if this is possible without too much overhead or work in pandas, as it might be a limitation of matplotlib."
    },
    {
        "role": "assistant",
        "content": "Creating a plot with more than two y-axes in Matplotlib (and thus in Pandas, which is built on top of Matplotlib) is not directly supported, but you can achieve a similar effect by overlaying multiple plots. Here's a way to plot three different measurements using a tertiary y-axis by utilizing secondary y-axes:\n\n```python\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n# Sample data\ndata = {\n    'Time': pd.date_range(start='2023-01-01', periods=100, freq='D'),\n    'Temperature': range(100, 200),\n    'Humidity': range(30, 130),\n    'Conductivity': range(0, 100)\n}\n\ndf = pd.DataFrame(data)\n\n# Create a figure and a set of subplots\nfig, ax1 = plt.subplots()\n\n# Plot the first measurement (e.g., Temperature)\nax1.plot(df['Time'], df['Temperature'], color='r', label='Temperature')\nax1.set_ylabel('Temperature (\u00b0C)', color='r')\nax1.tick_params(axis='y', labelcolor='r')\n\n# Create a secondary y-axis for the second measurement (e.g., Humidity)\nax2 = ax1.twinx()\nax2.plot(df['Time'], df['Humidity'], color='b', label='Humidity')\nax2.set_ylabel('Humidity (%)', color='b')\nax2.tick_params(axis='y', labelcolor='b')\n\n# Create another secondary y-axis for the third measurement (e.g., Conductivity)\nax3 = ax1.twinx()\n# Offset the third axis to the right\nax3.spines['right'].set_position(('outward', 60))\nax3.plot(df['Time'], df['Conductivity'], color='g', label='Conductivity')\nax3.set_ylabel('Conductivity (\u00b5S/cm)', color='g')\nax3.tick_params(axis='y', labelcolor='g')\n\n# Add a title and show the plot\nplt.title('Comparison of Measurements')\nfig.tight_layout()  # Adjust layout to prevent overlap\nplt.show()\n```\n\n### Explanation:\n- `ax1` is the primary y-axis for plotting Temperature.\n- `ax2` is a secondary y-axis shared with `ax1` for plotting Humidity using `twinx()`.\n- `ax3` is another secondary y-axis, also created using `twinx()`, but offset to the right using `set_position(('outward', 60))` to create a visual separation from the other y-axes.\n- Each y-axis has its own label and color customization to make the plot more readable.\n\nThis method allows you to visually compare three different measurements with distinct units on the same plot. Keep in mind that too many y-axes can make the plot cluttered and harder to interpret, so use this approach judiciously."
    }
]