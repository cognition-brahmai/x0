[
    {
        "role": "user",
        "content": "How can I convert a list of 2D numpy arrays into a single 2D numpy array in Python? I have a list of numpy arrays, created by the following code:\n\n```python\ndat_list = []\nfor i in range(10):\n    dat_list.append(np.zeros([5, 10]))\n```\n\nI want to get a single array of shape (50, 10) from this list. However, when I use this command:\n\n```python\noutput = np.array(dat_list)\n```\n\nThe shape of the output is (10,5,10) rather than the desired (50, 10). What's the best way to achieve the desired output?"
    },
    {
        "role": "assistant",
        "content": "To convert a list of 2D numpy arrays into a single 2D numpy array with the desired shape, you can use the `np.vstack` function, which stacks arrays in sequence vertically (row-wise). Here's how you can achieve the desired output:\n\n```python\nimport numpy as np\n\ndat_list = []\nfor i in range(10):\n    dat_list.append(np.zeros([5, 10]))\n\n# Use np.vstack to stack the arrays vertically\noutput = np.vstack(dat_list)\n\nprint(output.shape)  # This will output (50, 10)\n```\n\nThe `np.vstack` function takes a sequence of arrays and stacks them vertically to form a single, larger array. This is the most straightforward way to achieve the desired shape of (50, 10) from your list of arrays."
    }
]