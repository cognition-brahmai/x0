[
    {
        "role": "user",
        "content": "In Python, I am utilizing the .capitalize() function to capitalize the first letter of a string. However, in some cases, the first character of my strings are integers. For example, I have strings such as '1bob' and '5sandy' and I want to transform them to '1Bob' and '5Sandy', respectively. How can I accomplish this?"
    },
    {
        "role": "assistant",
        "content": "To achieve the transformation you described, you can write a custom function that capitalizes the first alphabetical character in the string while preserving any leading digits. Here's a sample function to do that:\n\n```python\ndef capitalize_after_digits(s):\n    # Convert the string to a list of characters for easy manipulation\n    chars = list(s)\n    \n    # Iterate over the characters and find the first alphabetical character\n    for i in range(len(chars)):\n        if chars[i].isalpha():\n            # Capitalize the first alphabetical character and break the loop\n            chars[i] = chars[i].upper()\n            break\n\n    # Join the list of characters back into a string\n    return ''.join(chars)\n\n# Examples\nprint(capitalize_after_digits('1bob'))   # Output: '1Bob'\nprint(capitalize_after_digits('5sandy')) # Output: '5Sandy'\n```\n\nThis function converts the string into a list of characters, iterates over them to find the first alphabetical character, capitalizes it, and then reconstructs the string. This way, any leading digits will be preserved, and the first letter after those digits will be capitalized."
    }
]