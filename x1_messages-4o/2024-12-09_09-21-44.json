[
    {
        "role": "user",
        "content": "Can you provide a function that checks if an integer is prime? I want to determine whether a given number is prime or not in my program."
    },
    {
        "role": "assistant",
        "content": "Certainly! To determine if a given integer is a prime number, you can use the following Python function. This function checks if the number is less than 2, which are not prime. Then, it checks divisibility from 2 to the square root of the number, which is a more efficient way to determine primality.\n\nHere's the function:\n\n```python\ndef is_prime(n):\n    if n <= 1:\n        return False\n    if n <= 3:\n        return True\n    if n % 2 == 0 or n % 3 == 0:\n        return False\n    i = 5\n    while i * i <= n:\n        if n % i == 0 or n % (i + 2) == 0:\n            return False\n        i += 6\n    return True\n\n# Example usage:\nnumber = 29\nif is_prime(number):\n    print(f\"{number} is a prime number.\")\nelse:\n    print(f\"{number} is not a prime number.\")\n```\n\nThis function works by first handling small numbers and obvious non-primes (like even numbers greater than 2). It then checks potential divisors from 5 upwards, skipping even numbers and those divisible by 3, using the fact that any prime number greater than 3 can be expressed in the form of 6k \u00b1 1. This makes the function efficient for larger numbers as well."
    }
]