[
    {
        "role": "user",
        "content": "How can I list the words in a vocabulary according to their occurrence in a text corpus using Scikit-Learn's CountVectorizer? I have fitted a CountVectorizer to some documents in scikit-learn and I want to see all the terms and their corresponding frequency in the text corpus, to help me select stop-words. For example, 'and' appears 123 times, 'to' appears 100 times, 'for' appears 90 times, and so on. Is there a built-in function for this in Scikit-Learn?"
    },
    {
        "role": "assistant",
        "content": "Scikit-Learn's `CountVectorizer` is a great tool for converting a collection of text documents to a matrix of token counts. While it doesn't provide a direct built-in function to list words by their frequency, you can achieve this with a few additional steps. Here's a step-by-step approach to get the terms and their corresponding frequencies:\n\n1. **Import the necessary modules:**\n\n   ```python\n   from sklearn.feature_extraction.text import CountVectorizer\n   import numpy as np\n   ```\n\n2. **Fit the `CountVectorizer` to your text data:**\n\n   ```python\n   documents = [\"Sample document text goes here.\", \"Another document.\", \"More text data.\"]\n   vectorizer = CountVectorizer()\n   X = vectorizer.fit_transform(documents)\n   ```\n\n3. **Sum the occurrences of each word:**\n\n   The `X` variable is a sparse matrix where each row corresponds to a document and each column corresponds to a token from the vocabulary. You can sum over the rows to get the total counts for each token.\n\n   ```python\n   word_counts = np.asarray(X.sum(axis=0)).flatten()\n   ```\n\n4. **Extract the vocabulary and sort by frequency:**\n\n   You can now pair each word with its frequency and sort them.\n\n   ```python\n   vocab = vectorizer.get_feature_names_out()\n   word_freq = list(zip(vocab, word_counts))\n   word_freq_sorted = sorted(word_freq, key=lambda x: x[1], reverse=True)\n   ```\n\n5. **Display the sorted words and their frequencies:**\n\n   ```python\n   for word, freq in word_freq_sorted:\n       print(f'{word}: {freq}')\n   ```\n\nThis will give you a sorted list of words and their frequencies, allowing you to identify which words appear most often in your corpus. You can then use this information to decide which words might be suitable to include as stop words."
    }
]