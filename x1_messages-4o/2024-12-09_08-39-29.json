[
    {
        "role": "user",
        "content": "I am using `argparse` in Python 2.7 for parsing input options. One of my options is a multiple choice and I want to format its help text as a list. However, `argparse` is stripping all newlines and consecutive spaces. How can I insert newlines in the help text? \n\nHere is the code I have written so far:\n\n```python\nfrom argparse import ArgumentParser\n\nparser = ArgumentParser(description='test')\n\nparser.add_argument('-g', choices=['a', 'b', 'g', 'd', 'e'], default='a',\n    help=\"Some option, where\\n\"\n         \" a = alpha\\n\"\n         \" b = beta\\n\"\n         \" g = gamma\\n\"\n         \" d = delta\\n\"\n         \" e = epsilon\")\n\nparser.parse_args()\n```\n\nWhen I run this script with the `-h` option, the help message does not preserve the newlines and consecutive spaces. It looks like this:\n\n```bash\n~/Downloads:52$ python2.7 x.py -h\nusage: x.py [-h] [-g {a,b,g,d,e}]\n\ntest\n\noptional arguments:\n  -h, --help      show this help message and exit\n  -g {a,b,g,d,e}  Some option, where a = alpha b = beta g = gamma d = delta e\n                  = epsilon\n```\n\nHow can I insert newlines in the help text?"
    },
    {
        "role": "assistant",
        "content": "In Python 2.7, the `argparse` module uses a formatter class to handle how the help messages are displayed. By default, it uses `argparse.HelpFormatter`, which wraps text and does not preserve newlines or consecutive spaces in the help message.\n\nTo preserve the newlines and spaces in your help message, you can define a custom formatter class that inherits from `argparse.RawTextHelpFormatter`. This formatter class does not perform any additional formatting on the help strings and will preserve whitespace and newlines.\n\nHere's how you can modify your code to use `RawTextHelpFormatter`:\n\n```python\nfrom argparse import ArgumentParser, RawTextHelpFormatter\n\nparser = ArgumentParser(description='test', formatter_class=RawTextHelpFormatter)\n\nparser.add_argument('-g', choices=['a', 'b', 'g', 'd', 'e'], default='a',\n    help=\"Some option, where\\n\"\n         \" a = alpha\\n\"\n         \" b = beta\\n\"\n         \" g = gamma\\n\"\n         \" d = delta\\n\"\n         \" e = epsilon\")\n\nparser.parse_args()\n```\n\nWith this change, when you run the script with the `-h` option, the help message should preserve the formatting as you intended:\n\n```bash\n~/Downloads:52$ python2.7 x.py -h\nusage: x.py [-h] [-g {a,b,g,d,e}]\n\ntest\n\noptional arguments:\n  -h, --help      show this help message and exit\n  -g {a,b,g,d,e}  Some option, where\n                  a = alpha\n                  b = beta\n                  g = gamma\n                  d = delta\n                  e = epsilon\n```\n\nBy using `RawTextHelpFormatter`, you ensure that the help text is displayed exactly as you have written it, with all newlines and spaces preserved."
    }
]