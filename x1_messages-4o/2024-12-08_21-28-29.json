[
    {
        "role": "user",
        "content": "How can I formulate a SQL query that retrieves the top 5 customers with the highest total purchase amount, their contact information (including name and email), and their detailed purchase history? Assuming the database schema has a customers table with columns such as customer_id, name, and email, as well as a purchases table with columns including purchase_id, purchase_amount, and purchase_date. The rewritten prompt requires you to not only retrieve the highest total purchase amounts but also the specific details of each purchase. Your query should utilize JOIN statements and GROUP BY clauses to achieve this. Additionally, the query should involve complex reasoning that involves selecting only the highest purchase amounts, grouping them by customer, and then ordering them in descending order."
    },
    {
        "role": "assistant",
        "content": "To achieve the desired result, you need to write a SQL query that involves joining the `customers` and `purchases` tables, aggregating the total purchase amounts for each customer, and then retrieving the top 5 customers with the highest total purchase amounts along with their detailed purchase histories. Here\u2019s how you can construct the query:\n\n```sql\nWITH CustomerTotalPurchases AS (\n    SELECT \n        c.customer_id,\n        c.name,\n        c.email,\n        SUM(p.purchase_amount) AS total_purchase_amount\n    FROM \n        customers c\n    JOIN \n        purchases p ON c.customer_id = p.customer_id\n    GROUP BY \n        c.customer_id, c.name, c.email\n),\nTopCustomers AS (\n    SELECT \n        ctp.customer_id,\n        ctp.name,\n        ctp.email,\n        ctp.total_purchase_amount,\n        RANK() OVER (ORDER BY ctp.total_purchase_amount DESC) AS rank\n    FROM \n        CustomerTotalPurchases ctp\n)\nSELECT \n    tc.name,\n    tc.email,\n    tc.total_purchase_amount,\n    p.purchase_id,\n    p.purchase_amount,\n    p.purchase_date\nFROM \n    TopCustomers tc\nJOIN \n    purchases p ON tc.customer_id = p.customer_id\nWHERE \n    tc.rank <= 5\nORDER BY \n    tc.total_purchase_amount DESC, p.purchase_date;\n```\n\n### Explanation:\n\n1. **CustomerTotalPurchases CTE**: This Common Table Expression (CTE) calculates the total purchase amount for each customer by joining the `customers` and `purchases` tables and grouping the results by customer details.\n\n2. **TopCustomers CTE**: This CTE ranks the customers based on their total purchase amounts using the `RANK()` window function, ordering them in descending order.\n\n3. **Final Selection**: The main query joins the `TopCustomers` CTE with the `purchases` table to retrieve the detailed purchase history for the top 5 customers. The `WHERE` clause ensures only the top 5 ranked customers are selected.\n\n4. **ORDER BY Clause**: The results are ordered by total purchase amounts in descending order and then by purchase date to present the detailed purchase history in chronological order.\n\nThis query will provide you with the top 5 customers, their contact information, and their detailed purchase histories."
    }
]