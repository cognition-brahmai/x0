[
    {
        "role": "user",
        "content": "What is the most efficient way to extract URLs from a string in Python? I am aware of complex regex methods like the one posted here, but I am looking for a simpler approach possibly using a standard module or a third-party add-on."
    },
    {
        "role": "assistant",
        "content": "To extract URLs from a string in Python, you can use the `urlextract` library, which is a third-party module designed specifically for this purpose. It provides a clean and straightforward way to extract URLs without delving into complex regular expressions.\n\nHere's how you can use `urlextract` to extract URLs:\n\n1. First, you'll need to install the `urlextract` library if you haven't already. You can do this using pip:\n\n   ```bash\n   pip install urlextract\n   ```\n\n2. Once installed, you can use it in your Python code as follows:\n\n   ```python\n   from urlextract import URLExtract\n\n   # Create an instance of URLExtract\n   extractor = URLExtract()\n\n   # Define your text with URLs\n   text = \"Check out this link: https://example.com and also visit http://another-example.com for more info.\"\n\n   # Extract URLs\n   urls = extractor.find_urls(text)\n\n   # Print the extracted URLs\n   print(urls)\n   ```\n\nThe `URLExtract` class is efficient and handles various edge cases that you might encounter with URL extraction. It also performs well in terms of speed and accuracy compared to manually crafting regex patterns.\n\nThis approach is simple and leverages a tested library to achieve the desired result without getting into the complexities of regex."
    }
]