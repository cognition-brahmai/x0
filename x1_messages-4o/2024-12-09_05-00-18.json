[
    {
        "role": "user",
        "content": "How can I sort a dictionary in Python by key in numerical order? I have a dictionary that looks like this:\n\n```python\n{'57481': 50, '57480': 89, '57483': 110, '57482': 18, '57485': 82, '57484': 40}\n```\n\nI would like to sort it in numerical order to get this result:\n\n```python\n{'57480': 89, '57481': 50, '57482': 18, '57483': 110, '57484': 40, '57485': 82}\n```\n\nI've tried using `sorted(self.docs_info.items)` but it doesn't seem to work. How should I go about this?"
    },
    {
        "role": "assistant",
        "content": "To sort a dictionary by its keys in numerical order, you can use the `sorted()` function along with a dictionary comprehension to create a new sorted dictionary. Since your keys are strings representing numbers, you need to convert them to integers for proper numerical sorting. Here's how you can do it:\n\n```python\n# Original dictionary\ndata = {'57481': 50, '57480': 89, '57483': 110, '57482': 18, '57485': 82, '57484': 40}\n\n# Sort the dictionary by key in numerical order\nsorted_data = {k: data[k] for k in sorted(data, key=int)}\n\nprint(sorted_data)\n```\n\nIn this code:\n- `sorted(data, key=int)` sorts the keys numerically by converting them to integers.\n- The dictionary comprehension `{k: data[k] for k in sorted(data, key=int)}` constructs a new dictionary with keys in the desired order.\n\nWhen you run this code, you'll get the sorted dictionary:\n\n```python\n{'57480': 89, '57481': 50, '57482': 18, '57483': 110, '57484': 40, '57485': 82}\n```\n\nThis achieves the desired numerical sorting of the dictionary keys."
    }
]