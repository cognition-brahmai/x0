[
    {
        "role": "user",
        "content": "How can I record and store the computation time for each epoch in Keras during model.fit()? I am trying to compare computation time between different models. When I run model.fit(), the computation time per epoch is printed to the console as shown below:\n\n<pre><code>Epoch 5/5\n160000/160000 [==============================] - **10s** ......\n</code></pre>\n\nI want to find a way to store these times similar to the model metrics that are saved in each epoch and are available through the history object."
    },
    {
        "role": "assistant",
        "content": "To record and store the computation time for each epoch in Keras during `model.fit()`, you can use a custom callback. Keras callbacks allow you to perform actions at various stages of the training process, including at the start and end of each epoch. Here's how you can create a custom callback to capture and store the computation time for each epoch:\n\n```python\nimport time\nfrom keras.callbacks import Callback\n\nclass TimeHistory(Callback):\n    def on_train_begin(self, logs=None):\n        self.times = []\n\n    def on_epoch_begin(self, epoch, logs=None):\n        self.epoch_time_start = time.time()\n\n    def on_epoch_end(self, epoch, logs=None):\n        epoch_time = time.time() - self.epoch_time_start\n        self.times.append(epoch_time)\n        print(f\"Epoch {epoch + 1} took {epoch_time:.2f} seconds\")\n\n# Usage\ntime_callback = TimeHistory()\n\n# Assuming you have a model and data ready\nhistory = model.fit(\n    x_train, y_train, \n    epochs=5, \n    batch_size=32, \n    callbacks=[time_callback]\n)\n\n# Access the times recorded\nepoch_times = time_callback.times\nprint(\"Epoch times:\", epoch_times)\n```\n\n### Explanation:\n- **Custom Callback**: The `TimeHistory` class inherits from `keras.callbacks.Callback`. It overrides the `on_epoch_begin` and `on_epoch_end` methods to capture the start and end times of each epoch.\n- **Recording Time**: At the start of each epoch, the current time is recorded. At the end of each epoch, the duration is calculated by subtracting the start time from the current time.\n- **Storing Times**: The times are stored in a list attribute `self.times`, which can be accessed after training.\n- **Using the Callback**: Add an instance of `TimeHistory` to the `callbacks` list in the `model.fit()` method.\n\nThis approach allows you to capture and store the computation time for each epoch, making it easy to compare these times across different models or configurations."
    }
]