[
    {
        "role": "user",
        "content": "How can I create a Python program to implement a selection sort algorithm?"
    },
    {
        "role": "assistant",
        "content": "Certainly! Selection sort is a straightforward comparison-based sorting algorithm. It works by dividing the list into two parts: a sorted part and an unsorted part. Initially, the sorted part is empty, and the unsorted part is the entire list. The algorithm repeatedly selects the smallest (or largest, depending on the order) element from the unsorted part and moves it to the end of the sorted part.\n\nHere's how you can implement a selection sort algorithm in Python:\n\n```python\ndef selection_sort(arr):\n    # Traverse through all array elements\n    for i in range(len(arr)):\n        # Find the minimum element in the remaining unsorted array\n        min_idx = i\n        for j in range(i+1, len(arr)):\n            if arr[j] < arr[min_idx]:\n                min_idx = j\n\n        # Swap the found minimum element with the first element\n        arr[i], arr[min_idx] = arr[min_idx], arr[i]\n\n    return arr\n\n# Example usage:\nif __name__ == \"__main__\":\n    my_list = [64, 25, 12, 22, 11]\n    print(\"Original array:\", my_list)\n    sorted_list = selection_sort(my_list)\n    print(\"Sorted array:\", sorted_list)\n```\n\n### Explanation:\n1. **Outer Loop:** Iterates over each element in the list.\n2. **Inner Loop:** Finds the index of the minimum element from the unsorted part of the list.\n3. **Swap:** Exchanges the found minimum element with the first element of the unsorted part.\n4. **Repeat:** This process is repeated for the entire list, resulting in a sorted list.\n\n### Characteristics:\n- **Time Complexity:** O(n\u00b2), where n is the number of elements in the list.\n- **Space Complexity:** O(1), because it is an in-place sorting algorithm.\n- **Stability:** Selection sort is not a stable sorting algorithm, meaning that the relative order of equal items might not be preserved.\n\nYou can run this code with any list of numbers to see how selection sort organizes it."
    }
]