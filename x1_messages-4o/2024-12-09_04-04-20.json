[
    {
        "role": "user",
        "content": "How can I check if a non-index column in a Pandas dataframe is sorted? Is there an equivalent function to is_monotonic() for non-index columns, without needing to sort the entire dataframe again or converting a column into an index?"
    },
    {
        "role": "assistant",
        "content": "Yes, you can check if a non-index column in a Pandas DataFrame is sorted without converting it into an index or sorting the entire DataFrame. You can use the `is_monotonic_increasing` or `is_monotonic_decreasing` attributes directly on the column as a Pandas Series. Here's how you can do it:\n\n```python\nimport pandas as pd\n\n# Sample DataFrame\ndata = {\n    'A': [1, 2, 3, 4],\n    'B': [4, 3, 2, 1]\n}\n\ndf = pd.DataFrame(data)\n\n# Check if column 'A' is sorted in increasing order\nis_sorted_ascending = df['A'].is_monotonic_increasing\n\n# Check if column 'B' is sorted in decreasing order\nis_sorted_descending = df['B'].is_monotonic_decreasing\n\nprint(f\"Column 'A' is sorted in ascending order: {is_sorted_ascending}\")\nprint(f\"Column 'B' is sorted in descending order: {is_sorted_descending}\")\n```\n\nThis approach allows you to directly assess the monotonicity of any column without altering the structure of the DataFrame. The `is_monotonic_increasing` and `is_monotonic_decreasing` attributes return a boolean indicating whether the Series is sorted in non-decreasing or non-increasing order, respectively."
    }
]