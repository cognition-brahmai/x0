[
    {
        "role": "user",
        "content": "Create a Python script that interacts with a RESTful API to fetch information about cryptocurrencies. The script should accept a cryptocurrency symbol as input, retrieve its current price and market cap, and display the information in a formatted output.\nPLAINFORMAT"
    },
    {
        "role": "assistant",
        "content": "Alright, I'm going to help you create a Python script that interacts with a RESTful API to fetch information about cryptocurrencies. We'll use the CoinMarketCap API for this purpose, as it provides comprehensive data on various cryptocurrencies.\n\nFirst, you'll need to sign up for a free API key from CoinMarketCap. Here's how you can do it:\n\n1. Go to the CoinMarketCap website: https://coinmarketcap.com/\n2. Click on \"API\" in the top navigation bar.\n3. Sign up for a free account or log in if you already have one.\n4. Once logged in, go to the \"\u6c99\u76d2\" section to get your API key.\n\nNote: The free plan has some limitations, such as a limited number of API calls per day.\n\nOnce you have your API key, you can proceed to write the Python script.\n\n### Step 1: Install Required Libraries\n\nWe'll need the `requests` library to make HTTP requests to the API. If you don't have it installed, you can install it using pip:\n\n```bash\npip install requests\n```\n\n### Step 2: Write the Python Script\n\nHere's a sample script that takes a cryptocurrency symbol as input, retrieves its current price and market cap, and displays the information in a formatted output.\n\n```python\nimport requests\n\ndef get_crypto_info(symbol, api_key):\n    base_url = \"https://pro-api.coinmarketcap.com/v1/cryptocurrency/quotes/latest\"\n    params = {\n        \"symbol\": symbol,\n        \"convert\": \"USD\"  # You can change the conversion currency as needed\n    }\n    headers = {\n        \"X-CMC_PRO_API_KEY\": api_key\n    }\n    \n    response = requests.get(base_url, params=params, headers=headers)\n    \n    if response.status_code == 200:\n        data = response.json()\n        if \"data\" in data and symbol in data[\"data\"]:\n            crypto_data = data[\"data\"][symbol]\n            name = crypto_data[\"name\"]\n            quote = crypto_data[\"quote\"][\"USD\"]\n            price = quote[\"price\"]\n            market_cap = quote[\"market_cap\"]\n            print(f\"Currency: {name} ({symbol})\")\n            print(f\"Current Price: ${price:,.2f}\")\n            print(f\"Market Cap: ${market_cap:,.2f}\")\n        else:\n            print(\"Currency not found.\")\n    else:\n        print(f\"Error: {response.status_code} - {response.text}\")\n\nif __name__ == \"__main__\":\n    api_key = \"your_api_key_here\"  # Replace with your actual API key\n    symbol = input(\"Enter the cryptocurrency symbol (e.g., BTC, ETH): \").upper()\n    get_crypto_info(symbol, api_key)\n```\n\n### Explanation:\n\n1. **API Endpoint**: We use the `/v1/cryptocurrency/quotes/latest` endpoint from CoinMarketCap to get the latest quotes for a given cryptocurrency symbol.\n\n2. **Parameters**:\n   - `symbol`: The cryptocurrency symbol (e.g., BTC, ETH).\n   - `convert`: The conversion currency (e.g., USD).\n\n3. **Headers**:\n   - `X-CMC_PRO_API_KEY`: Your API key for authentication.\n\n4. **Response Handling**:\n   - Check if the response status code is 200 (OK).\n   - Parse the JSON response to extract the currency name, current price, and market cap.\n   - Print the information in a formatted manner.\n\n5. **User Input**:\n   - Prompt the user to enter the cryptocurrency symbol.\n   - Convert the input to uppercase to match the API expectations.\n\n### Notes:\n\n- Make sure to replace `\"your_api_key_here\"` with your actual API key.\n- Handle cases where the currency symbol is invalid or not found.\n- Consider adding error handling for network issues or invalid API responses.\n\nThis script provides a basic framework. You can expand it by adding more features, such as handling multiple currencies, supporting different conversion currencies, or caching results for faster access.\n\nI hope this helps! Let me know if you have any questions or need further assistance."
    }
]