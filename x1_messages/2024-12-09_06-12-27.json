[
    {
        "role": "user",
        "content": "Create a C++ function that takes an integer array as input, sorts it using the bubble sort algorithm, and prints the sorted array.\nPLAINFORMAT"
    },
    {
        "role": "assistant",
        "content": "Sure! Below is a C++ function that takes an integer array as input, sorts it using the bubble sort algorithm, and prints the sorted array.\n\n```cpp\n#include <iostream>\nusing namespace std;\n\nvoid bubbleSortAndPrint(int arr[], int n) {\n    // Bubble sort algorithm\n    for (int i = 0; i < n-1; i++) {\n        for (int j = 0; j < n-i-1; j++) {\n            if (arr[j] > arr[j+1]) {\n                // Swap arr[j] and arr[j+1]\n                int temp = arr[j];\n                arr[j] = arr[j+1];\n                arr[j+1] = temp;\n            }\n        }\n    }\n    \n    // Print the sorted array\n    cout << \"Sorted array: \";\n    for (int i = 0; i < n; i++) {\n        cout << arr[i] << \" \";\n    }\n    cout << endl;\n}\n\nint main() {\n    int arr[] = {64, 34, 25, 12, 22, 11, 90};\n    int n = sizeof(arr)/sizeof(arr[0]);\n    \n    bubbleSortAndPrint(arr, n);\n    \n    return 0;\n}\n```\n\n### Explanation:\n1. **Bubble Sort Algorithm**:\n   - It repeatedly steps through the list, compares adjacent elements and swaps them if they are in the wrong order.\n   - The pass through the list is repeated until the list is sorted.\n\n2. **Function `bubbleSortAndPrint`**:\n   - Takes an integer array `arr` and its size `n` as input.\n   - Implements the bubble sort to sort the array in ascending order.\n   - Prints the sorted array.\n\n3. **Main Function**:\n   - Defines an integer array `arr`.\n   - Calculates the number of elements in the array.\n   - Calls the `bubbleSortAndPrint` function with the array and its size.\n\nThis code will sort the array using bubble sort and print the sorted array."
    }
]