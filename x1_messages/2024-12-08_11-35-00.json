[
    {
        "role": "user",
        "content": "Write a Python script that reads a text file containing multiple lines of text and prints the number of words, sentences, and paragraphs in the file. Assume that sentences are separated by periods, question marks, or exclamation points, and paragraphs are separated by blank lines."
    },
    {
        "role": "assistant",
        "content": "Certainly! To create a Python script that reads a text file and counts the number of words, sentences, and paragraphs, we can follow these steps:\n\n1. **Read the file**: Open and read the contents of the text file.\n2. **Count paragraphs**: Paragraphs are separated by blank lines.\n3. **Count sentences**: Sentences are separated by periods, question marks, or exclamation points.\n4. **Count words**: Words are typically separated by spaces or punctuation.\n\nHere's a script that accomplishes this:\n\n```python\ndef count_paragraphs(text):\n    # Split the text into paragraphs based on blank lines\n    paragraphs = text.split('\\n\\n')\n    # Filter out any empty paragraphs\n    paragraphs = [p for p in paragraphs if p.strip() != '']\n    return len(paragraphs)\n\ndef count_sentences(text):\n    # Split the text into sentences based on '.', '?', '!'\n    sentences = []\n    for sentence in text.split('.'):\n        for part in sentence.split('?'):\n            for subpart in part.split('!'):\n                stripped = subpart.strip()\n                if stripped:\n                    sentences.append(stripped)\n    return len(sentences)\n\ndef count_words(text):\n    # Replace sentence delimiters with spaces to handle them uniformly\n    text = text.replace('.', ' ').replace('?', ' ').replace('!', ' ')\n    # Split the text into words based on spaces\n    words = text.split()\n    return len(words)\n\ndef main():\n    file_path = 'sample.txt'  # Specify the path to your text file\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    \n    num_paragraphs = count_paragraphs(text)\n    num_sentences = count_sentences(text)\n    num_words = count_words(text)\n    \n    print(f\"Number of paragraphs: {num_paragraphs}\")\n    print(f\"Number of sentences: {num_sentences}\")\n    print(f\"Number of words: {num_words}\")\n\nif __name__ == \"__main__\":\n    main()\n```\n\n### Explanation:\n\n1. **Reading the File**:\n   - We open the file using `open(file_path, 'r', encoding='utf-8')` and read its content into the variable `text`.\n\n2. **Counting Paragraphs**:\n   - Paragraphs are separated by blank lines (`\\n\\n`). We split the text based on `\\n\\n` and filter out any empty paragraphs.\n\n3. **Counting Sentences**:\n   - Sentences are separated by periods (`.`), question marks (`?`), or exclamation points (`!`). We split the text by these delimiters and count the non-empty parts.\n\n4. **Counting Words**:\n   - Words are generally separated by spaces. We replace sentence delimiters with spaces to handle them uniformly and then split the text by spaces. The number of resulting tokens is the word count.\n\n### Notes:\n- Ensure that the file path is correctly specified.\n- This script assumes that paragraphs are separated by blank lines and sentences by the standard punctuation marks.\n- It handles basic cases; for more complex text structures, additional processing may be needed.\n\nThis should give you a good starting point for analyzing the structure of text files in Python."
    }
]