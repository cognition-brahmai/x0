[
    {
        "role": "user",
        "content": "Create a Python script that calculates the factorial of a given non-negative integer using recursion. Print the result and the time taken to compute it."
    },
    {
        "role": "assistant",
        "content": "Sure! Here's a Python script that calculates the factorial of a given non-negative integer using recursion and measures the time taken to compute it:\n\n```python\nimport time\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\n# Get the input from the user\nnum = int(input(\"Enter a non-negative integer: \"))\n\n# Check if the input is valid\nif num < 0:\n    print(\"Invalid input! Please enter a non-negative integer.\")\nelse:\n    # Measure the start time\n    start_time = time.time()\n    \n    # Calculate the factorial\n    result = factorial(num)\n    \n    # Measure the end time\n    end_time = time.time()\n    \n    # Calculate the time taken\n    time_taken = end_time - start_time\n    \n    # Print the result and the time taken\n    print(\"Factorial of\", num, \"is\", result)\n    print(\"Time taken:\", time_taken, \"seconds\")\n```\n\nTo use this script, simply run it and enter a non-negative integer when prompted. The script will calculate the factorial using recursion and display the result along with the time taken to compute it.\n\nNote: Recursion can be inefficient for large input values as it may cause a stack overflow. For larger values, consider using an iterative approach or implementing tail recursion optimization."
    }
]