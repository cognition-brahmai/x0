[
    {
        "role": "user",
        "content": "Write a Java program that calculates the factorial of a given non-negative integer using recursion.\nPLAINFORMAT"
    },
    {
        "role": "assistant",
        "content": "Sure! Here's a Java program that calculates the factorial of a given non-negative integer using recursion:\n\n```java\nimport java.util.Scanner;\n\npublic class FactorialRecursion {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.print(\"Enter a non-negative integer: \");\n        int number = scanner.nextInt();\n        if (number < 0) {\n            System.out.println(\"Factorial is not defined for negative numbers.\");\n        } else {\n            long factorial = factorial(number);\n            System.out.println(\"Factorial of \" + number + \" is: \" + factorial);\n        }\n        scanner.close();\n    }\n\n    public static long factorial(int n) {\n        if (n == 0) {\n            return 1;\n        } else {\n            return n * factorial(n - 1);\n        }\n    }\n}\n```\n\n### Explanation:\n\n1. **Input Handling:**\n   - The program starts by importing the `Scanner` class to read input from the user.\n   - It prompts the user to enter a non-negative integer.\n\n2. **Validation:**\n   - If the entered number is negative, it prints a message stating that factorial is not defined for negative numbers.\n   - If the number is non-negative, it proceeds to calculate the factorial using a recursive method.\n\n3. **Recursive Factorial Calculation:**\n   - The `factorial` method is defined to calculate the factorial of a given integer `n`.\n   - **Base Case:** If `n` is 0, the factorial is 1.\n   - **Recursive Case:** Otherwise, it returns `n` multiplied by the factorial of `n - 1`.\n\n4. **Output:**\n   - The calculated factorial is printed to the console.\n\nThis program effectively demonstrates the use of recursion to calculate the factorial of a number in Java."
    }
]