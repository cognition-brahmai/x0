[
    {
        "role": "user",
        "content": "Write a Python program that uses the OpenWeatherMap API to fetch weather information for a given city and displays the current temperature, humidity, and weather description. Handle API errors and invalid city names gracefully."
    },
    {
        "role": "assistant",
        "content": "To create a Python program that fetches weather information using the OpenWeatherMap API, you'll need to follow these steps:\n\n1. **Sign up for an API key**: First, you need to sign up on the [OpenWeatherMap website](https://openweathermap.org/) to get an API key.\n\n2. **Install required libraries**: You'll need the `requests` library to make HTTP requests. If you don't have it installed, you can install it using pip:\n\n   ```bash\n   pip install requests\n   ```\n\n3. **Write the Python code**: Create a script that takes a city name as input, makes a request to the OpenWeatherMap API, and handles the response to display the required information.\n\nHere's a sample Python program that accomplishes this:\n\n```python\nimport requests\n\ndef get_weather(city_name, api_key):\n    base_url = \"http://api.openweathermap.org/data/2.5/weather\"\n    params = {\n        'q': city_name,\n        'appid': api_key,\n        'units': 'metric'  # Use 'imperial' for Fahrenheit\n    }\n    response = requests.get(base_url, params=params)\n    \n    if response.status_code == 200:\n        data = response.json()\n        main = data['main']\n        weather = data['weather'][0]\n        print(f\"City: {city_name}\")\n        print(f\"Temperature: {main['temp']}\u00b0C\")\n        print(f\"Humidity: {main['humidity']}%\")\n        print(f\"Weather Description: {weather['description']}\")\n    elif response.status_code == 404:\n        print(\"City not found. Please check the city name.\")\n    else:\n        print(f\"Error: {response.status_code} - {response.text}\")\n\nif __name__ == \"__main__\":\n    api_key = 'YOUR_API_KEY'  # Replace with your actual API key\n    city_name = input(\"Enter city name: \")\n    get_weather(city_name, api_key)\n```\n\n### Explanation:\n\n1. **API Key**: Replace `'YOUR_API_KEY'` with the actual API key you obtained from OpenWeatherMap.\n\n2. **Base URL and Parameters**:\n   - The base URL for the OpenWeatherMap current weather data is used.\n   - Parameters include the city name, API key, and units (metric for Celsius).\n\n3. **Making the Request**:\n   - Use the `requests.get` method to make a GET request to the API with the specified parameters.\n\n4. **Handling the Response**:\n   - If the status code is 200, parse the JSON response to extract and print the temperature, humidity, and weather description.\n   - If the status code is 404, inform the user that the city was not found.\n   - For other status codes, print the error message from the API.\n\n5. **User Input**:\n   - The program prompts the user to enter a city name and then calls the `get_weather` function with the provided city name and API key.\n\nThis program ensures that API errors and invalid city names are handled gracefully, providing useful feedback to the user."
    }
]