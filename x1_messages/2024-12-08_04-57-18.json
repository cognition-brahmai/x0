[
    {
        "role": "user",
        "content": "Write a Python script that connects to a PostgreSQL database, creates a table called \"employees\" with columns for name, age, and department, and inserts sample data into the table. The script should also include a function to query all employees from a specific department."
    },
    {
        "role": "assistant",
        "content": "Certainly! Below is a Python script that accomplishes the tasks you've described. This script uses the `psycopg2` library to connect to a PostgreSQL database, creates a table named \"employees,\" inserts sample data, and includes a function to query employees from a specific department.\n\nFirst, make sure to install the `psycopg2` library if you haven't already. You can install it using pip:\n\n```bash\npip install psycopg2\n```\n\nHere's the complete script:\n\n```python\nimport psycopg2\nfrom psycopg2 import sql\n\n# Function to create the employees table\ndef create_employees_table(cursor):\n    cursor.execute(\"\"\"\n        CREATE TABLE IF NOT EXISTS employees (\n            id SERIAL PRIMARY KEY,\n            name VARCHAR(100),\n            age INTEGER,\n            department VARCHAR(100)\n        )\n    \"\"\")\n\n# Function to insert sample data into the employees table\ndef insert_sample_data(cursor):\n    sample_data = [\n        ('Alice', 30, 'HR'),\n        ('Bob', 25, 'Engineering'),\n        ('Charlie', 35, 'Marketing'),\n        ('David', 28, 'Engineering'),\n        ('Eve', 22, 'HR')\n    ]\n    insert_query = \"\"\"\n        INSERT INTO employees (name, age, department)\n        VALUES (%s, %s, %s)\n    \"\"\"\n    cursor.executemany(insert_query, sample_data)\n\n# Function to query all employees from a specific department\ndef get_employees_by_department(cursor, department):\n    query = \"\"\"\n        SELECT * FROM employees\n        WHERE department = %s\n    \"\"\"\n    cursor.execute(query, (department,))\n    return cursor.fetchall()\n\n# Main function to demonstrate the above functions\ndef main():\n    # Connect to your postgres DB\n    # Replace these values with your own database credentials\n    conn = psycopg2.connect(\n        dbname=\"your_dbname\",\n        user=\"your_username\",\n        password=\"your_password\",\n        host=\"your_host\",\n        port=\"your_port\"\n    )\n    \n    # Open a cursor to perform database operations\n    cur = conn.cursor()\n    \n    # Create the employees table\n    create_employees_table(cur)\n    \n    # Insert sample data\n    insert_sample_data(cur)\n    \n    # Commit the changes\n    conn.commit()\n    \n    # Query employees from a specific department\n    department = 'Engineering'\n    employees = get_employees_by_department(cur, department)\n    print(f\"Employees in {department}:\")\n    for emp in employees:\n        print(emp)\n    \n    # Close communication with the database\n    cur.close()\n    conn.close()\n\nif __name__ == \"__main__\":\n    main()\n```\n\n### Explanation:\n\n1. **Database Connection**: Adjust the connection parameters (`dbname`, `user`, `password`, `host`, `port`) to match your PostgreSQL database configuration.\n\n2. **Table Creation**: The `create_employees_table` function ensures that the \"employees\" table exists with columns for name, age, and department.\n\n3. **Inserting Data**: The `insert_sample_data` function inserts a set of sample employees into the table.\n\n4. **Query Function**: The `get_employees_by_department` function retrieves all employees from a specified department.\n\n5. **Main Function**: Demonstrates creating the table, inserting data, and querying employees from the 'Engineering' department.\n\nThis script provides a basic framework for interacting with a PostgreSQL database using Python. You can expand upon this by adding more functions or modifying existing ones to suit your needs."
    }
]