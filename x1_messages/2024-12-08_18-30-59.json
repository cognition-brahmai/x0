[
    {
        "role": "user",
        "content": "Implement a Python script that takes two command-line arguments, a source directory and a destination directory, then compresses all files within the source directory into a single ZIP archive and saves it in the destination directory. If the destination directory does not exist, create it."
    },
    {
        "role": "assistant",
        "content": "To implement this script, you can use the `zipfile` and `os` modules in Python. Here's a step-by-step guide on how to do it:\n\n1. **Import necessary modules**:\n   - `zipfile` for creating and manipulating ZIP archives.\n   - `os` for interacting with the operating system, such as checking directories and listing files.\n   - `sys` for accessing command-line arguments.\n\n2. **Check and validate command-line arguments**:\n   - Ensure that exactly two arguments are provided: source directory and destination directory.\n   - Verify that the source directory exists.\n\n3. **Create the destination directory if it doesn't exist**:\n   - Use `os.makedirs()` to create the destination directory recursively.\n\n4. **Compress files in the source directory**:\n   - List all files in the source directory.\n   - Create a ZIP archive and add each file to it.\n\n5. **Save the ZIP archive in the destination directory**.\n\nHere's a sample implementation of the script:\n\n```python\nimport os\nimport sys\nimport zipfile\n\ndef main():\n    if len(sys.argv) != 3:\n        print(\"Usage: python script.py <source_directory> <destination_directory>\")\n        sys.exit(1)\n    \n    source_dir = sys.argv[1]\n    dest_dir = sys.argv[2]\n    \n    if not os.path.exists(source_dir):\n        print(f\"Error: Source directory {source_dir} does not exist.\")\n        sys.exit(1)\n    \n    if not os.path.exists(dest_dir):\n        os.makedirs(dest_dir)\n        print(f\"Created destination directory: {dest_dir}\")\n    \n    zip_filename = os.path.join(dest_dir, 'compressed_files.zip')\n    with zipfile.ZipFile(zip_filename, 'w') as zipf:\n        for root, dirs, files in os.walk(source_dir):\n            for file in files:\n                file_path = os.path.join(root, file)\n                arcname = os.path.relpath(file_path, source_dir)\n                zipf.write(file_path, arcname)\n    \n    print(f\"Successfully compressed files from {source_dir} to {zip_filename}\")\n\nif __name__ == \"__main__\":\n    main()\n```\n\n### Explanation:\n\n1. **Command-Line Arguments**:\n   - The script expects two arguments: source directory and destination directory.\n   - It checks if exactly two arguments are provided and exits with an error message if not.\n\n2. **Directory Checks**:\n   - It verifies if the source directory exists.\n   - If the destination directory does not exist, it creates it using `os.makedirs()`.\n\n3. **Creating the ZIP Archive**:\n   - It constructs the path for the ZIP file in the destination directory.\n   - It uses `zipfile.ZipFile` to create a new ZIP archive in write mode.\n   - It walks through the source directory using `os.walk()`, adds each file to the ZIP archive, and uses `os.path.relpath()` to maintain the directory structure relative to the source directory.\n\n4. **Completion Message**:\n   - After compressing all files, it prints a success message indicating the source and destination paths."
    }
]