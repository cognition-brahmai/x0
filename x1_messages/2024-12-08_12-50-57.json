[
    {
        "role": "user",
        "content": "Develop a command-line Python program that accepts a user's date of birth as input and calculates their age in years, months, and days. Ensure proper validation of the input date format."
    },
    {
        "role": "assistant",
        "content": "Certainly! I can help you develop a command-line Python program that calculates a user's age in years, months, and days based on their date of birth. We'll need to handle date inputs, perform date calculations, and ensure that the input date is valid.\n\n### Approach\n\n1. **Input Handling**: Prompt the user to enter their date of birth in a specific format (e.g., YYYY-MM-DD).\n2. **Validation**: Check if the input date is in the correct format and is a valid date.\n3. **Date Calculation**: Calculate the difference between the current date and the birth date to determine the age in years, months, and days.\n\n### Solution Code\n\n```python\nfrom datetime import datetime\n\ndef get_age(birth_date):\n    today = datetime.today()\n    years = today.year - birth_date.year\n    months = today.month - birth_date.month\n    days = today.day - birth_date.day\n\n    if days < 0:\n        months -= 1\n        days += 30  # Approximate to 30 days for simplicity\n\n    if months < 0:\n        years -= 1\n        months += 12\n\n    return years, months, days\n\ndef main():\n    date_format = \"%Y-%m-%d\"\n    birth_date_input = input(\"Please enter your date of birth (YYYY-MM-DD): \")\n\n    try:\n        birth_date = datetime.strptime(birth_date_input, date_format)\n        years, months, days = get_age(birth_date)\n        print(f\"You are {years} years, {months} months, and {days} days old.\")\n    except ValueError:\n        print(\"Invalid date format. Please use YYYY-MM-DD.\")\n\nif __name__ == \"__main__\":\n    main()\n```\n\n### Explanation\n\n1. **Input Handling**:\n   - The program prompts the user to enter their date of birth in the format YYYY-MM-DD.\n\n2. **Validation**:\n   - The `strptime` function from the `datetime` module is used to parse the input string according to the specified format.\n   - If the input does not match the format or is not a valid date, a `ValueError` is caught, and an error message is displayed.\n\n3. **Date Calculation**:\n   - The current date is obtained using `datetime.today()`.\n   - The difference in years, months, and days is calculated by subtracting the birth date from the current date.\n   - Adjustments are made for negative days and months by borrowing from higher units (e.g., if days are negative, subtract a month and add approximately 30 days).\n\nThis program provides a simple and effective way to calculate a user's age in years, months, and days, with input validation to ensure correctness."
    }
]