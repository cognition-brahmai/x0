[
    {
        "role": "user",
        "content": "Develop a Python script that connects to a Cassandra database, creates a table called \"users\" with columns: id (UUID), name (text), age (int), email (text), and inserts 5 sample records into it.\nPLAINFORMAT"
    },
    {
        "role": "assistant",
        "content": "Alright, I'll guide you through creating a Python script that connects to a Cassandra database, creates a table named \"users\", and inserts five sample records into it. Make sure you have Cassandra and the `cassandra-driver` package installed before proceeding.\n\n### Step 1: Install the Cassandra Driver\n\nIf you haven't already installed the Cassandra driver for Python, you can do so using pip:\n\n```bash\npip install cassandra-driver\n```\n\n### Step 2: Import Necessary Modules\n\nIn your Python script, import the required modules:\n\n```python\nfrom cassandra.cluster import Cluster\nfrom cassandra.query import SimpleStatement\nfrom uuid import uuid4\n```\n\n### Step 3: Connect to the Cassandra Cluster\n\nYou need to connect to your Cassandra cluster. If your Cassandra instance is running locally, you can connect like this:\n\n```python\ncluster = Cluster(['127.0.0.1'])\nsession = cluster.connect()\n```\n\n### Step 4: Create a Keyspace (if not already exists)\n\nBefore creating a table, ensure that a keyspace exists. If not, create one:\n\n```python\ncreate_keyspace_query = \"\"\"\n    CREATE KEYSPACE IF NOT EXISTS mykeyspace \n    WITH replication = { 'class': 'SimpleStrategy', 'replication_factor': '1' }\n\"\"\"\n\nsession.execute(create_keyspace_query)\n```\n\n### Step 5: Set the Keyspace for the Session\n\nSet the keyspace you just created for your session:\n\n```python\nsession.set_keyspace('mykeyspace')\n```\n\n### Step 6: Create the \"users\" Table\n\nDefine and execute the query to create the \"users\" table:\n\n```python\ncreate_table_query = \"\"\"\n    CREATE TABLE IF NOT EXISTS users (\n        id UUID PRIMARY KEY,\n        name TEXT,\n        age INT,\n        email TEXT\n    )\n\"\"\"\n\nsession.execute(create_table_query)\n```\n\n### Step 7: Insert Sample Records\n\nPrepare and execute insert statements for five sample records:\n\n```python\ninsert_query = \"\"\"\n    INSERT INTO users (id, name, age, email)\n    VALUES (%s, %s, %s, %s)\n\"\"\"\n\nsample_data = [\n    (uuid4(), 'Alice', 30, 'alice@example.com'),\n    (uuid4(), 'Bob', 25, 'bob@example.com'),\n    (uuid4(), 'Charlie', 35, 'charlie@example.com'),\n    (uuid4(), 'David', 28, 'david@example.com'),\n    (uuid4(), 'Eve', 32, 'eve@example.com')\n]\n\nfor data in sample_data:\n    session.execute(insert_query, data)\n```\n\n### Step 8: Close the Connection\n\nFinally, close the connection to the Cassandra cluster:\n\n```python\ncluster.shutdown()\n```\n\n### Complete Script\n\nHere's the complete Python script:\n\n```python\nfrom cassandra.cluster import Cluster\nfrom cassandra.query import SimpleStatement\nfrom uuid import uuid4\n\n# Connect to the Cassandra cluster\ncluster = Cluster(['127.0.0.1'])\nsession = cluster.connect()\n\n# Create keyspace if not exists\ncreate_keyspace_query = \"\"\"\n    CREATE KEYSPACE IF NOT EXISTS mykeyspace \n    WITH replication = { 'class': 'SimpleStrategy', 'replication_factor': '1' }\n\"\"\"\nsession.execute(create_keyspace_query)\n\n# Set the keyspace for the session\nsession.set_keyspace('mykeyspace')\n\n# Create the users table if not exists\ncreate_table_query = \"\"\"\n    CREATE TABLE IF NOT EXISTS users (\n        id UUID PRIMARY KEY,\n        name TEXT,\n        age INT,\n        email TEXT\n    )\n\"\"\"\nsession.execute(create_table_query)\n\n# Sample data to insert\ninsert_query = \"\"\"\n    INSERT INTO users (id, name, age, email)\n    VALUES (%s, %s, %s, %s)\n\"\"\"\n\nsample_data = [\n    (uuid4(), 'Alice', 30, 'alice@example.com'),\n    (uuid4(), 'Bob', 25, 'bob@example.com'),\n    (uuid4(), 'Charlie', 35, 'charlie@example.com'),\n    (uuid4(), 'David', 28, 'david@example.com'),\n    (uuid4(), 'Eve', 32, 'eve@example.com')\n]\n\n# Insert sample data\nfor data in sample_data:\n    session.execute(insert_query, data)\n\n# Close the connection\ncluster.shutdown()\n```\n\nThis script will connect to your local Cassandra instance, create a keyspace named `mykeyspace`, create a table named `users` within that keyspace, and insert five sample records into the table."
    }
]