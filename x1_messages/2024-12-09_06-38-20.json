[
    {
        "role": "user",
        "content": "Create a PowerShell script that automates the process of creating a backup of a directory. The script should compress the directory into a .zip file and move it to a backup location. Both the source directory and the backup location should be provided as parameters to the script."
    },
    {
        "role": "assistant",
        "content": "Certainly! Below is a PowerShell script that automates the process of creating a backup of a directory by compressing it into a .zip file and moving it to a specified backup location. The script takes two parameters: the source directory and the backup location.\n\n```powershell\nparam (\n    [Parameter(Mandatory=$true)]\n    [string]$sourceDirectory,\n    \n    [Parameter(Mandatory=$true)]\n    [string]$backupLocation\n)\n\nfunction Compress-Directory {\n    param (\n        [string]$src,\n        [string]$dest\n    )\n    \n    if (-Not (Test-Path $src -PathType Container)) {\n        Write-Error \"Source directory does not exist.\"\n        return\n    }\n    \n    if (-Not (Test-Path $dest -PathType Container)) {\n        Write-Error \"Backup location does not exist.\"\n        return\n    }\n    \n    $zipFileName = Join-Path -Path $dest -ChildPath \"$(Split-Path -Path $src -Leaf)_$(Get-Date -Format 'yyyyMMddHHmmss').zip\"\n    \n    Add-Type -Assembly System.IO.Compression.FileSystem\n    [System.IO.Compression.ZipFile]::CreateFromDirectory($src, $zipFileName)\n    \n    Write-Output \"Backup created successfully at $zipFileName\"\n}\n\nCompress-Directory -src $sourceDirectory -dest $backupLocation\n```\n\n### Explanation:\n\n1. **Parameters**:\n   - `sourceDirectory`: The directory to be backed up.\n   - `backupLocation`: The location where the backup (.zip file) will be stored.\n\n2. **Function `Compress-Directory`**:\n   - **Parameters**:\n     - `src`: Source directory path.\n     - `dest`: Destination backup location path.\n   - **Checks**:\n     - Ensures the source directory exists.\n     - Ensures the backup location exists.\n   - **Zip File Name**:\n     - Constructs the zip file name using the source directory name and current timestamp.\n   - **Compression**:\n     - Uses `System.IO.Compression.ZipFile` to create a zip archive of the source directory.\n   - **Output**:\n     - Displays the path of the created backup file.\n\n3. **Execution**:\n   - Calls the `Compress-Directory` function with the provided source and backup locations.\n\n### Usage:\n\nTo run this script, save it to a `.ps1` file, for example, `Backup-Directory.ps1`. Then, execute it from the PowerShell command line, providing the source directory and backup location as arguments:\n\n```powershell\n.\\Backup-Directory.ps1 -sourceDirectory \"C:\\path\\to\\source\" -backupLocation \"D:\\path\\to\\backup\"\n```\n\nMake sure to adjust the paths according to your requirements. Also, ensure that you have the necessary permissions to read from the source directory and write to the backup location."
    }
]