[
    {
        "role": "user",
        "content": "Design a TypeScript class representing a \"Product\" with properties such as name, price, and description. Implement methods to calculate discounts based on quantity purchased and display product information in a formatted manner."
    },
    {
        "role": "assistant",
        "content": "Sure! I can help you design a TypeScript class for a \"Product\" with the specified properties and methods. Let's break down what we need:\n\n1. **Properties**:\n   - `name`: The name of the product.\n   - `price`: The price of a single unit of the product.\n   - `description`: A brief description of the product.\n\n2. **Methods**:\n   - `calculateDiscount(quantity: number, discountRate: number)`: This method should calculate the total price after applying a discount based on the quantity purchased and a given discount rate.\n   - `displayInfo()`: This method should return a formatted string that displays the product's name, price, and description.\n\nAdditionally, we might want to ensure that the price and discount rate are non-negative and that the quantity is a positive integer.\n\nLet's start by defining the class structure.\n\n## Final Solution\nTo solve this problem, we need to create a TypeScript class named `Product` with properties for name, price, and description. We also need to implement methods to calculate discounts based on the quantity purchased and to display product information in a formatted manner.\n\n### Approach\n\n1. **Class Properties:**\n   - `name`: string\n   - `price`: number\n   - `description`: string\n\n2. **Methods:**\n   - `calculateDiscount(quantity: number, discountRate: number)`: This method calculates the total price after applying a discount based on the quantity and discount rate.\n   - `displayInfo()`: This method returns a formatted string containing the product's name, price, and description.\n\n3. **Validations:**\n   - Ensure that the price is non-negative.\n   - Ensure that the quantity is a positive integer.\n   - Ensure that the discount rate is non-negative and does not exceed 100%.\n\n### Solution Code\n\n```typescript\nclass Product {\n    name: string;\n    price: number;\n    description: string;\n\n    constructor(name: string, price: number, description: string) {\n        if (price < 0) {\n            throw new Error(\"Price cannot be negative.\");\n        }\n        this.name = name;\n        this.price = price;\n        this.description = description;\n    }\n\n    calculateDiscount(quantity: number, discountRate: number): number {\n        if (quantity <= 0 || !Number.isInteger(quantity)) {\n            throw new Error(\"Quantity must be a positive integer.\");\n        }\n        if (discountRate < 0 || discountRate > 100) {\n            throw new Error(\"Discount rate must be between 0 and 100.\");\n        }\n\n        const totalBeforeDiscount = this.price * quantity;\n        const discountAmount = (discountRate / 100) * totalBeforeDiscount;\n        const totalAfterDiscount = totalBeforeDiscount - discountAmount;\n        return totalAfterDiscount;\n    }\n\n    displayInfo(): string {\n        return `Name: ${this.name}\\nPrice: \\$${this.price}\\nDescription: ${this.description}`;\n    }\n}\n\n// Example usage:\nconst product = new Product(\"Laptop\", 1200.0, \"A high-performance laptop for gaming and programming.\");\nconsole.log(product.displayInfo());\nconsole.log(`Total after discount: \\$${product.calculateDiscount(2, 10)}`);\n```\n\n### Explanation\n\n- **Constructor:** Initializes the product with name, price, and description. It throws an error if the price is negative.\n- **calculateDiscount:** Calculates the total price after applying a discount based on the quantity and discount rate. It validates that the quantity is a positive integer and the discount rate is between 0 and 100.\n- **displayInfo:** Returns a formatted string that displays the product's name, price, and description.\n\nThis class provides a robust way to handle product information and discount calculations in a TypeScript environment."
    }
]