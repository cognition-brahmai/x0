[
    {
        "role": "user",
        "content": "Write SQL queries to perform the following tasks on a database containing tables for \"Employees\", \"Departments\", and \"Salaries\":\n- Find the average salary for each department.\n- List employees who earn more than the average salary in their respective departments.\n- Count the number of employees in each department.\n- Identify the department with the highest total payroll."
    },
    {
        "role": "assistant",
        "content": "Sure! To perform these tasks, we'll assume the following schema for the tables:\n\n- **Employees** table:\n  - employee_id (primary key)\n  - name\n  - department_id (foreign key referencing Departments)\n\n- **Departments** table:\n  - department_id (primary key)\n  - department_name\n\n- **Salaries** table:\n  - salary_id (primary key)\n  - employee_id (foreign key referencing Employees)\n  - amount\n\n### 1. Find the average salary for each department.\n\nTo find the average salary for each department, we need to join the `Employees` and `Salaries` tables on `employee_id`, and then group the results by `department_id`. We can also join with the `Departments` table to get the department names.\n\n```sql\nSELECT d.department_name, AVG(s.amount) AS average_salary\nFROM Departments d\nJOIN Employees e ON d.department_id = e.department_id\nJOIN Salaries s ON e.employee_id = s.employee_id\nGROUP BY d.department_name;\n```\n\n### 2. List employees who earn more than the average salary in their respective departments.\n\nFirst, we need to calculate the average salary for each department, and then select employees whose salary is greater than this average for their department.\n\nWe can achieve this by using a subquery to calculate the average salary per department and then joining this result back to the employees.\n\n```sql\nSELECT e.name, d.department_name, s.amount\nFROM Employees e\nJOIN Departments d ON e.department_id = d.department_id\nJOIN Salaries s ON e.employee_id = s.employee_id\nWHERE s.amount > (\n    SELECT AVG(s2.amount)\n    FROM Salaries s2\n    JOIN Employees e2 ON s2.employee_id = e2.employee_id\n    WHERE e2.department_id = e.department_id\n);\n```\n\nAlternatively, we can use a window function to calculate the average salary per department and then filter employees based on that.\n\n```sql\nSELECT name, department_name, amount\nFROM (\n    SELECT e.name, d.department_name, s.amount,\n           AVG(s.amount) OVER (PARTITION BY d.department_id) AS avg_dept_salary\n    FROM Employees e\n    JOIN Departments d ON e.department_id = d.department_id\n    JOIN Salaries s ON e.employee_id = s.employee_id\n) sub\nWHERE amount > avg_dept_salary;\n```\n\n### 3. Count the number of employees in each department.\n\nTo count the number of employees in each department, we can join the `Employees` and `Departments` tables and group by `department_id`.\n\n```sql\nSELECT d.department_name, COUNT(e.employee_id) AS employee_count\nFROM Departments d\nLEFT JOIN Employees e ON d.department_id = e.department_id\nGROUP BY d.department_name;\n```\n\nUsing a LEFT JOIN ensures that departments with no employees are also included in the result with a count of zero.\n\n### 4. Identify the department with the highest total payroll.\n\nTo find the department with the highest total payroll, we need to sum the salaries for each department and then identify the department with the maximum total.\n\nWe can achieve this by first calculating the total payroll per department and then selecting the department with the highest total.\n\n```sql\nSELECT department_name, total_payroll\nFROM (\n    SELECT d.department_name, SUM(s.amount) AS total_payroll\n    FROM Departments d\n    JOIN Employees e ON d.department_id = e.department_id\n    JOIN Salaries s ON e.employee_id = s.employee_id\n    GROUP BY d.department_name\n    ORDER BY total_payroll DESC\n    LIMIT 1\n) sub;\n```\n\nThis subquery calculates the total payroll for each department, orders them in descending order, and limits the result to the top department.\n\nAlternatively, we can use the `RANK()` window function to rank departments by total payroll and select the top one.\n\n```sql\nSELECT department_name, total_payroll\nFROM (\n    SELECT d.department_name, SUM(s.amount) AS total_payroll,\n           RANK() OVER (ORDER BY SUM(s.amount) DESC) AS rn\n    FROM Departments d\n    JOIN Employees e ON d.department_id = e.department_id\n    JOIN Salaries s ON e.employee_id = s.employee_id\n    GROUP BY d.department_name\n) sub\nWHERE rn = 1;\n```\n\nThis approach can be useful if there might be ties for the highest total payroll."
    }
]