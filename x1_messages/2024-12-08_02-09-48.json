[
    {
        "role": "user",
        "content": "Create a PHP script that connects to a MySQL database and performs basic CRUD operations (Create, Read, Update, Delete) on a \"products\" table. The table should have fields for product ID, name, description, price, and quantity. Use prepared statements to prevent SQL injection attacks.\nPLAINFORMAT"
    },
    {
        "role": "assistant",
        "content": "Alright, I'll guide you through creating a PHP script that connects to a MySQL database and performs CRUD operations on a \"products\" table. We'll ensure to use prepared statements to prevent SQL injection attacks.\n\n### Step 1: Set Up the Database\n\nFirst, make sure you have a MySQL database set up. You'll need to create a database and a \"products\" table. Here's an example SQL query to create the table:\n\n```sql\nCREATE DATABASE IF NOT EXISTS mystore;\nUSE mystore;\n\nCREATE TABLE IF NOT EXISTS products (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    description TEXT,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL\n);\n```\n\n### Step 2: Create the Database Connection\n\nCreate a PHP file, say `db_connect.php`, to handle the database connection.\n\n```php\n<?php\n$host = 'localhost';\n$db   = 'mystore';\n$user = 'your_username';\n$pass = 'your_password';\n$charset = 'utf8mb4';\n\n$dsn = \"mysql:host=$host;dbname=$db;charset=$charset\";\n$options = [\n    PDO::ATTR_ERRMODE            => PDO::ERRMODE_EXCEPTION,\n    PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC,\n    PDO::ATTR_EMULATE_PREPARES   => false,\n];\ntry {\n     $pdo = new PDO($dsn, $user, $pass, $options);\n} catch (\\PDOException $e) {\n     throw new \\PDOException($e->getMessage(), (int)$e->getCode());\n}\n?>\n```\n\nReplace `'your_username'` and `'your_password'` with your actual database credentials.\n\n### Step 3: Create Operations\n\nCreate a script to insert a new product into the database.\n\n```php\n<?php\ninclude 'db_connect.php';\n\n$name = 'Sample Product';\n$description = 'This is a sample product.';\n$price = 19.99;\n$quantity = 10;\n\n$stmt = $pdo->prepare(\"INSERT INTO products (name, description, price, quantity) VALUES (?, ?, ?, ?)\");\n$stmt->execute([$name, $description, $price, $quantity]);\n\necho \"Product inserted successfully.\";\n?>\n```\n\n### Step 4: Read Operations\n\nRetrieve and display all products from the database.\n\n```php\n<?php\ninclude 'db_connect.php';\n\n$stmt = $pdo->query(\"SELECT * FROM products\");\n$products = $stmt->fetchAll();\n\nforeach ($products as $product) {\n    echo \"ID: \" . $product['id'] . \"<br>\";\n    echo \"Name: \" . $product['name'] . \"<br>\";\n    echo \"Description: \" . $product['description'] . \"<br>\";\n    echo \"Price: $\" . number_format($product['price'], 2) . \"<br>\";\n    echo \"Quantity: \" . $product['quantity'] . \"<br><hr>\";\n}\n?>\n```\n\n### Step 5: Update Operations\n\nUpdate a product's details based on its ID.\n\n```php\n<?php\ninclude 'db_connect.php';\n\n$id = 1;\n$newName = 'Updated Product Name';\n$newDescription = 'Updated description.';\n$newPrice = 29.99;\n$newQuantity = 15;\n\n$stmt = $pdo->prepare(\"UPDATE products SET name=?, description=?, price=?, quantity=? WHERE id=?\");\n$stmt->execute([$newName, $newDescription, $newPrice, $newQuantity, $id]);\n\necho \"Product updated successfully.\";\n?>\n```\n\n### Step 6: Delete Operations\n\nDelete a product from the database based on its ID.\n\n```php\n<?php\ninclude 'db_connect.php';\n\n$id = 1;\n\n$stmt = $pdo->prepare(\"DELETE FROM products WHERE id=?\");\n$stmt->execute([$id]);\n\necho \"Product deleted successfully.\";\n?>\n```\n\n### Summary\n\n- **Create**: Insert a new product.\n- **Read**: Retrieve and display all products.\n- **Update**: Modify an existing product's details.\n- **Delete**: Remove a product from the database.\n\nEach operation uses prepared statements to prevent SQL injection, ensuring your database is secure.\n\nThis should give you a solid foundation for performing basic CRUD operations in PHP with MySQL. If you have any questions or need further assistance, feel free to ask!"
    }
]