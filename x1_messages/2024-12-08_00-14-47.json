[
    {
        "role": "user",
        "content": "Create a C++ function that takes an integer array as input, sorts it using the bubble sort algorithm, and prints the sorted array."
    },
    {
        "role": "assistant",
        "content": "Sure, I can help you with that! Let's create a C++ function that sorts an integer array using the bubble sort algorithm and then prints the sorted array.\n\nFirst, I'll explain briefly how bubble sort works. Bubble sort is a simple sorting algorithm that repeatedly steps through the list, compares adjacent elements, and swaps them if they are in the wrong order. The pass through the list is repeated until the list is sorted.\n\nNow, let's proceed to write the code.\n\n## Final Solution\nTo create a C++ function that sorts an integer array using the bubble sort algorithm and prints the sorted array, you can follow the steps below:\n\n1. **Include necessary headers**: We need to include headers for input/output operations and string manipulation.\n2. **Define the bubble sort function**: This function will implement the bubble sort algorithm to sort the array.\n3. **Define a function to print the array**: This function will iterate through the array and print each element.\n4. **Implement the main function**: This is where we define the array, call the sorting function, and then print the sorted array.\n\nHere is the complete code:\n\n```cpp\n#include <iostream>\nusing namespace std;\n\n// Function to perform bubble sort on the array\nvoid bubbleSort(int arr[], int n) {\n    for(int i = 0; i < n-1; i++) {\n        for(int j = 0; j < n-i-1; j++) {\n            if(arr[j] > arr[j+1]) {\n                // Swap arr[j] and arr[j+1]\n                int temp = arr[j];\n                arr[j] = arr[j+1];\n                arr[j+1] = temp;\n            }\n        }\n    }\n}\n\n// Function to print the array\nvoid printArray(int arr[], int size) {\n    for(int i = 0; i < size; i++) {\n        cout << arr[i] << \" \";\n    }\n    cout << endl;\n}\n\nint main() {\n    int data[] = {64, 34, 25, 12, 22, 11, 90};\n    int n = sizeof(data)/sizeof(data[0]);\n    \n    cout << \"Original array: \\n\";\n    printArray(data, n);\n    \n    bubbleSort(data, n);\n    \n    cout << \"Sorted array: \\n\";\n    printArray(data, n);\n    \n    return 0;\n}\n```\n\n### Explanation\n\n1. **bubbleSort function**:\n    - This function takes an array and its size as input.\n    - It uses a nested loop to iterate through the array and compare adjacent elements.\n    - If the elements are in the wrong order, it swaps them.\n    - This process repeats until the array is sorted.\n\n2. **printArray function**:\n    - This function takes an array and its size as input.\n    - It iterates through the array and prints each element.\n\n3. **main function**:\n    - Defines an integer array `data`.\n    - Calculates the number of elements in the array.\n    - Prints the original array.\n    - Calls `bubbleSort` to sort the array.\n    - Prints the sorted array.\n\nThis code will sort the array using bubble sort and display both the original and sorted arrays."
    }
]