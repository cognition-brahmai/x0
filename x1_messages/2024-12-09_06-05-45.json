[
    {
        "role": "user",
        "content": "Write a Python script that connects to a MySQL database, creates a table named \"employees\" with columns id, name, age, and salary, and inserts 10 sample records into the table. Then, write a function to retrieve all employees with a salary greater than a specified amount.\nPLAINFORMAT"
    },
    {
        "role": "assistant",
        "content": "Okay, I'll help you with that. First, you need to make sure you have the MySQL connector for Python installed. You can install it using pip if you haven't already:\n\n```bash\npip install mysql-connector-python\n```\n\nOnce you have that, you can proceed to write the Python script. Here's a step-by-step guide:\n\n1. **Connect to the MySQL database:**\n   You need to provide the host, database name, user, and password to connect to your MySQL server.\n\n2. **Create the \"employees\" table:**\n   Define the SQL query to create the table with the specified columns.\n\n3. **Insert 10 sample records:**\n   Prepare the SQL query to insert data into the \"employees\" table.\n\n4. **Write a function to retrieve employees with a salary greater than a specified amount:**\n   This function should take a salary amount as input and return all employees who earn more than that amount.\n\nHere's a sample script that accomplishes these tasks:\n\n```python\nimport mysql.connector\nfrom mysql.connector import Error\n\ndef create_connection():\n    connection = None\n    try:\n        connection = mysql.connector.connect(\n            host='your_host',\n            database='your_database',\n            user='your_user',\n            password='your_password'\n        )\n        print(\"Connection to MySQL DB successful\")\n    except Error as e:\n        print(f\"The error '{e}' occurred\")\n    return connection\n\ndef execute_query(connection, query):\n    cursor = connection.cursor()\n    try:\n        cursor.execute(query)\n        connection.commit()\n        print(\"Query executed successfully\")\n    except Error as e:\n        print(f\"The error '{e}' occurred\")\n\ndef insert_into_table(connection, query, val):\n    cursor = connection.cursor()\n    try:\n        cursor.executemany(query, val)\n        connection.commit()\n        print(\"Records inserted successfully\")\n    except Error as e:\n        print(f\"The error '{e}' occurred\")\n\ndef select_from_table(connection, query):\n    cursor = connection.cursor()\n    try:\n        cursor.execute(query)\n        result = cursor.fetchall()\n        return result\n    except Error as e:\n        print(f\"The error '{e}' occurred\")\n\ndef main():\n    connection = create_connection()\n\n    if connection is not None:\n        # Create employees table\n        create_table_query = \"\"\"\n        CREATE TABLE IF NOT EXISTS employees (\n          id INT AUTO_INCREMENT PRIMARY KEY,\n          name VARCHAR(255) NOT NULL,\n          age INT,\n          salary FLOAT\n        );\n        \"\"\"\n        execute_query(connection, create_table_query)\n\n        # Sample records\n        sample_records = [\n            ('John Doe', 30, 50000),\n            ('Jane Smith', 25, 45000),\n            ('Alice Johnson', 35, 60000),\n            ('Bob Brown', 40, 70000),\n            ('Charlie Davis', 28, 48000),\n            ('David Miller', 32, 55000),\n            ('Eva Wilson', 29, 51000),\n            ('Frank Moore', 45, 80000),\n            ('Grace Lee', 31, 58000),\n            ('Heidi Kim', 27, 49000)\n        ]\n\n        # Insert sample records\n        insert_query = \"\"\"\n        INSERT INTO employees (name, age, salary) VALUES (%s, %s, %s);\n        \"\"\"\n        insert_into_table(connection, insert_query, sample_records)\n\n        # Function to retrieve employees with salary greater than a specified amount\n        def get_employees_above_salary(amount):\n            select_query = f\"\"\"\n            SELECT * FROM employees WHERE salary > {amount};\n            \"\"\"\n            results = select_from_table(connection, select_query)\n            for row in results:\n                print(row)\n\n        # Example usage\n        print(\"Employees with salary greater than 50000:\")\n        get_employees_above_salary(50000)\n\n        # Close the connection\n        connection.close()\n    else:\n        print(\"Failed to connect to MySQL database\")\n\nif __name__ == \"__main__\":\n    main()\n```\n\n### Explanation:\n\n1. **create_connection():**\n   - Establishes a connection to the MySQL database using provided credentials.\n\n2. **execute_query():**\n   - Executes a given SQL query to create tables, etc.\n\n3. **insert_into_table():**\n   - Inserts multiple records into the \"employees\" table using executemany() for efficiency.\n\n4. **select_from_table():**\n   - Executes a SELECT query and fetches all matching records.\n\n5. **get_employees_above_salary():**\n   - A function that takes a salary amount and retrieves all employees earning more than that amount.\n\n6. **main():**\n   - Orchestrates the creation of the table, insertion of sample data, and demonstration of the retrieval function.\n\nMake sure to replace `'your_host'`, `'your_database'`, `'your_user'`, and `'your_password'` with your actual MySQL database credentials.\n\nThis script should help you get started with basic database operations in Python using MySQL."
    }
]