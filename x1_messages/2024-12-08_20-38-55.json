[
    {
        "role": "user",
        "content": "Develop a TypeScript class for a \"Vehicle\" with properties like make, model, year, and color. Include methods to display vehicle information and change the color of the vehicle.\nPLAINFORMAT"
    },
    {
        "role": "assistant",
        "content": "Sure, I can help you with that! Let's create a TypeScript class for a \"Vehicle\" with the specified properties and methods.\n\nFirst, we need to define the class with the properties: make, model, year, and color. Then, we'll add methods to display the vehicle's information and to change its color.\n\nHere's how you can do it:\n\n```typescript\nclass Vehicle {\n  make: string;\n  model: string;\n  year: number;\n  color: string;\n\n  constructor(make: string, model: string, year: number, color: string) {\n    this.make = make;\n    this.model = model;\n    this.year = year;\n    this.color = color;\n  }\n\n  displayInfo(): void {\n    console.log(`Make: ${this.make}`);\n    console.log(`Model: ${this.model}`);\n    console.log(`Year: ${this.year}`);\n    console.log(`Color: ${this.color}`);\n  }\n\n  changeColor(newColor: string): void {\n    this.color = newColor;\n    console.log(`Color changed to ${newColor}`);\n  }\n}\n\n// Example usage:\nconst myCar = new Vehicle(\"Toyota\", \"Camry\", 2020, \"Red\");\nmyCar.displayInfo();\nmyCar.changeColor(\"Blue\");\nmyCar.displayInfo();\n```\n\nIn this code:\n\n- We define a class called `Vehicle` with four properties: `make`, `model`, `year`, and `color`.\n\n- The constructor initializes these properties when a new `Vehicle` object is created.\n\n- The `displayInfo` method prints the vehicle's information to the console.\n\n- The `changeColor` method allows changing the vehicle's color and confirms the change with a console log.\n\nYou can create instances of the `Vehicle` class and use these methods to manage and display vehicle data.\n\nLet me know if you have any questions or need further assistance!\n"
    }
]