[
    {
        "role": "user",
        "content": "Write a Python script to generate Fibonacci series up to n-th term where n is provided by the user."
    },
    {
        "role": "assistant",
        "content": "Certainly! Below is a Python script that generates the Fibonacci series up to the n-th term, where n is provided by the user.\n\n```python\ndef generate_fibonacci(n):\n    if n <= 0:\n        return []\n    elif n == 1:\n        return [0]\n    elif n == 2:\n        return [0, 1]\n    else:\n        fib_series = [0, 1]\n        for i in range(2, n):\n            next_term = fib_series[-1] + fib_series[-2]\n            fib_series.append(next_term)\n        return fib_series\n\ndef main():\n    try:\n        n = int(input(\"Enter the number of terms for the Fibonacci series: \"))\n        if n < 0:\n            print(\"Please enter a positive integer.\")\n        else:\n            fibonacci_series = generate_fibonacci(n)\n            print(f\"Fibonacci series up to {n} terms: {fibonacci_series}\")\n    except ValueError:\n        print(\"Invalid input. Please enter a positive integer.\")\n\nif __name__ == \"__main__\":\n    main()\n```\n\n### Explanation:\n1. **Function `generate_fibonacci(n)`**:\n   - This function generates the Fibonacci series up to the n-th term.\n   - It handles special cases where n is less than or equal to 0, 1, or 2.\n   - For n greater than 2, it uses a loop to calculate and append the next Fibonacci numbers to the list.\n\n2. **Function `main()`**:\n   - This function handles user input and output.\n   - It prompts the user to enter the number of terms they want in the Fibonacci series.\n   - It checks if the input is a positive integer and handles invalid inputs gracefully.\n   - It calls the `generate_fibonacci(n)` function and prints the resulting series.\n\n3. **Execution**:\n   - The script starts by running the `main()` function when executed.\n   - It ensures that the script is being run as the main program and not imported as a module.\n\nThis script provides a simple and efficient way to generate the Fibonacci series up to the specified number of terms."
    }
]