[
    {
        "role": "user",
        "content": "Develop a PHP script that connects to a MySQL database and performs CRUD operations on a \"products\" table. The table should have columns for product ID, name, description, price, and quantity. Implement functions for adding, updating, deleting, and retrieving products based on given criteria such as product ID or price range."
    },
    {
        "role": "assistant",
        "content": "I'm here to help you with your PHP and MySQL task. It sounds like you need to create a script that can connect to a MySQL database and perform various operations on a \"products\" table. The table should include fields for product ID, name, description, price, and quantity. You also need to implement functions for adding, updating, deleting, and retrieving products based on different criteria like product ID or price range.\n\nFirst, let's outline the steps we need to take:\n\n1. **Set up the database connection:**\n   - We'll use PHP's MySQLi or PDO extension to connect to the MySQL database.\n\n2. **Create the \"products\" table:**\n   - Define the table structure with the required columns.\n\n3. **Implement CRUD operations:**\n   - **Create (Add):** Insert a new product into the table.\n   - **Read (Retrieve):** Fetch products based on certain criteria (e.g., by ID or price range).\n   - **Update:** Modify existing product details.\n   - **Delete:** Remove a product from the table.\n\n4. **Test the functions:**\n   - Ensure that each function works as expected.\n\nLet's start by setting up the database connection. For this example, I'll use MySQLi, as it's widely used and straightforward.\n\n### Step 1: Set up the database connection\n\nFirst, make sure you have a MySQL server set up and running. You'll need the host, username, password, and database name to connect.\n\nCreate a new PHP file, say `db_connect.php`, and add the following code:\n\n```php\n<?php\n$host = 'localhost';\n$username = 'your_username';\n$password = 'your_password';\n$database = 'your_database';\n\n// Create connection\n$conn = new mysqli($host, $username, $password, $database);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n?>\n```\n\nReplace `'your_username'`, `'your_password'`, and `'your_database'` with your actual database credentials.\n\n### Step 2: Create the \"products\" table\n\nNext, we need to create the \"products\" table in the database. You can do this by running a SQL query.\n\nHere's the SQL to create the table:\n\n```sql\nCREATE TABLE products (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    description TEXT,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL\n);\n```\n\nYou can run this query using a MySQL client or include it in your PHP script for automation.\n\n### Step 3: Implement CRUD operations\n\nNow, let's create functions for each CRUD operation.\n\n#### a. Create (Add) a product\n\nCreate a function to insert a new product into the database.\n\n```php\nfunction addProduct($name, $description, $price, $quantity) {\n    global $conn;\n\n    $sql = \"INSERT INTO products (name, description, price, quantity) VALUES (?, ?, ?, ?)\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"ssdi\", $name, $description, $price, $quantity);\n\n    if ($stmt->execute()) {\n        return true;\n    } else {\n        echo \"Error: \" . $stmt->error;\n        return false;\n    }\n}\n```\n\n#### b. Read (Retrieve) products\n\nImplement functions to retrieve products based on different criteria.\n\n##### Retrieve all products\n\n```php\nfunction getAllProducts() {\n    global $conn;\n\n    $sql = \"SELECT * FROM products\";\n    $result = $conn->query($sql);\n\n    if ($result->num_rows > 0) {\n        return $result;\n    } else {\n        return false;\n    }\n}\n```\n\n##### Retrieve product by ID\n\n```php\nfunction getProductById($id) {\n    global $conn;\n\n    $sql = \"SELECT * FROM products WHERE id = ?\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"i\", $id);\n    $stmt->execute();\n    $result = $stmt->get_result();\n\n    if ($result->num_rows > 0) {\n        return $result->fetch_assoc();\n    } else {\n        return false;\n    }\n}\n```\n\n##### Retrieve products by price range\n\n```php\nfunction getProductsByPriceRange($minPrice, $maxPrice) {\n    global $conn;\n\n    $sql = \"SELECT * FROM products WHERE price BETWEEN ? AND ?\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"dd\", $minPrice, $maxPrice);\n    $stmt->execute();\n    $result = $stmt->get_result();\n\n    if ($result->num_rows > 0) {\n        return $result;\n    } else {\n        return false;\n    }\n}\n```\n\n#### c. Update a product\n\nCreate a function to update an existing product's details.\n\n```php\nfunction updateProduct($id, $name, $description, $price, $quantity) {\n    global $conn;\n\n    $sql = \"UPDATE products SET name = ?, description = ?, price = ?, quantity = ? WHERE id = ?\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"ssdii\", $name, $description, $price, $quantity, $id);\n\n    if ($stmt->execute()) {\n        return true;\n    } else {\n        echo \"Error: \" . $stmt->error;\n        return false;\n    }\n}\n```\n\n#### d. Delete a product\n\nImplement a function to delete a product by its ID.\n\n```php\nfunction deleteProduct($id) {\n    global $conn;\n\n    $sql = \"DELETE FROM products WHERE id = ?\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"i\", $id);\n\n    if ($stmt->execute()) {\n        return true;\n    } else {\n        echo \"Error: \" . $stmt->error;\n        return false;\n    }\n}\n```\n\n### Step 4: Test the functions\n\nFinally, let's test these functions to ensure they work correctly.\n\n#### Example usage:\n\n```php\n<?php\nrequire 'db_connect.php';\n\n// Add a product\nif (addProduct('Product Name', 'Product Description', 19.99, 10)) {\n    echo \"Product added successfully.\";\n} else {\n    echo \"Failed to add product.\";\n}\n\n// Get all products\necho \"<h2>All Products</h2>\";\nif ($products = getAllProducts()) {\n    while ($product = $products->fetch_assoc()) {\n        echo \"ID: \" . $product['id'] . \", Name: \" . $product['name'] . \"<br>\";\n    }\n} else {\n    echo \"No products found.\";\n}\n\n// Get product by ID\necho \"<h2>Product by ID</h2>\";\nif ($product = getProductById(1)) {\n    echo \"ID: \" . $product['id'] . \", Name: \" . $product['name'] . \"<br>\";\n} else {\n    echo \"Product not found.\";\n}\n\n// Get products by price range\necho \"<h2>Products by Price Range</h2>\";\nif ($products = getProductsByPriceRange(10, 20)) {\n    while ($product = $products->fetch_assoc()) {\n        echo \"ID: \" . $product['id'] . \", Name: \" . $product['name'] . \", Price: \" . $product['price'] . \"<br>\";\n    }\n} else {\n    echo \"No products found in the given price range.\";\n}\n\n// Update a product\nif (updateProduct(1, 'Updated Product Name', 'Updated Description', 29.99, 5)) {\n    echo \"Product updated successfully.\";\n} else {\n    echo \"Failed to update product.\";\n}\n\n// Delete a product\nif (deleteProduct(1)) {\n    echo \"Product deleted successfully.\";\n} else {\n    echo \"Failed to delete product.\";\n}\n\n$conn->close();\n?>\n```\n\nThis script demonstrates how to perform various CRUD operations on the \"products\" table using PHP and MySQLi. Make sure to adjust the database connection details and test each function thoroughly to ensure they work as expected.\n\nIf you have any questions or need further assistance, feel free to ask!"
    }
]