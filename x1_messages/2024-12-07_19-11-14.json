[
    {
        "role": "user",
        "content": "Write a Python script that connects to an Elasticsearch instance, indexes sample documents, and performs a search query with pagination support."
    },
    {
        "role": "assistant",
        "content": "Certainly! Below is a Python script that demonstrates how to connect to an Elasticsearch instance, index sample documents, and perform a search query with pagination support.\n\nFirst, make sure you have the `elasticsearch` library installed. You can install it using pip if you haven't already:\n\n```bash\npip install elasticsearch\n```\n\nHere's the Python script:\n\n```python\nfrom elasticsearch import Elasticsearch\n\n# Function to connect to Elasticsearch\ndef connect_elasticsearch():\n    _es = None\n    _es = Elasticsearch([{'host': 'localhost', 'port': 9200}])\n    if _es.ping():\n        print('Yay Connected')\n    else:\n        print('Awww it could not connect!')\n    return _es\n\n# Function to index sample documents\ndef index_documents(es, index_name, documents):\n    for doc in documents:\n        res = es.index(index=index_name, body=doc)\n        print(res['result'])\n\n# Function to perform a search query with pagination\ndef search_with_pagination(es, index_name, query, page=1, page_size=10):\n    from_val = (page - 1) * page_size\n    body = {\n        \"query\": query,\n        \"from\": from_val,\n        \"size\": page_size\n    }\n    res = es.search(index=index_name, body=body)\n    return res\n\nif __name__ == \"__main__\":\n    # Connect to Elasticsearch\n    es = connect_elasticsearch()\n    if not es:\n        exit()\n\n    # Sample documents to index\n    sample_docs = [\n        {\"title\": \"First document\", \"content\": \"This is the first document.\"},\n        {\"title\": \"Second document\", \"content\": \"This is the second document.\"},\n        {\"title\": \"Third document\", \"content\": \"This is the third document.\"},\n        {\"title\": \"Fourth document\", \"content\": \"This is the fourth document.\"},\n        {\"title\": \"Fifth document\", \"content\": \"This is the fifth document.\"}\n    ]\n\n    # Index name\n    index_name = \"sample_index\"\n\n    # Index the sample documents\n    index_documents(es, index_name, sample_docs)\n\n    # Search query\n    search_query = {\n        \"match\": {\n            \"content\": \"document\"\n        }\n    }\n\n    # Perform search with pagination\n    page = 1\n    page_size = 2\n    response = search_with_pagination(es, index_name, search_query, page, page_size)\n\n    # Print search results\n    for hit in response['hits']['hits']:\n        print(hit[\"_source\"])\n\n    # Print total hits\n    print(\"Total hits:\", response['hits']['total']['value'])\n```\n\n### Explanation:\n\n1. **Connecting to Elasticsearch:**\n   - The `connect_elasticsearch` function attempts to connect to an Elasticsearch instance running on `localhost` at port `9200`. It pings the server to check connectivity.\n\n2. **Indexing Sample Documents:**\n   - The `index_documents` function takes an Elasticsearch client, an index name, and a list of documents to index. It indexes each document and prints the result.\n\n3. **Performing a Search Query with Pagination:**\n   - The `search_with_pagination` function constructs a search query with pagination support. It takes the Elasticsearch client, index name, search query, page number, and page size as parameters.\n   - It calculates the `from` value based on the page number and page size.\n   - It constructs the search body with the query, from, and size parameters.\n   - It performs the search and returns the response.\n\n4. **Main Block:**\n   - Connects to Elasticsearch.\n   - Defines sample documents and indexes them.\n   - Defines a search query to match documents containing the word \"document\".\n   - Performs the search with pagination (page 1, page size 2).\n   - Prints the search results and the total number of hits.\n\nThis script should help you get started with connecting to Elasticsearch, indexing documents, and performing paginated searches."
    }
]