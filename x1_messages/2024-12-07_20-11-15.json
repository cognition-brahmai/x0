[
    {
        "role": "user",
        "content": "Develop a Python script that connects to an SQLite database and performs CRUD operations on a table named \"students\" with columns: id, first_name, last_name, and grade. The script should also include a function to calculate the average grade of all students in the table."
    },
    {
        "role": "assistant",
        "content": "I'm here to help you with your Python and SQLite task! So, you need to create a script that connects to an SQLite database and performs CRUD operations on a table named \"students\" with columns: id, first_name, last_name, and grade. Additionally, you need a function to calculate the average grade of all students in the table.\n\nFirst, let's make sure you have SQLite and Python set up. SQLite comes pre-installed with Python, so you shouldn't need to install anything extra for that. You'll mainly be using the `sqlite3` module in Python.\n\nHere's a step-by-step guide to achieve this:\n\n### Step 1: Set Up the Database and Table\n\nYou need to create a database and a table named \"students\" with the specified columns. If the database or table already exists, you need to handle that appropriately.\n\n```python\nimport sqlite3\n\ndef create_connection():\n    conn = None;\n    try:\n        conn = sqlite3.connect('students.db')\n        print(f'successful connection with sqlite version {sqlite3.version}')\n    except Error as e:\n        print(e)\n    return conn\n\ndef create_table(conn):\n    try:\n        cursor = conn.cursor()\n        cursor.execute(\"\"\"\n            CREATE TABLE IF NOT EXISTS students (\n                id INTEGER PRIMARY KEY,\n                first_name TEXT NOT NULL,\n                last_name TEXT NOT NULL,\n                grade REAL NOT NULL\n            );\n        \"\"\")\n        print(\"Table 'students' created successfully.\")\n    except Error as e:\n        print(e)\n\nconn = create_connection()\ncreate_table(conn)\n```\n\n### Step 2: CRUD Operations\n\nNow, let's implement the CRUD operations: Create (insert), Read (select), Update, and Delete.\n\n#### Create (Insert)\n\nFunction to insert a new student into the table.\n\n```python\ndef create_student(conn, student):\n    sql = '''INSERT INTO students(first_name, last_name, grade)\n              VALUES(?,?,?)'''\n    cur = conn.cursor()\n    cur.execute(sql, student)\n    conn.commit()\n    return cur.lastrowid\n```\n\n#### Read (Select)\n\nFunction to retrieve all students from the table.\n\n```python\ndef get_all_students(conn):\n    cur = conn.cursor()\n    cur.execute(\"SELECT * FROM students\")\n    rows = cur.fetchall()\n    for row in rows:\n        print(row)\n```\n\n#### Update\n\nFunction to update a student's information by ID.\n\n```python\ndef update_student(conn, student):\n    sql = '''UPDATE students\n              SET first_name = ?,\n                  last_name = ?,\n                  grade = ?\n              WHERE id = ?'''\n    cur = conn.cursor()\n    cur.execute(sql, student)\n    conn.commit()\n```\n\n#### Delete\n\nFunction to delete a student by ID.\n\n```python\ndef delete_student(conn, id):\n    sql = 'DELETE FROM students WHERE id=?'\n    cur = conn.cursor()\n    cur.execute(sql, (id,))\n    conn.commit()\n```\n\n### Step 3: Calculate Average Grade\n\nFunction to calculate the average grade of all students.\n\n```python\ndef calculate_average_grade(conn):\n    cur = conn.cursor()\n    cur.execute(\"SELECT AVG(grade) FROM students\")\n    row = cur.fetchone()\n    if row:\n        average = row[0]\n        print(f\"The average grade is: {average}\")\n        return average\n    else:\n        print(\"No students found.\")\n        return None\n```\n\n### Step 4: Putting It All Together\n\nNow, let's put all these functions together in a script and test them.\n\n```python\ndef main():\n    conn = create_connection()\n    if conn is not None:\n        create_table(conn)\n        \n        # Inserting a new student\n        student = ('John', 'Doe', 85.5)\n        student_id = create_student(conn, student)\n        print(f\"Student inserted with ID: {student_id}\")\n        \n        # Retrieving all students\n        print(\"All students:\")\n        get_all_students(conn)\n        \n        # Updating a student\n        student = ('Jane', 'Doe', 90.0, 1)\n        update_student(conn, student)\n        print(\"Student updated.\")\n        \n        # Deleting a student\n        delete_student(conn, 2)\n        print(\"Student deleted.\")\n        \n        # Calculating average grade\n        calculate_average_grade(conn)\n        \n        # Closing the connection\n        conn.close()\n    else:\n        print(\"Error! Cannot create the database connection.\")\n\nif __name__ == '__main__':\n    main()\n```\n\n### Explanation\n\n1. **Connection and Table Creation:**\n   - `create_connection`: Establishes a connection to the SQLite database.\n   - `create_table`: Creates the \"students\" table if it doesn't exist.\n\n2. **CRUD Operations:**\n   - `create_student`: Inserts a new student into the table.\n   - `get_all_students`: Fetches and prints all students from the table.\n   - `update_student`: Updates a student's information based on the ID.\n   - `delete_student`: Deletes a student based on the ID.\n\n3. **Average Grade Calculation:**\n   - `calculate_average_grade`: Computes and prints the average grade of all students.\n\n4. **Main Function:**\n   - Orchestrates the execution of the above functions to demonstrate their functionality.\n\nThis script provides a comprehensive example of interacting with an SQLite database using Python, covering all the required operations."
    }
]