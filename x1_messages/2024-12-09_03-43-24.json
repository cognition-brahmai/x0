[
    {
        "role": "user",
        "content": "Design a Python function that removes duplicates from a list."
    },
    {
        "role": "assistant",
        "content": "Here's a simple Python function that removes duplicates from a list by converting it to a set and then back to a list. Note that this will preserve the original order of elements.\n\n```python\ndef remove_duplicates(input_list):\n    return list(set(input_list))\n```\n\nYou can use this function like this:\n\n```python\nmy_list = [1, 2, 2, 3, 4, 4, 5]\nunique_list = remove_duplicates(my_list)\nprint(unique_list)  # Output: [1, 2, 3, 4, 5]\n```\n\nIf you need to preserve the original order of elements, you can use the following function:\n\n```python\ndef remove_duplicates_ordered(input_list):\n    seen = set()\n    unique_list = []\n    for item in input_list:\n        if item not in seen:\n            unique_list.append(item)\n            seen.add(item)\n    return unique_list\n```\n\nUsage:\n\n```python\nmy_list = [1, 2, 2, 3, 4, 4, 5]\nunique_list = remove_duplicates_ordered(my_list)\nprint(unique_list)  # Output: [1, 2, 3, 4, 5]\n```\n\nThis function iterates through the input list and adds each item to the `unique_list` only if it hasn't been seen before, thus preserving the original order and removing duplicates."
    }
]