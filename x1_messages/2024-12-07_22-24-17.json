[
    {
        "role": "user",
        "content": "Implement a Python script that uses regular expressions to extract email addresses from a given text file."
    },
    {
        "role": "assistant",
        "content": "Certainly! To implement a Python script that extracts email addresses from a text file using regular expressions, you can follow these steps:\n\n1. **Read the Text File**: Open and read the content of the text file.\n2. **Define the Regular Expression Pattern**: Create a pattern that matches email addresses.\n3. **Find All Matches**: Use the pattern to find all occurrences of email addresses in the text.\n4. **Output the Results**: Print or save the extracted email addresses.\n\nHere's a sample script that demonstrates this process:\n\n```python\nimport re\n\ndef extract_emails(file_path):\n    # Define the regular expression pattern for email addresses\n    email_pattern = r'\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b'\n    \n    try:\n        # Open and read the text file\n        with open(file_path, 'r') as file:\n            text = file.read()\n        \n        # Find all email addresses using the pattern\n        emails = re.findall(email_pattern, text)\n        \n        # Return the list of email addresses\n        return emails\n    except FileNotFoundError:\n        print(f\"File not found: {file_path}\")\n        return []\n    except Exception as e:\n        print(f\"An error occurred: {e}\")\n        return []\n\nif __name__ == \"__main__\":\n    # Specify the path to your text file\n    file_path = 'path_to_your_text_file.txt'\n    \n    # Extract emails from the file\n    emails = extract_emails(file_path)\n    \n    # Print the extracted emails\n    if emails:\n        print(\"Extracted Email Addresses:\")\n        for email in emails:\n            print(email)\n    else:\n        print(\"No email addresses found.\")\n```\n\n### Explanation:\n\n1. **Reading the Text File**:\n   - The `open` function is used to open the file in read mode.\n   - The `read` method reads the entire content of the file into a string.\n\n2. **Defining the Regular Expression Pattern**:\n   - The pattern `r'\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b'` is designed to match email addresses.\n   - Breakdown:\n     - `\\b`: Word boundary to ensure the pattern matches whole email addresses.\n     - `[A-Za-z0-9._%+-]+`: Matches the local part of the email address.\n     - `@`: Matches the at symbol.\n     - `[A-Za-z0-9.-]+`: Matches the domain name.\n     - `\\.[A-Z|a-z]{2,}\\b`: Matches the top-level domain.\n\n3. **Finding All Matches**:\n   - The `re.findall` function searches the text for all non-overlapping matches of the pattern and returns them as a list.\n\n4. **Outputting the Results**:\n   - The extracted email addresses are printed to the console.\n\n### Usage:\n\n- Replace `'path_to_your_text_file.txt'` with the actual path to your text file.\n- Run the script to extract and print email addresses from the specified file.\n\nThis script provides a straightforward way to extract email addresses using regular expressions in Python."
    }
]