[
    {
        "role": "user",
        "content": "Design a JavaScript or TypeScript class representing a simple calculator with methods for addition, subtraction, multiplication, and division. Include error handling for invalid inputs and division by zero."
    },
    {
        "role": "assistant",
        "content": "Sure! Below is an example of a simple calculator class implemented in TypeScript. This class includes methods for addition, subtraction, multiplication, and division, along with error handling for invalid inputs and division by zero.\n\n```typescript\nclass SimpleCalculator {\n    // Method to add two numbers\n    add(a: number, b: number): number {\n        this.validateNumbers(a, b);\n        return a + b;\n    }\n\n    // Method to subtract two numbers\n    subtract(a: number, b: number): number {\n        this.validateNumbers(a, b);\n        return a - b;\n    }\n\n    // Method to multiply two numbers\n    multiply(a: number, b: number): number {\n        this.validateNumbers(a, b);\n        return a * b;\n    }\n\n    // Method to divide two numbers\n    divide(a: number, b: number): number {\n        this.validateNumbers(a, b);\n        if (b === 0) {\n            throw new Error(\"Division by zero is not allowed.\");\n        }\n        return a / b;\n    }\n\n    // Helper method to validate if inputs are numbers\n    private validateNumbers(a: any, b: any): void {\n        if (typeof a !== 'number' || typeof b !== 'number') {\n            throw new Error(\"Both arguments must be numbers.\");\n        }\n    }\n}\n\n// Example usage:\ntry {\n    const calculator = new SimpleCalculator();\n    console.log(calculator.add(10, 5));       // Output: 15\n    console.log(calculator.subtract(10, 5));  // Output: 5\n    console.log(calculator.multiply(10, 5));  // Output: 50\n    console.log(calculator.divide(10, 5));    // Output: 2\n    console.log(calculator.divide(10, 0));    // Should throw an error\n} catch (error) {\n    console.error(error.message);\n}\n```\n\n### Explanation:\n1. **Class Definition**: The `SimpleCalculator` class contains four methods: `add`, `subtract`, `multiply`, and `divide`.\n2. **Method Implementations**:\n   - Each method takes two parameters and performs the respective arithmetic operation.\n   - Before performing any operation, it calls `validateNumbers` to ensure both parameters are numbers.\n3. **Error Handling**:\n   - `validateNumbers` checks if both inputs are numbers. If not, it throws an error.\n   - The `divide` method checks if the divisor is zero and throws an error if it is.\n4. **Example Usage**:\n   - Demonstrates how to create an instance of the calculator and use its methods.\n   - Includes handling for potential errors using a try-catch block.\n\nThis setup ensures that the calculator handles basic arithmetic operations safely and provides meaningful error messages for invalid inputs."
    }
]