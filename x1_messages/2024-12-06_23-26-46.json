[
    {
        "role": "user",
        "content": "Please create a step-by-step plan to generate an ideal response to the user instruction, making use of a set of available tools.  Each plan will have a corresponding evidence value, which will be the output of one of the available functions given an input string\n that can be the user question, one or more previous evidence values, or a mixture of both.\n\nHere are the tools available to be called:\nDuckDuckGo[input]: Tool that allows the user to search for information using the DuckDuckGo search engine.  \nWebScraper[input]: Load one or more websites from the input string containing newline delimited links, where input is one or more links, and produces plain text output containing the content of the links.\nURLFinder[input]: Extract links from plain text and produces a plain text, newline delimited response of links.\nBERT[input]: Question answering language model, particularly useful in answering questions based on an input passage of text.  \n\nBe sure to only include one evidence output per plan step.\n\nThe output should be in format:\nPlan: [first action to take based in input question]\n:evidence0: = [function to call with input parameter]\nPlan: [next action to take, based on result of :evidence0:]\n:evidence1: = [next function to call and input parameter, which may include reference to previous evidence, e.g. \"Given context :evidence0\"]\n...\nAnswer: [:evidence[n]: containing the final answer.]\n\nQuestion: Who won the Nobel Prize in Literature in 2020 and what was their most famous work?"
    },
    {
        "role": "assistant",
        "content": "Plan: Start by searching for who won the Nobel Prize in Literature in 2020.\n:evidence0: = DuckDuckGo[\"Nobel Prize in Literature 2020 winner\"]\n\nPlan: Use the BERT model to interpret the search results and identify the winner.\n:evidence1: = BERT[\"Who won the Nobel Prize in Literature in 2020? Given context: :evidence0:\"]\n\nPlan: Once we have the winner's name, search for their most famous work.\n:evidence2: = DuckDuckGo[\"Most famous work of :evidence1:\"]\n\nPlan: Extract relevant links from the search results for a more focused search.\n:evidence3: = URLFinder[:evidence2:]\n\nPlan: Scrape the content from the extracted links.\n:evidence4: = WebScraper[:evidence3:]\n\nPlan: Use the BERT model again to find and summarize the most famous work of the author from the scraped information.\n:evidence5: = BERT[\"What is the most famous work of :evidence1:? Given context: :evidence4:\"]\n\nAnswer: :evidence5:"
    }
]