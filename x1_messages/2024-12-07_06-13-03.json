[
    {
        "role": "user",
        "content": "Implement a Python script that interacts with Elasticsearch to create an index, insert documents into the index, and perform basic search queries on the indexed data.\nPLAINFORMAT"
    },
    {
        "role": "assistant",
        "content": "Alright, I'm going to help you write a Python script that interacts with Elasticsearch. We'll cover creating an index, inserting documents, and performing some basic search queries. Make sure you have Elasticsearch installed and running on your machine before we start.\n\nFirst, you'll need to install the Elasticsearch Python client library. You can do this using pip:\n\n```bash\npip install elasticsearch\n```\n\nNow, let's start by importing the necessary modules and connecting to the Elasticsearch instance.\n\n```python\nfrom elasticsearch import Elasticsearch\n\n# Connect to the local Elasticsearch instance\nes = Elasticsearch([{'host': 'localhost', 'port': 9200}])\n\n# Check if the connection is successful\nif not es.ping():\n    print('Cannot connect to Elasticsearch!')\n    exit()\nelse:\n    print('Connected to Elasticsearch!')\n```\n\nNext, we'll create an index. In Elasticsearch, an index is like a table in a relational database. Let's create an index called \"employees\".\n\n```python\nindex_name = 'employees'\n\n# Check if the index already exists\nif not es.indices.exists(index=index_name):\n    # Create the index\n    es.indices.create(index=index_name)\n    print(f'Index \"{index_name}\" created.')\nelse:\n    print(f'Index \"{index_name}\" already exists.')\n```\n\nNow, let's insert some documents into this index. Each document is a JSON-like structure.\n\n```python\ndocuments = [\n    {\n        'name': 'John Doe',\n        'age': 30,\n        'department': 'HR'\n    },\n    {\n        'name': 'Jane Smith',\n        'age': 25,\n        'department': 'IT'\n    },\n    {\n        'name': 'Alice Johnson',\n        'age': 35,\n        'department': 'Finance'\n    }\n]\n\n# Insert documents into the index\nfor doc in documents:\n    res = es.index(index=index_name, document=doc)\n    print(f'Document inserted with ID: {res[\"_id\"]}')\n```\n\nAfter inserting the documents, let's perform some basic search queries.\n\n1. **Match all documents:**\n\n```python\n# Match all documents\nquery = {\n    \"match_all\": {}\n}\n\nresponse = es.search(index=index_name, query=query)\nprint('\\nMatch all documents:')\nfor hit in response['hits']['hits']:\n    print(hit['_source'])\n```\n\n2. **Search by keyword:**\n\n```python\n# Search for employees in the IT department\nquery = {\n    \"match\": {\n        \"department\": \"IT\"\n    }\n}\n\nresponse = es.search(index=index_name, query=query)\nprint('\\nEmployees in IT department:')\nfor hit in response['hits']['hits']:\n    print(hit['_source'])\n```\n\n3. **Range query:**\n\n```python\n# Search for employees aged between 25 and 35\nquery = {\n    \"range\": {\n        \"age\": {\n            \"gte\": 25,\n            \"lte\": 35\n        }\n    }\n}\n\nresponse = es.search(index=index_name, query=query)\nprint('\\nEmployees aged between 25 and 35:')\nfor hit in response['hits']['hits']:\n    print(hit['_source'])\n```\n\n4. **Combining queries:**\n\n```python\n# Search for employees in IT department aged above 25\nquery = {\n    \"bool\": {\n        \"must\": [\n            {\"match\": {\"department\": \"IT\"}},\n            {\"range\": {\"age\": {\"gt\": 25}}}\n        ]\n    }\n}\n\nresponse = es.search(index=index_name, query=query)\nprint('\\nEmployees in IT department aged above 25:')\nfor hit in response['hits']['hits']:\n    print(hit['_source'])\n```\n\nThat's it! You've successfully created an index, inserted documents, and performed various search queries using Elasticsearch in Python.\n\n**Full Script:**\n\n```python\nfrom elasticsearch import Elasticsearch\n\n# Connect to the local Elasticsearch instance\nes = Elasticsearch([{'host': 'localhost', 'port': 9200}])\n\n# Check if the connection is successful\nif not es.ping():\n    print('Cannot connect to Elasticsearch!')\n    exit()\nelse:\n    print('Connected to Elasticsearch!')\n\nindex_name = 'employees'\n\n# Check if the index already exists\nif not es.indices.exists(index=index_name):\n    # Create the index\n    es.indices.create(index=index_name)\n    print(f'Index \"{index_name}\" created.')\nelse:\n    print(f'Index \"{index_name}\" already exists.')\n\ndocuments = [\n    {\n        'name': 'John Doe',\n        'age': 30,\n        'department': 'HR'\n    },\n    {\n        'name': 'Jane Smith',\n        'age': 25,\n        'department': 'IT'\n    },\n    {\n        'name': 'Alice Johnson',\n        'age': 35,\n        'department': 'Finance'\n    }\n]\n\n# Insert documents into the index\nfor doc in documents:\n    res = es.index(index=index_name, document=doc)\n    print(f'Document inserted with ID: {res[\"_id\"]}')\n\n# Match all documents\nquery = {\n    \"match_all\": {}\n}\n\nresponse = es.search(index=index_name, query=query)\nprint('\\nMatch all documents:')\nfor hit in response['hits']['hits']:\n    print(hit['_source'])\n\n# Search for employees in the IT department\nquery = {\n    \"match\": {\n        \"department\": \"IT\"\n    }\n}\n\nresponse = es.search(index=index_name, query=query)\nprint('\\nEmployees in IT department:')\nfor hit in response['hits']['hits']:\n    print(hit['_source'])\n\n# Search for employees aged between 25 and 35\nquery = {\n    \"range\": {\n        \"age\": {\n            \"gte\": 25,\n            \"lte\": 35\n        }\n    }\n}\n\nresponse = es.search(index=index_name, query=query)\nprint('\\nEmployees aged between 25 and 35:')\nfor hit in response['hits']['hits']:\n    print(hit['_source'])\n\n# Search for employees in IT department aged above 25\nquery = {\n    \"bool\": {\n        \"must\": [\n            {\"match\": {\"department\": \"IT\"}},\n            {\"range\": {\"age\": {\"gt\": 25}}}\n        ]\n    }\n}\n\nresponse = es.search(index=index_name, query=query)\nprint('\\nEmployees in IT department aged above 25:')\nfor hit in response['hits']['hits']:\n    print(hit['_source'])\n```\n\nThis script covers the basic operations you'll need to interact with Elasticsearch using Python. You can expand upon this by adding more complex queries, handling larger datasets, or incorporating additional features like aggregations and filters."
    }
]