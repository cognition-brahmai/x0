[
    {
        "role": "user",
        "content": "Craft a PowerShell script that lists all running processes on a Windows machine, along with their CPU and memory usage. The output should be formatted neatly in columns and sorted by CPU usage in descending order."
    },
    {
        "role": "assistant",
        "content": "Certainly! Below is a PowerShell script that accomplishes what you've described. This script retrieves information about all running processes, including their CPU and memory usage, formats it neatly into columns, and sorts the list by CPU usage in descending order.\n\n```powershell\n# Get all running processes with CPU and memory usage\n$processes = Get-Process | Select-Object Name, CPU, WS\n\n# Sort the processes by CPU usage in descending order\n$sortedProcesses = $processes | Sort-Object -Property CPU -Descending\n\n# Format the output into a table with columns: Name, CPU, WS (Working Set, which represents memory usage)\n$sortedProcesses | Format-Table -Property Name, CPU, @{Name=\"Memory (MB)\"; Expression={$_.WS / 1MB}; FormatString=\"{0:N2}\"} -AutoSize\n```\n\n### Explanation:\n1. **Retrieve Process Information:**\n   - `Get-Process` cmdlet is used to get all running processes.\n   - `Select-Object Name, CPU, WS` selects the process name, CPU usage, and working set (memory usage).\n\n2. **Sort Processes:**\n   - `Sort-Object -Property CPU -Descending` sorts the processes based on CPU usage in descending order.\n\n3. **Format Output:**\n   - `Format-Table` is used to display the data in a table format.\n   - Custom formatting is applied to the memory column to display it in megabytes (MB) with two decimal places for better readability.\n   - `-AutoSize` ensures that the table columns are sized appropriately to fit the content.\n\nThis script provides a clear and organized view of process activity, making it easier to identify processes that are consuming the most CPU and memory resources."
    }
]