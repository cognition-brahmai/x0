[
    {
        "role": "user",
        "content": "Write a Python function to implement the bubble sort algorithm on a given list of numbers. The function should return the sorted list."
    },
    {
        "role": "assistant",
        "content": "Certainly! Below is a Python function that implements the bubble sort algorithm on a given list of numbers and returns the sorted list.\n\n```python\ndef bubble_sort(numbers):\n    n = len(numbers)\n    for i in range(n):\n        # Track if any swaps were made in this pass\n        swapped = False\n        for j in range(0, n-i-1):\n            if numbers[j] > numbers[j+1]:\n                # Swap the elements\n                numbers[j], numbers[j+1] = numbers[j+1], numbers[j]\n                swapped = True\n        # If no two elements were swapped in the inner loop, the list is already sorted\n        if not swapped:\n            break\n    return numbers\n\n# Example usage:\n# sorted_list = bubble_sort([64, 34, 25, 12, 22, 11, 90])\n# print(sorted_list)\n```\n\n### Explanation:\n1. **Outer Loop**: Runs from the first element to the last. In each iteration, the largest unsorted element \"bubbles up\" to its correct position.\n2. **Inner Loop**: Compares adjacent elements and swaps them if they are in the wrong order. This process repeats until the entire list is sorted.\n3. **Optimization**: If no swaps are made in an iteration of the inner loop, it means the list is already sorted, and the algorithm can terminate early.\n\nThis implementation ensures that the list is sorted in ascending order. You can test it with different lists of numbers to see how it works."
    }
]