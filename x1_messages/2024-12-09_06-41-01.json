[
    {
        "role": "user",
        "content": "Create a Python script that performs the merge sort algorithm on an array of integers."
    },
    {
        "role": "assistant",
        "content": "Certainly! Below is a Python script that implements the merge sort algorithm for sorting an array of integers.\n\n```python\ndef merge_sort(arr):\n    if len(arr) <= 1:\n        return arr\n\n    # Find the midpoint of the array\n    mid = len(arr) // 2\n\n    # Recursively sort the left and right halves\n    left_half = merge_sort(arr[:mid])\n    right_half = merge_sort(arr[mid:])\n\n    # Merge the sorted halves\n    return merge(left_half, right_half)\n\ndef merge(left, right):\n    merged = []\n    left_index = 0\n    right_index = 0\n\n    # Merge the two arrays while maintaining order\n    while left_index < len(left) and right_index < len(right):\n        if left[left_index] < right[right_index]:\n            merged.append(left[left_index])\n            left_index += 1\n        else:\n            merged.append(right[right_index])\n            right_index += 1\n\n    # If there are remaining elements in left or right, add them to the merged array\n    merged.extend(left[left_index:])\n    merged.extend(right[right_index:])\n\n    return merged\n\n# Example usage:\nif __name__ == \"__main__\":\n    sample_array = [38, 27, 43, 3, 9, 82, 10]\n    sorted_array = merge_sort(sample_array)\n    print(\"Original array:\", sample_array)\n    print(\"Sorted array:\", sorted_array)\n```\n\n### Explanation:\n1. **merge_sort function**: This is the main function that implements the merge sort algorithm. It recursively divides the input array into two halves until each sub-array contains a single element or is empty. Then, it merges these sub-arrays back together in sorted order using the `merge` function.\n\n2. **merge function**: This function takes two sorted arrays and merges them into a single sorted array. It uses two indices to track the current positions in the left and right arrays, comparing elements and appending the smaller one to the result list. After one of the arrays is exhausted, it appends the remaining elements from the other array.\n\n3. **Example Usage**: The script includes an example to demonstrate how to use the `merge_sort` function. It sorts a sample array and prints both the original and sorted arrays.\n\nYou can run this script in any Python environment to see how merge sort works. If you have any questions or need further explanations, feel free to ask!"
    }
]