[
    {
        "role": "user",
        "content": "Write a C program that performs matrix multiplication. The matrices should be defined in the code itself (not input from the user). Be sure to include error checking for conditions where matrix multiplication isn't possible."
    },
    {
        "role": "assistant",
        "content": "Certainly! Below is a C program that performs matrix multiplication on two predefined matrices. The program includes error checking to ensure that the matrices can be multiplied, i.e., the number of columns in the first matrix must match the number of rows in the second matrix.\n\n```c\n#include <stdio.h>\n\n#define ROWS_A 2\n#define COLS_A 3\n#define ROWS_B COLS_A  // For multiplication to be possible, cols of A must equal rows of B\n#define COLS_B 2\n\nint main() {\n    // Define matrices A and B\n    int A[ROWS_A][COLS_A] = {\n        {1, 2, 3},\n        {4, 5, 6}\n    };\n\n    int B[ROWS_B][COLS_B] = {\n        {7, 8},\n        {9, 10},\n        {11, 12}\n    };\n\n    // Check if multiplication is possible\n    if (COLS_A != ROWS_B) {\n        printf(\"Error: Number of columns in A must equal number of rows in B.\\n\");\n        return 1;\n    }\n\n    // Define result matrix\n    int result[ROWS_A][COLS_B];\n\n    // Perform matrix multiplication\n    for (int i = 0; i < ROWS_A; i++) {\n        for (int j = 0; j < COLS_B; j++) {\n            result[i][j] = 0;\n            for (int k = 0; k < COLS_A; k++) {\n                result[i][j] += A[i][k] * B[k][j];\n            }\n        }\n    }\n\n    // Print the result matrix\n    printf(\"Resultant Matrix:\\n\");\n    for (int i = 0; i < ROWS_A; i++) {\n        for (int j = 0; j < COLS_B; j++) {\n            printf(\"%d \", result[i][j]);\n        }\n        printf(\"\\n\");\n    }\n\n    return 0;\n}\n```\n\n### Explanation:\n1. **Matrix Definitions**:\n   - Matrix `A` is defined as a 2x3 matrix.\n   - Matrix `B` is defined as a 3x2 matrix.\n   \n2. **Error Checking**:\n   - The program checks if the number of columns in `A` equals the number of rows in `B`. If not, it prints an error message and exits.\n\n3. **Matrix Multiplication**:\n   - The result matrix is initialized with zeros.\n   - The multiplication is performed using nested loops:\n     - The outer loops iterate over the rows of `A` and the columns of `B`.\n     - The inner loop performs the dot product of the corresponding row of `A` and column of `B`.\n\n4. **Output**:\n   - The resultant matrix is printed row by row.\n\nThis program demonstrates basic matrix operations and includes essential error checking to handle cases where matrix multiplication is not possible."
    }
]