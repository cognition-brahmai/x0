[
    {
        "role": "user",
        "content": "Write a JavaScript function that checks if a string is a valid URL. PLAINFORMAT"
    },
    {
        "role": "assistant",
        "content": "Sure! Below is a JavaScript function that checks if a given string is a valid URL using a regular expression.\n\n```javascript\nfunction isValidURL(str) {\n    var pattern = new RegExp('^(https?:\\\\/\\\\/)?'+ // protocol\n        '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|'+ // domain name\n        '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))'+ // OR ip (v4) address\n        '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*'+ // port and path\n        '(\\\\?[;&a-z\\\\d%_.~+=-]*)?'+ // query string\n        '(\\\\#[-a-z\\\\d_]*)?$','i'); // fragment locator\n    return !!pattern.test(str);\n}\n```\n\nThis function uses a regular expression to validate the URL. It checks for the protocol (http or https), domain name or IP address, port, path, query string, and fragment locator. The function returns `true` if the string is a valid URL and `false` otherwise.\n\nYou can test this function with different strings to see if they are valid URLs. For example:\n\n```javascript\nconsole.log(isValidURL(\"http://www.example.com\")); // true\nconsole.log(isValidURL(\"https://example\")); // false\nconsole.log(isValidURL(\"ftp://example.com\")); // false\nconsole.log(isValidURL(\"www.example.com\")); // true\nconsole.log(isValidURL(\"example.com\")); // true\nconsole.log(isValidURL(\"192.168.1.1\")); // true\nconsole.log(isValidURL(\"example\")); // false\n```\n\nNote that this function considers URLs without the protocol part as valid, assuming that the domain or IP is present. If you want to make the protocol mandatory, you can modify the regular expression accordingly."
    }
]