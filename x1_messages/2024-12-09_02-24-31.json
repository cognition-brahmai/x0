[
    {
        "role": "user",
        "content": "Write a Python script that connects to a SQLite database, creates a table, inserts sample data, and retrieves it using SQL queries."
    },
    {
        "role": "assistant",
        "content": "Certainly! Below is a Python script that demonstrates how to connect to a SQLite database, create a table, insert sample data, and retrieve it using SQL queries. This script uses the `sqlite3` module, which is included in Python's standard library.\n\n```python\nimport sqlite3\n\n# Connect to the SQLite database (or create it if it doesn't exist)\nconnection = sqlite3.connect('example.db')\n\n# Create a cursor object using the cursor method\ncursor = connection.cursor()\n\n# Create table\ncursor.execute('''CREATE TABLE IF NOT EXISTS stocks\n             (date text, trans text, symbol text, qty real, price real)''')\n\n# Insert a row of data\ncursor.execute(\"INSERT INTO stocks VALUES ('2023-01-01','BUY','RHAT',100,35.14)\")\n\n# Insert multiple rows using a list\npurchases = [('2023-01-02','BUY','MSFT',100,20.00),\n             ('2023-01-03','SELL','RHAT',50,38.14),\n             ('2023-01-04','BUY','GOOG',100,700.23)]\ncursor.executemany('INSERT INTO stocks VALUES (?,?,?,?,?)', purchases)\n\n# Save (commit) the changes\nconnection.commit()\n\n# Retrieve data\ncursor.execute('SELECT * FROM stocks WHERE symbol=?', ('RHAT',))\nprint(\"Data for RHAT:\")\nfor row in cursor.fetchall():\n    print(row)\n\ncursor.execute('SELECT * FROM stocks')\nprint(\"\\nAll data:\")\nfor row in cursor.fetchall():\n    print(row)\n\n# Close the connection\nconnection.close()\n```\n\n### Explanation:\n\n1. **Connecting to the Database:**\n   - `sqlite3.connect('example.db')` connects to the SQLite database file named `example.db`. If the file does not exist, SQLite will create it.\n\n2. **Creating a Table:**\n   - `cursor.execute('''CREATE TABLE IF NOT EXISTS stocks ...''')` creates a table named `stocks` if it doesn't already exist. The table has columns for date, transaction type, symbol, quantity, and price.\n\n3. **Inserting Data:**\n   - `cursor.execute(\"INSERT INTO stocks VALUES (...)\")` inserts a single row into the `stocks` table.\n   - `cursor.executemany('INSERT INTO stocks VALUES (?,?,?,?,?)', purchases)` inserts multiple rows efficiently using a list of tuples.\n\n4. **Committing Changes:**\n   - `connection.commit()` saves the changes made to the database.\n\n5. **Retrieving Data:**\n   - `cursor.execute('SELECT * FROM stocks WHERE symbol=?', ('RHAT',))` retrieves rows where the symbol is 'RHAT'.\n   - `cursor.fetchall()` fetches all rows from the last executed query.\n   - Another select statement retrieves all data from the `stocks` table.\n\n6. **Closing the Connection:**\n   - `connection.close()` closes the connection to the database.\n\nThis script provides a basic example of interacting with a SQLite database using Python. You can expand upon this by adding more complex queries, handling different data types, or implementing error handling."
    }
]