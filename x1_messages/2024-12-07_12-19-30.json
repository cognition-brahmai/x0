[
    {
        "role": "user",
        "content": "Develop a Python script that calculates the factorial of a given positive integer using recursion. If the input is not a positive integer, print an error message and stop."
    },
    {
        "role": "assistant",
        "content": "Certainly! Below is a Python script that calculates the factorial of a given positive integer using recursion. It also includes error handling to ensure that the input is a positive integer.\n\n```python\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef main():\n    try:\n        num = int(input(\"Enter a positive integer: \"))\n        if num < 0:\n            raise ValueError(\"Input must be a positive integer.\")\n        result = factorial(num)\n        print(f\"The factorial of {num} is {result}\")\n    except ValueError as e:\n        print(f\"Error: {e}\")\n\nif __name__ == \"__main__\":\n    main()\n```\n\n### Explanation:\n\n1. **Factorial Function**:\n   - The `factorial` function is defined recursively.\n   - If the input `n` is 0, it returns 1 (since 0! = 1).\n   - Otherwise, it returns `n` multiplied by the factorial of `n-1`.\n\n2. **Main Function**:\n   - Prompts the user to enter a positive integer.\n   - Converts the input to an integer.\n   - Checks if the integer is negative; if so, raises a `ValueError`.\n   - Calls the `factorial` function and prints the result.\n\n3. **Error Handling**:\n   - If the input cannot be converted to an integer or is negative, it catches the `ValueError` and prints an error message.\n\nThis script ensures that only positive integers are processed for calculating the factorial, and it provides clear feedback for invalid inputs."
    }
]