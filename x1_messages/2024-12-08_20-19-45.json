[
    {
        "role": "user",
        "content": "Develop a Node.js script that fetches JSON data from a given API endpoint using Axios library, filters the results based on specific criteria (e.g., items with a price less than $50), and writes the filtered data to a new JSON file. Include error handling for cases when the API request fails or the provided URL is invalid.\nPLAINFORMAT"
    },
    {
        "role": "assistant",
        "content": "Alright, I'm going to help you create a Node.js script that does the following:\n\n1. Fetches JSON data from a given API endpoint using the Axios library.\n2. Filters the results based on specific criteria (for example, items with a price less than $50).\n3. Writes the filtered data to a new JSON file.\n4. Includes error handling for cases when the API request fails or the provided URL is invalid.\n\nFirst, make sure you have Node.js installed on your machine. You can download it from [nodejs.org](https://nodejs.org/).\n\nNext, you'll need to set up a new Node.js project and install the required dependencies. Let's create a new directory for our project and initialize it:\n\n```bash\nmkdir json-filter-script\ncd json-filter-script\nnpm init -y\n```\n\nNow, install Axios, which is a popular library for making HTTP requests in Node.js:\n\n```bash\nnpm install axios\n```\n\nAlso, we'll need the `fs` module to write to a file, but since it's a built-in module, we don't need to install anything extra.\n\nLet's create a new file called `filterData.js`:\n\n```bash\ntouch filterData.js\n```\n\nOpen `filterData.js` in your favorite text editor and let's start writing the script.\n\nFirst, import the required modules:\n\n```javascript\nconst axios = require('axios');\nconst fs = require('fs');\n```\n\nNext, define the API endpoint URL. For the purpose of this example, let's assume we have an API that provides a list of items with their names and prices. You can replace this URL with any public API that returns JSON data.\n\n```javascript\nconst url = 'https://api.example.com/items';\n```\n\nNow, make an HTTP GET request to the API using Axios. We'll wrap this in a try-catch block to handle any errors that might occur during the request.\n\n```javascript\nasync function fetchData() {\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching data from API:', error.message);\n    process.exit(1);\n  }\n}\n```\n\nOnce we have the data, we need to filter it based on our criteria. Let's assume each item in the JSON array has a `price` property, and we want to filter items where the price is less than $50.\n\n```javascript\nfunction filterItems(data) {\n  return data.filter(item => item.price < 50);\n}\n```\n\nAfter filtering the data, we need to write the filtered results to a new JSON file. We'll use the `fs.writeFileSync` method for this purpose.\n\n```javascript\nfunction writeToFile(filteredData) {\n  fs.writeFileSync('filteredData.json', JSON.stringify(filteredData, null, 2));\n  console.log('Filtered data has been written to filteredData.json');\n}\n```\n\nNow, let's put it all together by calling these functions in sequence:\n\n```javascript\nasync function main() {\n  const data = await fetchData();\n  const filteredData = filterItems(data);\n  writeToFile(filteredData);\n}\n\nmain();\n```\n\nHere's the complete script:\n\n```javascript\nconst axios = require('axios');\nconst fs = require('fs');\n\nconst url = 'https://api.example.com/items';\n\nasync function fetchData() {\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching data from API:', error.message);\n    process.exit(1);\n  }\n}\n\nfunction filterItems(data) {\n  return data.filter(item => item.price < 50);\n}\n\nfunction writeToFile(filteredData) {\n  fs.writeFileSync('filteredData.json', JSON.stringify(filteredData, null, 2));\n  console.log('Filtered data has been written to filteredData.json');\n}\n\nasync function main() {\n  const data = await fetchData();\n  const filteredData = filterItems(data);\n  writeToFile(filteredData);\n}\n\nmain();\n```\n\n### Explanation:\n\n1. **Fetching Data:**\n   - We use Axios to make a GET request to the specified API endpoint.\n   - If the request is successful, we get the JSON data from the response.\n   - If there's an error (like a network issue or invalid URL), we catch it and display an error message before exiting the script.\n\n2. **Filtering Data:**\n   - We assume the data is an array of objects, each with a `price` property.\n   - We filter the array to include only items where the price is less than 50.\n\n3. **Writing to File:**\n   - We use the `fs.writeFileSync` method to write the filtered data to a file named `filteredData.json`.\n   - The `JSON.stringify` method is used to convert the JavaScript object to a JSON string with indentation for better readability.\n\n### Running the Script:\n\nTo run the script, open your terminal, navigate to the project directory, and execute:\n\n```bash\nnode filterData.js\n```\n\nThis will fetch the data from the API, filter it based on the criteria, and save the filtered data to `filteredData.json`.\n\n### Notes:\n\n- Make sure the API endpoint you're using returns JSON data in the expected format.\n- Adjust the filtering logic as per your requirements.\n- Handle any additional error cases that might be specific to the API you're using.\n- For production-level code, consider adding more robust error handling and logging."
    }
]