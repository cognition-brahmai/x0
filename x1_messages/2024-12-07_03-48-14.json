[
    {
        "role": "user",
        "content": "Write a PHP script that connects to a MySQL database and performs CRUD operations on a table named \"products\". Each product should have a name, price, category, and image URL. Use prepared statements to prevent SQL injection attacks."
    },
    {
        "role": "assistant",
        "content": "Here is a PHP script that connects to a MySQL database and performs CRUD operations on a table named \"products\". Each product has a name, price, category, and image URL. The script uses prepared statements to prevent SQL injection attacks.\n\nFirst, make sure you have a MySQL database set up with a table named \"products\" having the following columns:\n\n- id (INT, AUTO_INCREMENT, PRIMARY KEY)\n\n- name (VARCHAR)\n\n- price (DECIMAL)\n\n- category (VARCHAR)\n\n- image_url (VARCHAR)\n\nReplace the database connection details (host, username, password, database name) in the script with your actual database information.\n\n```php\n<?php\n\n// Database connection details\n\n$host = 'localhost';\n\n$username = 'your_username';\n\n$password = 'your_password';\n\n$database = 'your_database';\n\n// Create a connection to the database\n\n$conn = new mysqli($host, $username, $password, $database);\n\n// Check the connection\n\nif ($conn->connect_error) {\n\n    die(\"Connection failed: \" . $conn->connect_error);\n\n}\n\n// Function to create a new product\n\nfunction createProduct($name, $price, $category, $image_url)\n\n{\n\n    global $conn;\n\n    // Prepare the SQL statement\n\n    $stmt = $conn->prepare(\"INSERT INTO products (name, price, category, image_url) VALUES (?, ?, ?, ?)\");\n\n    // Bind parameters\n\n    $stmt->bind_param(\"sdss\", $name, $price, $category, $image_url);\n\n    // Execute the statement\n\n    if ($stmt->execute()) {\n\n        echo \"Product created successfully.\";\n\n    } else {\n\n        echo \"Error creating product: \" . $stmt->error;\n\n    }\n\n    // Close the statement\n\n    $stmt->close();\n\n}\n\n// Function to read all products\n\nfunction readProducts()\n\n{\n\n    global $conn;\n\n    // Prepare the SQL statement\n\n    $stmt = $conn->prepare(\"SELECT id, name, price, category, image_url FROM products\");\n\n    // Execute the statement\n\n    $stmt->execute();\n\n    // Get the result\n\n    $result = $stmt->get_result();\n\n    // Fetch and display the products\n\n    while ($row = $result->fetch_assoc()) {\n\n        echo \"ID: \" . $row['id'] . \", Name: \" . $row['name'] . \", Price: \" . $row['price'] . \", Category: \" . $row['category'] . \", Image URL: \" . $row['image_url'] . \"<br>\";\n\n    }\n\n    // Close the statement\n\n    $stmt->close();\n\n}\n\n// Function to update a product\n\nfunction updateProduct($id, $name, $price, $category, $image_url)\n\n{\n\n    global $conn;\n\n    // Prepare the SQL statement\n\n    $stmt = $conn->prepare(\"UPDATE products SET name=?, price=?, category=?, image_url=? WHERE id=?\");\n\n    // Bind parameters\n\n    $stmt->bind_param(\"sdssi\", $name, $price, $category, $image_url, $id);\n\n    // Execute the statement\n\n    if ($stmt->execute()) {\n\n        echo \"Product updated successfully.\";\n\n    } else {\n\n        echo \"Error updating product: \" . $stmt->error;\n\n    }\n\n    // Close the statement\n\n    $stmt->close();\n\n}\n\n// Function to delete a product\n\nfunction deleteProduct($id)\n\n{\n\n    global $conn;\n\n    // Prepare the SQL statement\n\n    $stmt = $conn->prepare(\"DELETE FROM products WHERE id=?\");\n\n    // Bind parameter\n\n    $stmt->bind_param(\"i\", $id);\n\n    // Execute the statement\n\n    if ($stmt->execute()) {\n\n        echo \"Product deleted successfully.\";\n\n    } else {\n\n        echo \"Error deleting product: \" . $stmt->error;\n\n    }\n\n    // Close the statement\n\n    $stmt->close();\n\n}\n\n// Example usage:\n\n// Create a new product\n\ncreateProduct('Sample Product', 19.99, 'Electronics', 'https://example.com/image.jpg');\n\n// Read all products\n\nreadProducts();\n\n// Update a product with ID 1\n\nupdateProduct(1, 'Updated Product', 29.99, 'Technology', 'https://example.com/updated_image.jpg');\n\n// Delete a product with ID 2\n\ndeleteProduct(2);\n\n// Close the database connection\n\n$conn->close();\n\n?>\n```\n\nThis script includes functions for creating, reading, updating, and deleting products in the \"products\" table. Make sure to replace the database connection details with your actual database information.\n\nNote: This script is for demonstration purposes and should be adapted to fit into a larger application structure, including proper error handling and security measures."
    }
]