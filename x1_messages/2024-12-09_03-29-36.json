[
    {
        "role": "user",
        "content": "Write a Golang program that calculates the factorial of a given non-negative integer using both recursive and iterative approaches.\nPLAINFORMAT"
    },
    {
        "role": "assistant",
        "content": "Sure! Below is a simple Golang program that calculates the factorial of a given non-negative integer using both recursive and iterative approaches.\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n)\n\n// Recursive approach to calculate factorial\nfunc factorialRecursive(n int) int {\n\tif n == 0 {\n\t\treturn 1\n\t}\n\treturn n * factorialRecursive(n-1)\n}\n\n// Iterative approach to calculate factorial\nfunc factorialIterative(n int) int {\n\tresult := 1\n\tfor i := 2; i <= n; i++ {\n\t\tresult *= i\n\t}\n\treturn result\n}\n\nfunc main() {\n\tvar number int\n\tfmt.Print(\"Enter a non-negative integer: \")\n\tfmt.Scan(&number)\n\n\tif number < 0 {\n\t\tfmt.Println(\"Factorial is not defined for negative numbers.\")\n\t} else {\n\t\tfmt.Printf(\"Factorial using recursion: %d\\n\", factorialRecursive(number))\n\t\tfmt.Printf(\"Factorial using iteration: %d\\n\", factorialIterative(number))\n\t}\n}\n```\n\n### Explanation:\n1. **Recursive Approach:**\n   - The function `factorialRecursive` calculates the factorial using recursion.\n   - If the input `n` is 0, it returns 1 (since 0! = 1).\n   - Otherwise, it returns `n` multiplied by the factorial of `n-1`.\n\n2. **Iterative Approach:**\n   - The function `factorialIterative` calculates the factorial using a loop.\n   - It initializes a result variable to 1.\n   - It then iterates from 2 to `n`, multiplying the result by each number in this range.\n\n3. **Main Function:**\n   - It prompts the user to enter a non-negative integer.\n   - It reads the input and checks if it's negative.\n   - If the number is non-negative, it calculates and prints the factorial using both methods.\n\nThis program demonstrates both recursive and iterative techniques for calculating factorial, which are fundamental concepts in programming."
    }
]