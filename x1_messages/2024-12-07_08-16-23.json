[
    {
        "role": "user",
        "content": "Implement a recursive Python function that solves the Tower of Hanoi problem for n disks. The function should print the steps required to solve the puzzle. PLAINFORMAT"
    },
    {
        "role": "assistant",
        "content": "Sure! The Tower of Hanoi is a classic recursive problem. Here's how you can implement it in Python:\n\n```python\ndef hanoi(n, source, auxiliary, target):\n    if n > 0:\n        # Move n-1 disks from source to auxiliary, so they are out of the way\n        hanoi(n - 1, source, target, auxiliary)\n        \n        # Move the nth disk from source to target\n        print(f\"Move disk {n} from {source} to {target}\")\n        \n        # Move the n-1 disks that we left on auxiliary to target\n        hanoi(n - 1, auxiliary, source, target)\n\n# Example usage:\nhanoi(3, 'A', 'B', 'C')\n```\n\nIn this code:\n\n- `n` is the number of disks.\n\n- `source` is the starting tower.\n\n- `auxiliary` is the auxiliary tower.\n\n- `target` is the target tower.\n\nThe function recursively moves `n-1` disks from the source to the auxiliary tower, then moves the largest disk to the target tower, and finally moves the `n-1` disks from the auxiliary to the target tower."
    }
]