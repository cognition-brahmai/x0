[
    {
        "role": "user",
        "content": "In JavaScript, write a function that shuffles an array."
    },
    {
        "role": "assistant",
        "content": "Certainly! Here's a simple function in JavaScript that shuffles an array using the Fisher-Yates (Knuth) shuffle algorithm:\n\n```javascript\nfunction shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n}\n\n// Example usage:\nconst myArray = [1, 2, 3, 4, 5];\nconsole.log(shuffleArray(myArray));\n```\n\nThis function works by iterating over the array from the last element to the first. For each element, it selects a random index that comes before or is the current element itself and swaps them. This ensures that each permutation of the array is equally likely.\n\n**Explanation:**\n1. **Loop through the array backwards:** Starting from the last element down to the first.\n2. **Generate a random index:** For each element, pick a random index that is less than or equal to the current index.\n3. **Swap elements:** Swap the current element with the element at the randomly selected index.\n4. **Return the shuffled array:** Once all elements have been processed, return the shuffled array.\n\nThis algorithm is efficient and ensures a uniform shuffle of the array."
    }
]