[
    {
        "role": "user",
        "content": "Implement a Python script that interacts with PostgreSQL to create a new database, add a \"users\" table with columns for id, name, email, and age, and insert sample data into the table.\nPLAINFORMAT"
    },
    {
        "role": "assistant",
        "content": "Certainly! Below is a Python script that uses the `psycopg2` library to interact with PostgreSQL. This script will create a new database, add a \"users\" table with the specified columns, and insert some sample data into the table.\n\nFirst, make sure you have the `psycopg2` library installed. You can install it using pip if you haven't already:\n\n```bash\npip install psycopg2\n```\n\nHere's the Python script:\n\n```python\nimport psycopg2\nfrom psycopg2 import sql\n\n# Database connection parameters\ndbname = \"newdatabase\"\nuser = \"your_username\"\npassword = \"your_password\"\nhost = \"localhost\"\n\n# Connect to the default database to create a new database\nconn = psycopg2.connect(dbname=\"postgres\", user=user, password=password, host=host)\nconn.autocommit = True\ncursor = conn.cursor()\n\n# Create a new database\ncursor.execute(sql.SQL(\"CREATE DATABASE {}\").format(sql.Identifier(dbname)))\nprint(f\"Database '{dbname}' created successfully.\")\n\n# Close the connection to the default database\ncursor.close()\nconn.close()\n\n# Connect to the new database\nconn = psycopg2.connect(dbname=dbname, user=user, password=password, host=host)\ncursor = conn.cursor()\n\n# Create a \"users\" table\ncursor.execute(\"\"\"\n    CREATE TABLE users (\n        id SERIAL PRIMARY KEY,\n        name VARCHAR(100),\n        email VARCHAR(100),\n        age INTEGER\n    )\n\"\"\")\nprint(\"Table 'users' created successfully.\")\n\n# Insert sample data into the \"users\" table\nsample_data = [\n    (\"Alice\", \"alice@example.com\", 30),\n    (\"Bob\", \"bob@example.com\", 25),\n    (\"Charlie\", \"charlie@example.com\", 35)\n]\n\ninsert_query = \"\"\"\n    INSERT INTO users (name, email, age)\n    VALUES (%s, %s, %s)\n\"\"\"\n\nfor user in sample_data:\n    cursor.execute(insert_query, user)\n\nconn.commit()\nprint(\"Sample data inserted successfully.\")\n\n# Close the connection\ncursor.close()\nconn.close()\n```\n\n### Explanation:\n\n1. **Connecting to the Default Database:**\n   - We first connect to the default PostgreSQL database (`postgres`) to create a new database.\n\n2. **Creating a New Database:**\n   - Using the `CREATE DATABASE` SQL command, we create a new database named `newdatabase`.\n\n3. **Connecting to the New Database:**\n   - We then connect to the newly created database.\n\n4. **Creating the \"users\" Table:**\n   - We create a table named `users` with columns for `id` (auto-incremented), `name`, `email`, and `age`.\n\n5. **Inserting Sample Data:**\n   - We insert sample data into the `users` table using parameterized queries to prevent SQL injection.\n\n6. **Closing Connections:**\n   - Finally, we close the cursor and the connection to clean up.\n\nMake sure to replace `\"your_username\"` and `\"your_password\"` with your actual PostgreSQL username and password. Also, adjust the `host` if your database is not running on localhost.\n\nThis script should be run in an environment where PostgreSQL is installed and accessible with the provided credentials."
    }
]