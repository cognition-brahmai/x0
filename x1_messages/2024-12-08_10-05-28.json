[
    {
        "role": "user",
        "content": "Write a C++ program that simulates a simple command-line calculator, accepting two numbers and an operator (+, -, *, /) as input, performing the operation, and outputting the result."
    },
    {
        "role": "assistant",
        "content": "Certainly! Below is a simple C++ program that acts as a command-line calculator. It prompts the user to enter two numbers and an operator, then performs the specified operation and displays the result.\n\n```cpp\n#include <iostream>\nusing namespace std;\n\nint main() {\n    double num1, num2;\n    char operator;\n\n    cout << \"Simple Calculator\" << endl;\n    cout << \"Enter first number: \";\n    cin >> num1;\n    cout << \"Enter operator (+, -, *, /): \";\n    cin >> operator;\n    cout << \"Enter second number: \";\n    cin >> num2;\n\n    switch (operator) {\n        case '+':\n            cout << \"Result: \" << num1 + num2 << endl;\n            break;\n        case '-':\n            cout << \"Result: \" << num1 - num2 << endl;\n            break;\n        case '*':\n            cout << \"Result: \" << num1 * num2 << endl;\n            break;\n        case '/':\n            if (num2 != 0) {\n                cout << \"Result: \" << num1 / num2 << endl;\n            } else {\n                cout << \"Error! Division by zero.\" << endl;\n            }\n            break;\n        default:\n            cout << \"Invalid operator. Please use +, -, *, or /.\" << endl;\n            break;\n    }\n\n    return 0;\n}\n```\n\n### Explanation:\n1. **Include necessary headers**: We include `<iostream>` for input and output operations.\n2. **Declare variables**: We declare `num1`, `num2` as `double` to handle floating-point numbers and `operator` as `char` to store the operation symbol.\n3. **Prompt user for input**: We use `cout` to display messages and `cin` to read user inputs for the numbers and the operator.\n4. **Perform the operation using a switch statement**:\n   - For addition (`+`), subtraction (`-`), multiplication (`*`), and division (`/`), we perform the respective operations.\n   - For division, we check if the denominator is zero to avoid division by zero errors.\n   - If an invalid operator is entered, we display an error message.\n5. **End the program**: The `return 0;` statement indicates that the program has ended successfully.\n\nThis program provides a basic framework for a command-line calculator and can be expanded with more features as needed."
    }
]