[
    {
        "role": "user",
        "content": "Develop a PHP script that connects to a MySQL database and retrieves data from a table named \"employees\" with columns \"id\", \"first_name\", \"last_name\", \"email\", and \"salary\". The script should display the employees' full names and emails in an HTML table, and calculate the average salary of all employees.\nPLAINFORMAT"
    },
    {
        "role": "assistant",
        "content": "Alright, I've got this task to create a PHP script that connects to a MySQL database and fetches data from a table called \"employees.\" The table has columns like id, first_name, last_name, email, and salary. I need to display the employees' full names and emails in an HTML table and also calculate the average salary of all employees.\n\nFirst things first, I need to set up the database connection. In PHP, I can use MySQLi or PDO to connect to a MySQL database. Since MySQLi is more efficient and secure, I'll go with that. I need to know the database host, username, password, and database name to establish the connection.\n\nAssuming I have that information, I can proceed to write the connection code. Here's a basic structure:\n\n```php\n$host = 'localhost';\n$username = 'your_username';\n$password = 'your_password';\n$dbname = 'your_database';\n\n// Create connection\n$conn = new mysqli($host, $username, $password, $dbname);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n```\n\nNext, I need to retrieve data from the \"employees\" table. I'll write a SQL query to select the id, first_name, last_name, and email columns. Since I also need to calculate the average salary, I'll include that in the query as well.\n\nHere's the SQL query:\n\n```sql\nSELECT id, first_name, last_name, email, salary FROM employees;\n```\n\nI'll execute this query using MySQLi and fetch the results. While fetching the results, I'll calculate the total salary and count the number of employees to calculate the average later.\n\nIn PHP, I can do something like this:\n\n```php\n$sql = \"SELECT id, first_name, last_name, email, salary FROM employees\";\n$result = $conn->query($sql);\n\nif ($result->num_rows > 0) {\n    // Output data of each row\n    while($row = $result->fetch_assoc()) {\n        // Collect data for HTML table\n        $full_name = $row[\"first_name\"] . \" \" . $row[\"last_name\"];\n        $email = $row[\"email\"];\n        // Add to table rows\n        $table_rows .= \"<tr><td>$full_name</td><td>$email</td></tr>\";\n        // Calculate total salary\n        $total_salary += $row[\"salary\"];\n        $count++;\n    }\n} else {\n    echo \"0 results\";\n}\n```\n\nAfter fetching all the rows, I can calculate the average salary by dividing the total salary by the number of employees.\n\n```php\n$average_salary = $count > 0 ? $total_salary / $count : 0;\n```\n\nNow, I need to display the data in an HTML table. I'll create an HTML table structure and insert the rows I collected earlier.\n\nHere's an example:\n\n```html\n<table border=\"1\">\n    <tr>\n        <th>Full Name</th>\n        <th>Email</th>\n    </tr>\n    <?php echo $table_rows; ?>\n</table>\n<br>\nAverage Salary: <?php echo $average_salary; ?>\n```\n\nDon't forget to close the database connection after you're done.\n\n```php\n$conn->close();\n```\n\nPutting it all together, here's the complete PHP script:\n\n```php\n<?php\n$host = 'localhost';\n$username = 'your_username';\n$password = 'your_password';\n$dbname = 'your_database';\n\n// Create connection\n$conn = new mysqli($host, $username, $password, $dbname);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n$sql = \"SELECT id, first_name, last_name, email, salary FROM employees\";\n$result = $conn->query($sql);\n\n$table_rows = \"\";\n$total_salary = 0;\n$count = 0;\n\nif ($result->num_rows > 0) {\n    while($row = $result->fetch_assoc()) {\n        $full_name = $row[\"first_name\"] . \" \" . $row[\"last_name\"];\n        $email = $row[\"email\"];\n        $table_rows .= \"<tr><td>$full_name</td><td>$email</td></tr>\";\n        $total_salary += $row[\"salary\"];\n        $count++;\n    }\n} else {\n    echo \"0 results\";\n}\n\n$average_salary = $count > 0 ? $total_salary / $count : 0;\n\n$conn->close();\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Employees</title>\n</head>\n<body>\n    <table border=\"1\">\n        <tr>\n            <th>Full Name</th>\n            <th>Email</th>\n        </tr>\n        <?php echo $table_rows; ?>\n    </table>\n    <br>\n    Average Salary: <?php echo $average_salary; ?>\n</body>\n</html>\n```\n\nMake sure to replace 'your_username', 'your_password', and 'your_database' with your actual database credentials.\n\nThis script connects to the database, retrieves the employees' data, displays it in an HTML table, and calculates the average salary. It's a straightforward task once you understand the steps involved.\n\n**Additional Considerations:**\n\n1. **Security:** Always sanitize user inputs to prevent SQL injection attacks. In this script, since there are no user inputs, it's less of a concern, but it's good to keep in mind for more dynamic queries.\n\n2. **Error Handling:** Improve error handling to manage different scenarios, like database connection failures or no data found.\n\n3. **Performance:** For large datasets, consider optimizing the query or implementing pagination to improve performance.\n\n4. **Styling:** You can add CSS to style the HTML table for better readability.\n\n5. **Configuration:** It's a good practice to store database credentials in a separate configuration file and include it in your script to avoid hardcoding sensitive information.\n\nI hope this helps! Let me know if you have any questions or need further assistance."
    }
]