[
    {
        "role": "user",
        "content": "Please generate a step-by-step plan to answer the following question, making use of the available tools. Each plan will have a corresponding evidence value which is the output of one of the functions given an input string that can be the user's question, previous evidence values or both.\n\nHere are the tools available to be called:\nDuckDuckGo[input]: A tool that allows the user to search for information using the DuckDuckGo search engine. This tool is useful in finding relevant sites that may contain the answer to the user's question.\nTextExtractor[input]: Extracts plain text from websites provided as newline delimited links in the input string.\nLinkPicker[input]: Picks out links from plain text and produces a plain text response with newline separated links.\nALM[input]: An advanced language model designed to answer questions based on an input passage of text. The input must be a text question referencing an :evidence[n]: variable, e.g., What color is the cat, given :evidence1:?\n\nThe output should be in format:\nPlan: [first action to take based on input question]\n:evidence0: = [function to call with input parameter]\nPlan: [next action to take, based on result of :evidence0:]\n:evidence1: = [next function to call and input parameter, which may include reference to previous evidence, e.g. \"Given context :evidence0\"]\n...\nAnswer: [:evidence[n]: containing the final answer.]\n\nQuestion: Who won the Nobel Prize in Literature in 2020 and what is their most famous work?"
    },
    {
        "role": "assistant",
        "content": "Plan: Start by searching for who won the Nobel Prize in Literature in 2020.\n:evidence0: = DuckDuckGo[\"Nobel Prize in Literature 2020 winner\"]\n\nPlan: Extract relevant information from the search results to determine the winner.\n:evidence1: = ALM[\"Who won the Nobel Prize in Literature in 2020? Given context: :evidence0:\"]\n\nPlan: Once the winner is known, search for their most famous work.\n:evidence2: = DuckDuckGo[\":evidence1: most famous work\"]\n\nPlan: Extract links from the search results for more detailed information.\n:evidence3: = LinkPicker[:evidence2:]\n\nPlan: Extract text from the relevant links.\n:evidence4: = TextExtractor[:evidence3:]\n\nPlan: Use the extracted text to identify and summarize the most famous work of the Nobel laureate.\n:evidence5: = ALM[\"What is the most famous work of :evidence1:? Given context: :evidence4:\"]\n\nAnswer: :evidence5:"
    }
]