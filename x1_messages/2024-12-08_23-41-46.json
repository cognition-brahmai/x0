[
    {
        "role": "user",
        "content": "Write a Python script that utilizes regular expressions to extract email addresses from a given text file and saves them into a separate output file, one email address per line.\nPLAINFORMAT"
    },
    {
        "role": "assistant",
        "content": "Sure, I can help you with that. To accomplish this task, you'll need to use Python's built-in modules for handling files and regular expressions. Here's a step-by-step guide on how to write this script:\n\n1. **Reading the Input File:**\n   - You need to read the content of the text file where the email addresses are present.\n\n2. **Extracting Email Addresses:**\n   - Use regular expressions (regex) to find all occurrences of email addresses in the text.\n\n3. **Writing to the Output File:**\n   - Save each extracted email address into a new file, with each email on a separate line.\n\n### Solution Code\n\n```python\nimport re\n\ndef extract_emails(input_file, output_file):\n    # Define the regex pattern for matching email addresses\n    email_pattern = r'\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b'\n    \n    # Read the input file\n    with open(input_file, 'r') as file:\n        content = file.read()\n    \n    # Find all email addresses using the regex pattern\n    emails = re.findall(email_pattern, content)\n    \n    # Write the emails to the output file, one per line\n    with open(output_file, 'w') as file:\n        for email in emails:\n            file.write(email + '\\n')\n\n# Example usage\ninput_file = 'input.txt'  # Replace with your input file path\noutput_file = 'emails.txt'  # Replace with your output file path\nextract_emails(input_file, output_file)\n```\n\n### Explanation\n\n1. **Regex Pattern:**\n   - The pattern `r'\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b'` is used to match email addresses.\n   - `\\b` ensures that we are matching whole words.\n   - `[A-Za-z0-9._%+-]+` matches the local part of the email.\n   - `@` is the literal character.\n   - `[A-Za-z0-9.-]+` matches the domain name.\n   - `\\.[A-Z|a-z]{2,}\\b` matches the top-level domain.\n\n2. **Reading the File:**\n   - The `open` function is used to read the content of the input file in read mode (`'r'`).\n\n3. **Finding Emails:**\n   - `re.findall` searches for all occurrences that match the pattern and returns them as a list.\n\n4. **Writing to File:**\n   - The `open` function is used again, this time in write mode (`'w'`), to create or overwrite the output file.\n   - Each email address is written followed by a newline character to ensure they are on separate lines.\n\nThis script is straightforward and efficient for extracting email addresses from text files using Python's regular expressions."
    }
]