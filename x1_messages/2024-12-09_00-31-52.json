[
    {
        "role": "user",
        "content": "Write a Python program that simulates a simple banking system with basic functionalities such as deposit, withdraw, and check balance. The user should be able to interact with the program through the command line.\nPLAINFORMAT"
    },
    {
        "role": "assistant",
        "content": "Alright, I'm going to help you create a simple banking system using Python. This program will allow users to deposit money, withdraw money, and check their balance. We'll keep it straightforward for now, focusing on the core functionalities.\n\nFirst, make sure you have Python installed on your computer. You can download it from python.org if you haven't already.\n\nLet's start by understanding what we need:\n\n1. **Deposit**: Add money to the account.\n2. **Withdraw**: Take money out of the account.\n3. **Check Balance**: See how much money is in the account.\n\nWe'll store the account balance in a variable and perform operations on it based on user input.\n\nHere's a step-by-step guide to building this program:\n\n### Step 1: Initialize the Account\n\nWe need to start with an initial balance. For simplicity, let's set it to zero.\n\n```python\nbalance = 0\n```\n\n### Step 2: Create Functions for Depositing and Withdrawing\n\nWe'll define two functions: one for depositing money and another for withdrawing money.\n\n#### Deposit Function\n\nThis function should take an amount as input and add it to the balance.\n\n```python\ndef deposit(amount):\n    global balance\n    balance += amount\n    print(f\"Deposited: ${amount}. New balance: ${balance}\")\n```\n\n#### Withdraw Function\n\nThis function should take an amount as input and subtract it from the balance, but only if there's enough money.\n\n```python\ndef withdraw(amount):\n    global balance\n    if balance >= amount:\n        balance -= amount\n        print(f\"Withdrew: ${amount}. New balance: ${balance}\")\n    else:\n        print(\"Insufficient funds.\")\n```\n\n### Step 3: Create a Function to Check Balance\n\nThis function will simply print the current balance.\n\n```python\ndef check_balance():\n    print(f\"Current balance: ${balance}\")\n```\n\n### Step 4: Create a Menu for User Interaction\n\nWe'll use a loop to keep displaying options to the user until they choose to exit.\n\n```python\ndef main():\n    while True:\n        print(\"\\nWelcome to Simple Bank\")\n        print(\"1. Deposit\")\n        print(\"2. Withdraw\")\n        print(\"3. Check Balance\")\n        print(\"4. Exit\")\n        \n        choice = input(\"Enter choice (1-4): \")\n        \n        if choice == '1':\n            amount = float(input(\"Enter amount to deposit: \"))\n            deposit(amount)\n        elif choice == '2':\n            amount = float(input(\"Enter amount to withdraw: \"))\n            withdraw(amount)\n        elif choice == '3':\n            check_balance()\n        elif choice == '4':\n            print(\"Thank you for using Simple Bank!\")\n            break\n        else:\n            print(\"Invalid choice. Please try again.\")\n```\n\n### Step 5: Run the Program\n\nCall the `main()` function to start the program.\n\n```python\nif __name__ == \"__main__\":\n    main()\n```\n\n### Complete Code\n\nPutting it all together:\n\n```python\nbalance = 0\n\ndef deposit(amount):\n    global balance\n    balance += amount\n    print(f\"Deposited: ${amount}. New balance: ${balance}\")\n\ndef withdraw(amount):\n    global balance\n    if balance >= amount:\n        balance -= amount\n        print(f\"Withdrew: ${amount}. New balance: ${balance}\")\n    else:\n        print(\"Insufficient funds.\")\n\ndef check_balance():\n    print(f\"Current balance: ${balance}\")\n\ndef main():\n    while True:\n        print(\"\\nWelcome to Simple Bank\")\n        print(\"1. Deposit\")\n        print(\"2. Withdraw\")\n        print(\"3. Check Balance\")\n        print(\"4. Exit\")\n        \n        choice = input(\"Enter choice (1-4): \")\n        \n        if choice == '1':\n            amount = float(input(\"Enter amount to deposit: \"))\n            deposit(amount)\n        elif choice == '2':\n            amount = float(input(\"Enter amount to withdraw: \"))\n            withdraw(amount)\n        elif choice == '3':\n            check_balance()\n        elif choice == '4':\n            print(\"Thank you for using Simple Bank!\")\n            break\n        else:\n            print(\"Invalid choice. Please try again.\")\n\nif __name__ == \"__main__\":\n    main()\n```\n\n### Explanation\n\n- **Initialization**: We start with a balance of zero.\n- **Functions**: We have functions to deposit, withdraw, and check balance, each performing their respective operations.\n- **Menu**: A loop presents options to the user until they choose to exit.\n- **User Input**: The program takes user input to decide which operation to perform.\n\nThis is a very basic version. In a real-world scenario, you'd need to handle more complexities like multiple accounts, security, and persistent storage. But for learning purposes, this should be a good start!\n\nIf you have any questions or need further assistance, feel free to ask."
    }
]