[
    {
        "role": "user",
        "content": "Implement a Python class for a simple shopping cart system, with methods for adding items (with quantity and price), removing items, updating item quantities, calculating the total cost, and applying discount codes. PLAINFORMAT"
    },
    {
        "role": "assistant",
        "content": "class ShoppingCart:\n    def __init__(self):\n        self.items = {}\n\n    def add_item(self, item_name, quantity, price):\n        if item_name in self.items:\n            self.items[item_name]['quantity'] += quantity\n        else:\n            self.items[item_name] = {'quantity': quantity, 'price': price}\n\n    def remove_item(self, item_name):\n        if item_name in self.items:\n            del self.items[item_name]\n        else:\n            print(f\"{item_name} not found in the cart.\")\n\n    def update_quantity(self, item_name, new_quantity):\n        if item_name in self.items:\n            self.items[item_name]['quantity'] = new_quantity\n        else:\n            print(f\"{item_name} not found in the cart.\")\n\n    def calculate_total(self):\n        total = 0\n        for item in self.items.values():\n            total += item['quantity'] * item['price']\n        return total\n\n    def apply_discount(self, discount_code):\n        # This is a placeholder for discount application logic\n        # In a real scenario, you would have a dictionary or database of discount codes and their percentages\n        discounts = {\n            'SAVE10': 10,\n            'SAVE20': 20,\n            # Add more discount codes here\n        }\n        \n        if discount_code in discounts:\n            discount_percentage = discounts[discount_code]\n            discount_amount = (discount_percentage / 100) * self.calculate_total()\n            return self.calculate_total() - discount_amount\n        else:\n            print(\"Invalid discount code.\")\n            return self.calculate_total()\n\n# Example usage:\ncart = ShoppingCart()\ncart.add_item(\"Apple\", 10, 0.5)\ncart.add_item(\"Banana\", 5, 0.3)\nprint(\"Total before discount:\", cart.calculate_total())\nprint(\"Total after discount:\", cart.apply_discount(\"SAVE10\"))\n"
    }
]