[
    {
        "role": "user",
        "content": "Implement a Java class representing a simple calculator with methods for addition, subtraction, multiplication, and division. Include error handling for division by zero."
    },
    {
        "role": "assistant",
        "content": "Sure! Below is an implementation of a simple calculator in Java that includes methods for addition, subtraction, multiplication, and division. It also handles the error case where division by zero might occur.\n\n```java\npublic class SimpleCalculator {\n\n    // Method to add two numbers\n    public double add(double num1, double num2) {\n        return num1 + num2;\n    }\n\n    // Method to subtract two numbers\n    public double subtract(double num1, double num2) {\n        return num1 - num2;\n    }\n\n    // Method to multiply two numbers\n    public double multiply(double num1, double num2) {\n        return num1 * num2;\n    }\n\n    // Method to divide two numbers with error handling for division by zero\n    public double divide(double num1, double num2) {\n        if (num2 == 0) {\n            throw new IllegalArgumentException(\"Cannot divide by zero.\");\n        }\n        return num1 / num2;\n    }\n\n    public static void main(String[] args) {\n        SimpleCalculator calculator = new SimpleCalculator();\n\n        // Example usage:\n        System.out.println(\"Addition: \" + calculator.add(10, 5)); // Expected output: 15.0\n        System.out.println(\"Subtraction: \" + calculator.subtract(10, 5)); // Expected output: 5.0\n        System.out.println(\"Multiplication: \" + calculator.multiply(10, 5)); // Expected output: 50.0\n        try {\n            System.out.println(\"Division: \" + calculator.divide(10, 0)); // This should throw an exception\n        } catch (IllegalArgumentException e) {\n            System.err.println(e.getMessage());\n        }\n    }\n}\n```\n\n### Explanation:\n1. **Addition (`add` method)**: Takes two doubles and returns their sum.\n2. **Subtraction (`subtract` method)**: Takes two doubles and returns the result of subtracting the second from the first.\n3. **Multiplication (`multiply` method)**: Takes two doubles and returns their product.\n4. **Division (`divide` method)**: Takes two doubles, checks if the divisor is zero, and either returns the division result or throws an `IllegalArgumentException`.\n\nThe `main` method demonstrates how to use these methods and handles the exception thrown during division by zero."
    }
]