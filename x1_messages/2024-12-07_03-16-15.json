[
    {
        "role": "user",
        "content": "Develop a bash script that accepts a directory path as an argument and calculates the total size of all files within the directory (including subdirectories). The script should print the result in human-readable format (e.g., KB, MB, GB).\nPLAINFORMAT"
    },
    {
        "role": "assistant",
        "content": "Sure! I can help you with that. Let's create a bash script that calculates the total size of all files in a given directory, including its subdirectories, and displays the result in a human-readable format.\n\nFirst, we need to understand what needs to be done:\n\n1. **Accept a directory path as an argument:** The script should take one argument, which is the path to the directory whose files' sizes we want to calculate.\n\n2. **Calculate the total size:** We need to sum up the sizes of all files in the specified directory and its subdirectories.\n\n3. **Display the result in human-readable format:** The total size should be presented in units like KB, MB, or GB, depending on the magnitude.\n\nTo achieve this, we can use some standard Unix/Linux commands like `du` (disk usage), which is perfect for calculating disk space usage.\n\nHere's a step-by-step plan:\n\n- Check if exactly one argument is provided. If not, print an error message and exit.\n\n- Check if the provided argument is a valid directory. If not, print an error message and exit.\n\n- Use the `du` command to calculate the total disk usage of the directory and its contents.\n\n- Format the output to be human-readable.\n\nLet's start writing the script.\n\n## Final Solution\nTo solve this problem, we need to create a bash script that calculates the total size of all files within a given directory, including its subdirectories, and presents the result in a human-readable format.\n\n### Approach\n\n1. **Argument Handling:** Ensure that exactly one argument is provided, which is the directory path.\n2. **Directory Validation:** Check if the provided argument is a valid directory.\n3. **Disk Usage Calculation:** Use the `du` command to calculate the total size of the directory's contents.\n4. **Human-Readable Format:** Use the `-h` option with `du` to format the output in KB, MB, GB, etc.\n\n### Solution Code\n\n```bash\n#!/bin/bash\n\n# Check if exactly one argument is provided\nif [ \"$#\" -ne 1 ]; then\n    echo \"Usage: $0 DIRECTORY\"\n    exit 1\nfi\n\n# Assign the first argument to DIR\nDIR=\"$1\"\n\n# Check if the provided argument is a directory\nif [ ! -d \"$DIR\" ]; then\n    echo \"Error: $DIR is not a directory.\"\n    exit 1\nfi\n\n# Calculate the total size of all files in the directory and print in human-readable format\ndu -sh \"$DIR\"\n\nexit 0\n```\n\n### Explanation\n\n1. **Argument Handling:** The script checks if exactly one argument is provided. If not, it prints a usage message and exits with status 1.\n2. **Directory Validation:** It verifies if the provided argument is a valid directory using the `-d` test.\n3. **Disk Usage Calculation:** The `du` command with options `-s` (summarize) and `-h` (human-readable) is used to calculate and display the total size of the directory.\n\nThis script provides a simple and efficient way to get the total size of a directory's contents in a user-friendly format."
    }
]