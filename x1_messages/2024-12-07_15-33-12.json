[
    {
        "role": "user",
        "content": "Write SQL queries to perform the following tasks on a database containing tables for \"Employees\", \"Departments\", and \"Salaries\":\n- Find the average salary for each department.\n- List employees who earn more than the average salary in their respective departments.\n- Count the number of employees in each department.\n- Identify the department with the highest total payroll."
    },
    {
        "role": "assistant",
        "content": "Sure, I can help you with that! Let's assume we have the following table structures:\n\n1. **Employees** table:\n   - emp_id (Primary Key)\n   - emp_name\n   - dept_id (Foreign Key referencing Departments.dept_id)\n\n2. **Departments** table:\n   - dept_id (Primary Key)\n   - dept_name\n\n3. **Salaries** table:\n   - salary_id (Primary Key)\n   - emp_id (Foreign Key referencing Employees.emp_id)\n   - salary_amount\n\nGiven these tables, here are the SQL queries for each task:\n\n### 1. Find the average salary for each department.\n\nTo find the average salary for each department, we need to join the `Employees` and `Salaries` tables on `emp_id`, and then group by `dept_id`. We can also join with the `Departments` table to get the department names.\n\n```sql\nSELECT d.dept_name, AVG(s.salary_amount) AS avg_salary\nFROM Departments d\nJOIN Employees e ON d.dept_id = e.dept_id\nJOIN Salaries s ON e.emp_id = s.emp_id\nGROUP BY d.dept_name;\n```\n\n### 2. List employees who earn more than the average salary in their respective departments.\n\nFor this, we need to first calculate the average salary for each department and then compare each employee's salary to this average. This can be achieved using a subquery or a window function.\n\n#### Using a subquery:\n\n```sql\nSELECT e.emp_name, s.salary_amount, d.dept_name\nFROM Employees e\nJOIN Salaries s ON e.emp_id = s.emp_id\nJOIN Departments d ON e.dept_id = d.dept_id\nWHERE s.salary_amount > (\n    SELECT AVG(s2.salary_amount)\n    FROM Salaries s2\n    JOIN Employees e2 ON s2.emp_id = e2.emp_id\n    WHERE e2.dept_id = e.dept_id\n);\n```\n\n#### Using a window function:\n\n```sql\nSELECT emp_name, salary_amount, dept_name\nFROM (\n    SELECT e.emp_name, s.salary_amount, d.dept_name,\n           AVG(s.salary_amount) OVER (PARTITION BY d.dept_name) AS avg_dept_salary\n    FROM Employees e\n    JOIN Salaries s ON e.emp_id = s.emp_id\n    JOIN Departments d ON e.dept_id = d.dept_id\n) sub\nWHERE salary_amount > avg_dept_salary;\n```\n\n### 3. Count the number of employees in each department.\n\nTo count the number of employees in each department, we can join the `Employees` and `Departments` tables and group by `dept_id`.\n\n```sql\nSELECT d.dept_name, COUNT(e.emp_id) AS num_employees\nFROM Departments d\nLEFT JOIN Employees e ON d.dept_id = e.dept_id\nGROUP BY d.dept_name;\n```\n\n### 4. Identify the department with the highest total payroll.\n\nTo find the department with the highest total payroll, we need to calculate the total salary for each department and then select the one with the maximum total.\n\n```sql\nSELECT d.dept_name, SUM(s.salary_amount) AS total_payroll\nFROM Departments d\nJOIN Employees e ON d.dept_id = e.dept_id\nJOIN Salaries s ON e.emp_id = s.emp_id\nGROUP BY d.dept_name\nORDER BY total_payroll DESC\nLIMIT 1;\n```\n\nThese queries should help you accomplish the tasks you've described. If you have any more questions or need further assistance, feel free to ask!"
    }
]