[
    {
        "role": "user",
        "content": "Create a Python script that generates random passwords based on given criteria (length, characters, symbols, etc.)."
    },
    {
        "role": "assistant",
        "content": "Certainly! Below is a Python script that generates random passwords based on specified criteria such as length, inclusion of uppercase letters, lowercase letters, digits, and special symbols.\n\n```python\nimport random\nimport string\n\ndef generate_password(length=12, uppercase=True, lowercase=True, digits=True, symbols=True):\n    if length < 4:\n        print(\"Password length should be at least 4.\")\n        return None\n\n    characters = ''\n    if uppercase:\n        characters += string.ascii_uppercase\n    if lowercase:\n        characters += string.ascii_lowercase\n    if digits:\n        characters += string.digits\n    if symbols:\n        characters += string.punctuation\n\n    if not characters:\n        print(\"At least one character set must be selected.\")\n        return None\n\n    # Ensure at least one character from each selected set is included\n    password = []\n    if uppercase:\n        password.append(random.choice(string.ascii_uppercase))\n    if lowercase:\n        password.append(random.choice(string.ascii_lowercase))\n    if digits:\n        password.append(random.choice(string.digits))\n    if symbols:\n        password.append(random.choice(string.punctuation))\n\n    # Fill the remaining length with random choices from all selected sets\n    remaining_length = length - len(password)\n    for _ in range(remaining_length):\n        password.append(random.choice(characters))\n\n    # Shuffle the password list to avoid predictable sequences\n    random.shuffle(password)\n\n    # Convert list to string\n    final_password = ''.join(password)\n    return final_password\n\nif __name__ == \"__main__\":\n    # Example usage:\n    password = generate_password(length=16, uppercase=True, lowercase=True, digits=True, symbols=True)\n    print(\"Generated Password:\", password)\n```\n\n### Explanation:\n1. **Parameters**:\n   - `length`: The desired length of the password (default is 12).\n   - `uppercase`, `lowercase`, `digits`, `symbols`: Booleans indicating whether to include respective character types.\n\n2. **Character Sets**:\n   - `string.ascii_uppercase`: Uppercase letters.\n   - `string.ascii_lowercase`: Lowercase letters.\n   - `string.digits`: Digits (0-9).\n   - `string.punctuation`: Special symbols.\n\n3. **Password Generation**:\n   - Ensure the password includes at least one character from each selected set.\n   - Fill the remaining length with random choices from all selected sets.\n   - Shuffle the password list to ensure randomness.\n   - Convert the list to a string and return the final password.\n\n4. **Validation**:\n   - Check if the length is at least 4.\n   - Ensure at least one character set is selected.\n\nFeel free to adjust the parameters as needed!"
    }
]