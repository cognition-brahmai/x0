[
    {
        "role": "user",
        "content": "Please generate a plan to answer the following question using the tools provided. Each step of your plan should correspond with an evidence value, which will be the output of one of the available functions given an input string that can be the user question, one or more previous evidence values, or a combination of both.\n\nHere are the tools available to be called:\nDuckDuckGo[input]: Tool that allows the user to search for information using the DuckDuckGo search engine. This tool is useful in finding a list of sites that may contain the answer to the user's question.\nWebReader[input]: Load one or more websites from the input string containing newline delimited links, where input is one or more links, and produces plain text output containing the content of the links.\nLinkPicker[input]: Extracts links from plain text and produces a plain text, newline delimited response of links.\nQAModel[input]: Question answering language model, particularly useful in answering questions based on an input passage of text. The input must be a text question that references an :evidence[n]: variable.\n\nThe output should be in format:\nPlan: [first action to take based in input question]\n:evidence0: = [function to call with input parameter]\nPlan: [next action to take, based on result of :evidence0:]\n:evidence1: = [next function to call and input parameter, which may include reference to previous evidence]\n...\nAnswer: [:evidence[n]: containing the final answer.]\n\nQuestion: What are some notable works by the author who wrote \"To Kill a Mockingbird\"?"
    },
    {
        "role": "assistant",
        "content": "Plan: Start by identifying the author of \"To Kill a Mockingbird.\"\n\n:evidence0: = QAModel[\"Who wrote 'To Kill a Mockingbird'?\"]\n\nPlan: Use the author's name from :evidence0: to search for their notable works.\n\n:evidence1: = DuckDuckGo[:evidence0: + \" notable works\"]\n\nPlan: Extract relevant links from the search results to find pages that list the author's works.\n\n:evidence2: = LinkPicker[:evidence1:]\n\nPlan: Read the content from the extracted links to find information about the author's notable works.\n\n:evidence3: = WebReader[:evidence2:]\n\nPlan: Use the gathered information to list the notable works by the author.\n\n:evidence4: = QAModel[\"What are some notable works by \" + :evidence0: + \"? Given :evidence3:\"]\n\nAnswer: :evidence4:"
    }
]