[
    {
        "role": "user",
        "content": "Create a Python script that reads a CSV file and outputs the data in JSON format. The script should accept command line arguments for input and output file paths."
    },
    {
        "role": "assistant",
        "content": "Creating a Python script to convert a CSV file to JSON format involves several steps. We'll use the `csv` module to read the CSV file and the `json` module to write the JSON output. Additionally, we'll use the `argparse` module to handle command-line arguments for input and output file paths.\n\n### Approach\n\n1. **Parse Command-Line Arguments:**\n   - Use `argparse` to accept input and output file paths.\n\n2. **Read the CSV File:**\n   - Use the `csv` module to read the CSV file.\n   - Assume the first row contains headers.\n\n3. **Convert CSV Data to JSON:**\n   - Convert each row of the CSV into a dictionary using the headers.\n   - Collect these dictionaries into a list.\n\n4. **Write the JSON Output:**\n   - Use the `json` module to write the list of dictionaries to the specified output file.\n\n### Solution Code\n\n```python\nimport csv\nimport json\nimport argparse\n\ndef csv_to_json(csv_file, json_file):\n    data = []\n    with open(csv_file, mode='r', encoding='utf-8') as file:\n        csv_reader = csv.DictReader(file)\n        for row in csv_reader:\n            data.append(row)\n    with open(json_file, mode='w', encoding='utf-8') as file:\n        json.dump(data, file, indent=4)\n\ndef main():\n    parser = argparse.ArgumentParser(description='Convert CSV to JSON.')\n    parser.add_argument('input', type=str, help='Path to the input CSV file')\n    parser.add_argument('output', type=str, help='Path to the output JSON file')\n    args = parser.parse_args()\n    csv_to_json(args.input, args.output)\n\nif __name__ == \"__main__\":\n    main()\n```\n\n### Explanation\n\n1. **Command-Line Argument Parsing:**\n   - We define an argument parser that expects two arguments: `input` for the CSV file path and `output` for the JSON file path.\n\n2. **Reading the CSV File:**\n   - We open the CSV file and use `csv.DictReader` to read the file into a dictionary format, where keys are the column headers and values are the respective cells in each row.\n\n3. **Converting to JSON:**\n   - Each row from the CSV is appended to a list as a dictionary.\n   - We then write this list to a JSON file using `json.dump`, with an indentation of 4 for better readability.\n\n4. **Execution:**\n   - The script is designed to be run from the command line, accepting the input and output file paths as arguments.\n\nThis script provides a straightforward way to convert CSV data to JSON format, making it useful for data transformation tasks."
    }
]