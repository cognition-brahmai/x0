[
    {
        "role": "user",
        "content": "Write a python script that accepts an integer n as input and prints the first n Fibonacci numbers."
    },
    {
        "role": "assistant",
        "content": "Certainly! Below is a Python script that accepts an integer `n` as input and prints the first `n` Fibonacci numbers.\n\n```python\ndef fibonacci(n):\n    fib_sequence = []\n    if n <= 0:\n        print(\"Please enter a positive integer.\")\n    elif n == 1:\n        fib_sequence = [0]\n    elif n == 2:\n        fib_sequence = [0, 1]\n    else:\n        fib_sequence = [0, 1]\n        for i in range(2, n):\n            next_num = fib_sequence[-1] + fib_sequence[-2]\n            fib_sequence.append(next_num)\n    return fib_sequence\n\ndef main():\n    try:\n        n = int(input(\"Enter the number of Fibonacci numbers to generate: \"))\n        if n < 0:\n            print(\"Please enter a non-negative integer.\")\n        else:\n            result = fibonacci(n)\n            print(\"The first\", n, \"Fibonacci numbers are:\", result)\n    except ValueError:\n        print(\"Invalid input. Please enter an integer.\")\n\nif __name__ == \"__main__\":\n    main()\n```\n\n### Explanation:\n1. **Function Definition:**\n   - `fibonacci(n)`: This function generates the first `n` Fibonacci numbers.\n     - If `n` is less than or equal to 0, it prompts for a positive integer.\n     - For `n` equal to 1, it returns `[0]`.\n     - For `n` equal to 2, it returns `[0, 1]`.\n     - For `n` greater than 2, it calculates the Fibonacci sequence iteratively and returns the list of the first `n` numbers.\n\n2. **Main Function:**\n   - Prompts the user to enter the number of Fibonacci numbers to generate.\n   - Handles invalid inputs (non-integer values) and negative integers.\n   - Calls the `fibonacci` function and prints the result.\n\n3. **Execution:**\n   - The script is executed by calling the `main` function when run directly.\n\nThis script ensures that the user inputs are handled correctly and provides the desired output for valid inputs."
    }
]