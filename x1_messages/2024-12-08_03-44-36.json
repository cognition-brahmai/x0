[
    {
        "role": "user",
        "content": "Create a C++ program that simulates a basic calculator capable of performing addition, subtraction, multiplication, and division operations on integers. The program should use object-oriented programming principles and include separate classes for each operation."
    },
    {
        "role": "assistant",
        "content": "Certainly! Below is a simple C++ program that simulates a basic calculator using object-oriented programming principles. The program includes separate classes for addition, subtraction, multiplication, and division operations.\n\n```cpp\n#include <iostream>\n\nclass Addition {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\nclass Subtraction {\npublic:\n    int subtract(int a, int b) {\n        return a - b;\n    }\n};\n\nclass Multiplication {\npublic:\n    int multiply(int a, int b) {\n        return a * b;\n    }\n};\n\nclass Division {\npublic:\n    int divide(int a, int b) {\n        if (b == 0) {\n            std::cout << \"Error: Division by zero is not allowed.\" << std::endl;\n            return 0;\n        }\n        return a / b;\n    }\n};\n\nint main() {\n    int num1, num2;\n    char operation;\n\n    std::cout << \"Enter first integer: \";\n    std::cin >> num1;\n    std::cout << \"Enter second integer: \";\n    std::cin >> num2;\n    std::cout << \"Enter operation (+, -, *, /): \";\n    std::cin >> operation;\n\n    Addition add;\n    Subtraction sub;\n    Multiplication mul;\n    Division div;\n\n    switch(operation) {\n        case '+':\n            std::cout << \"Result: \" << add.add(num1, num2) << std::endl;\n            break;\n        case '-':\n            std::cout << \"Result: \" << sub.subtract(num1, num2) << std::endl;\n            break;\n        case '*':\n            std::cout << \"Result: \" << mul.multiply(num1, num2) << std::endl;\n            break;\n        case '/':\n            std::cout << \"Result: \" << div.divide(num1, num2) << std::endl;\n            break;\n        default:\n            std::cout << \"Error: Invalid operation.\" << std::endl;\n            break;\n    }\n\n    return 0;\n}\n```\n\n### Explanation:\n\n1. **Class Definitions:**\n   - `Addition`: Contains a method `add` that takes two integers and returns their sum.\n   - `Subtraction`: Contains a method `subtract` that takes two integers and returns their difference.\n   - `Multiplication`: Contains a method `multiply` that takes two integers and returns their product.\n   - `Division`: Contains a method `divide` that takes two integers and returns their quotient. It also checks for division by zero.\n\n2. **Main Function:**\n   - Prompts the user to enter two integers and the operation they wish to perform (+, -, *, /).\n   - Creates objects of each operation class.\n   - Uses a switch statement to call the appropriate method based on the user's input and displays the result.\n\nThis program demonstrates basic object-oriented principles by encapsulating each operation within its own class, promoting code organization and reusability."
    }
]