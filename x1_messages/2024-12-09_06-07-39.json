[
    {
        "role": "user",
        "content": "Using PowerShell, write a script that checks the disk space of a Windows machine. If the free disk space falls below a certain threshold, the script should automatically clean up temporary files to free up space. PLAINFORMAT"
    },
    {
        "role": "assistant",
        "content": "Sure, I can help you with that! To create a PowerShell script that checks disk space and automatically cleans up temporary files if the free space falls below a certain threshold, follow these steps:\n\n1. **Check Disk Space**: Use the `Get-PSDrive` cmdlet to retrieve disk information.\n2. **Set Threshold**: Define the threshold for free disk space.\n3. **Check Against Threshold**: Compare the free space with the threshold.\n4. **Clean Up Temporary Files**: If the free space is below the threshold, use the `CleanMgr` tool or manually delete temporary files.\n\nBelow is a sample script that accomplishes this:\n\n```powershell\n# Define the drive to check (e.g., 'C:')\n$drive = \"C:\"\n\n# Define the threshold in GB (e.g., 10 GB)\n$threshold = 10\n\n# Get disk information\n$disk = Get-PSDrive -Name $drive\n\n# Convert free space to GB\n$freeSpaceGB = [math]::Round($disk.Free / 1GB, 2)\n\n# Check if free space is below threshold\nif ($freeSpaceGB -lt $threshold) {\n    Write-Output \"Free space on $drive is below $threshold GB. Current free space: $freeSpaceGB GB\"\n\n    # Clean up temporary files\n    Write-Output \"Cleaning up temporary files...\"\n    # Method 1: Using CleanMgr (requires administrative privileges)\n    # Start-Process cleanmgr -ArgumentList \"/sagerun:1\" -Wait\n\n    # Method 2: Manually delete temporary files\n    $tempFolders = @(\n        \"$env:windir\\Temp\",\n        \"$env:USERPROFILE\\AppData\\Local\\Temp\"\n    )\n\n    foreach ($folder in $tempFolders) {\n        if (Test-Path $folder) {\n            Remove-Item -Path $folder\\* -Recurse -Force -ErrorAction SilentlyContinue\n            Write-Output \"Cleared temporary files in $folder\"\n        }\n    }\n\n    # Re-check disk space after cleanup\n    $diskAfter = Get-PSDrive -Name $drive\n    $freeSpaceGBAfter = [math]::Round($diskAfter.Free / 1GB, 2)\n    Write-Output \"Free space after cleanup: $freeSpaceGBAfter GB\"\n} else {\n    Write-Output \"Free space on $drive is above $threshold GB. Current free space: $freeSpaceGB GB\"\n}\n```\n\n### Explanation:\n\n1. **Define Drive and Threshold**:\n   - Specify the drive letter (e.g., 'C:') and the threshold for free disk space in GB.\n\n2. **Get Disk Information**:\n   - Use `Get-PSDrive` to retrieve information about the specified drive.\n\n3. **Check Free Space**:\n   - Convert the free space to GB and compare it with the threshold.\n\n4. **Clean Up Temporary Files**:\n   - If free space is below the threshold, clean up temporary files.\n   - **Method 1**: Use `cleanmgr` with `/sagerun:1` to run disk cleanup.\n   - **Method 2**: Manually delete files in temporary folders like `C:\\Windows\\Temp` and `%USERPROFILE%\\AppData\\Local\\Temp`.\n\n5. **Re-Check Disk Space**:\n   - After cleanup, re-check and display the updated free space.\n\n### Notes:\n- **Administrative Privileges**: Some cleanup operations may require administrative privileges.\n- **Error Handling**: Basic error handling is included with `ErrorAction SilentlyContinue`, but you can enhance it based on your requirements.\n- **Scheduled Task**: Consider scheduling this script to run periodically using Task Scheduler to automate disk space management.\n\nI hope this helps! Let me know if you have any questions or need further assistance."
    }
]