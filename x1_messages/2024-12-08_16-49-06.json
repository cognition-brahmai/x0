[
    {
        "role": "user",
        "content": "Implement a Python script that interacts with Google Cloud Storage to perform the following tasks:\n   a. List all buckets in your project.\n   b. Upload a local file to a specified bucket.\n   c. Download a file from a specified bucket to a local directory.\nPLAINFORMAT"
    },
    {
        "role": "assistant",
        "content": "Sure, I can help you with that! To interact with Google Cloud Storage using Python, you'll need to use the `google-cloud-storage` library. If you haven't installed it yet, you can do so using pip:\n\n```bash\npip install google-cloud-storage\n```\n\nAlso, make sure you have set up authentication for your Google Cloud project. You can do this by setting the `GOOGLE_APPLICATION_CREDENTIALS` environment variable to the path of your service account key file.\n\nHere's a Python script that performs the tasks you've mentioned:\n\n```python\nfrom google.cloud import storage\n\ndef list_buckets():\n    \"\"\"Lists all buckets in your project.\"\"\"\n    storage_client = storage.Client()\n    buckets = storage_client.list_buckets()\n\n    print(\"Buckets:\")\n    for bucket in buckets:\n        print(bucket.name)\n    print()\n\ndef upload_blob(bucket_name, source_file_name, destination_blob_name):\n    \"\"\"Uploads a file to the bucket.\"\"\"\n    storage_client = storage.Client()\n    bucket = storage_client.get_bucket(bucket_name)\n    blob = bucket.blob(destination_blob_name)\n\n    blob.upload_from_filename(source_file_name)\n\n    print(f\"File {source_file_name} uploaded to {destination_blob_name}.\")\n\ndef download_blob(bucket_name, source_blob_name, destination_file_name):\n    \"\"\"Downloads a blob from the bucket.\"\"\"\n    storage_client = storage.Client()\n    bucket = storage_client.get_bucket(bucket_name)\n    blob = bucket.blob(source_blob_name)\n\n    blob.download_to_filename(destination_file_name)\n\n    print(f\"Blob {source_blob_name} downloaded to {destination_file_name}.\")\n\nif __name__ == \"__main__\":\n    # List all buckets\n    list_buckets()\n\n    # Upload a local file to a specified bucket\n    bucket_name = \"your-bucket-name\"\n    source_file_name = \"local/path/to/file\"\n    destination_blob_name = \"storage-object-name\"\n    upload_blob(bucket_name, source_file_name, destination_blob_name)\n\n    # Download a file from a specified bucket to a local directory\n    source_blob_name = \"storage-object-name\"\n    destination_file_name = \"local/path/to/save/file\"\n    download_blob(bucket_name, source_blob_name, destination_file_name)\n```\n\n### Explanation:\n\n1. **List All Buckets:**\n   - Create a `storage.Client()` object.\n   - Use `list_buckets()` method to get an iterable of all buckets.\n   - Print the names of the buckets.\n\n2. **Upload a Local File to a Specified Bucket:**\n   - Specify the bucket name, local file path, and the destination object name in the bucket.\n   - Get the bucket using `get_bucket()`.\n   - Create a `Blob` object for the destination object name.\n   - Use `upload_from_filename()` to upload the local file to the bucket.\n\n3. **Download a File from a Specified Bucket to a Local Directory:**\n   - Specify the bucket name, source object name, and the local destination path.\n   - Get the bucket using `get_bucket()`.\n   - Create a `Blob` object for the source object name.\n   - Use `download_to_filename()` to download the blob to the local path.\n\nMake sure to replace `\"your-bucket-name\"`, `\"local/path/to/file\"`, `\"storage-object-name\"`, and `\"local/path/to/save/file\"` with your actual values.\n\nThis script should help you manage files in Google Cloud Storage using Python. If you have any questions or need further assistance, feel free to ask!"
    }
]