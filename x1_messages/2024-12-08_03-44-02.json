[
    {
        "role": "user",
        "content": "Develop a Python script that connects to a Redis server, stores key-value pairs, and retrieves values based on user input."
    },
    {
        "role": "assistant",
        "content": "Alright, I'm going to help you create a Python script that interacts with a Redis server. We'll cover connecting to the server, storing key-value pairs, and retrieving values based on user input. Make sure you have Redis installed and running on your machine, and also install the `redis` package in Python if you haven't already. You can install it using pip:\n\n```bash\npip install redis\n```\n\nNow, let's break down the steps:\n\n1. **Connecting to the Redis server:**\n   - You'll need to know the host and port where your Redis server is running. By default, Redis runs on `localhost` and port `6379`.\n\n2. **Storing key-value pairs:**\n   - We'll allow the user to input keys and values to store in Redis.\n\n3. **Retrieving values:**\n   - Based on user input for a key, we'll fetch and display the corresponding value from Redis.\n\nLet's start by writing the code step by step.\n\nFirst, import the Redis library:\n\n```python\nimport redis\n```\n\nNext, set up the connection to the Redis server:\n\n```python\n# Connect to Redis\nredis_host = 'localhost'\nredis_port = 6379\nredis_password = ''\n\ntry:\n    r = redis.StrictRedis(host=redis_host, port=redis_port, password=redis_password, decode_responses=True)\n    print(\"Connected to Redis!\")\nexcept Exception as e:\n    print(f\"Cannot connect to Redis: {e}\")\n```\n\nNow, let's create a loop where the user can choose to store key-value pairs or retrieve values.\n\n```python\nwhile True:\n    print(\"\\nOptions:\")\n    print(\"1. Store key-value pair\")\n    print(\"2. Retrieve value by key\")\n    print(\"3. Exit\")\n    \n    choice = input(\"Enter your choice (1/2/3): \")\n    \n    if choice == '1':\n        key = input(\"Enter the key: \")\n        value = input(\"Enter the value: \")\n        r.set(key, value)\n        print(f\"Stored: {key} - {value}\")\n    elif choice == '2':\n        key = input(\"Enter the key to retrieve: \")\n        value = r.get(key)\n        if value:\n            print(f\"Value: {value}\")\n        else:\n            print(\"Key not found.\")\n    elif choice == '3':\n        print(\"Exiting...\")\n        break\n    else:\n        print(\"Invalid choice. Please enter 1, 2, or 3.\")\n```\n\nThis script provides a simple text-based interface for interacting with Redis. Users can choose to store new key-value pairs or retrieve existing values by entering the corresponding keys.\n\nMake sure your Redis server is running before you execute this script. You can start the Redis server using:\n\n```bash\nredis-server\n```\n\nAnd to check if it's running, you can use:\n\n```bash\nredis-cli ping\n```\n\nIf it replies with \"PONG\", the server is running correctly.\n\nThat's it! This should give you a basic Python script to interact with Redis using key-value operations based on user input.\n\n**Full Script:**\n\n```python\nimport redis\n\n# Connect to Redis\nredis_host = 'localhost'\nredis_port = 6379\nredis_password = ''\n\ntry:\n    r = redis.StrictRedis(host=redis_host, port=redis_port, password=redis_password, decode_responses=True)\n    print(\"Connected to Redis!\")\nexcept Exception as e:\n    print(f\"Cannot connect to Redis: {e}\")\n\nwhile True:\n    print(\"\\nOptions:\")\n    print(\"1. Store key-value pair\")\n    print(\"2. Retrieve value by key\")\n    print(\"3. Exit\")\n    \n    choice = input(\"Enter your choice (1/2/3): \")\n    \n    if choice == '1':\n        key = input(\"Enter the key: \")\n        value = input(\"Enter the value: \")\n        r.set(key, value)\n        print(f\"Stored: {key} - {value}\")\n    elif choice == '2':\n        key = input(\"Enter the key to retrieve: \")\n        value = r.get(key)\n        if value:\n            print(f\"Value: {value}\")\n        else:\n            print(\"Key not found.\")\n    elif choice == '3':\n        print(\"Exiting...\")\n        break\n    else:\n        print(\"Invalid choice. Please enter 1, 2, or 3.\")\n```\n\n**Explanation:**\n\n1. **Connecting to Redis:**\n   - We use `redis.StrictRedis` to connect to the Redis server with specified host and port.\n   \n2. **Storing Key-Value Pairs:**\n   - The user inputs a key and a value, which are then stored in Redis using `r.set(key, value)`.\n   \n3. **Retrieving Values:**\n   - The user inputs a key, and the script retrieves the corresponding value using `r.get(key)`. If the key exists, it prints the value; otherwise, it indicates that the key was not found.\n\nThis script provides a simple way to interact with a Redis server through a command-line interface, allowing for basic key-value operations."
    }
]